ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.blink_led,"ax",%progbits
  21              		.align	1
  22              		.global	blink_led
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	blink_led:
  28              	.LVL0:
  29              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** #include "FreeRTOS.h"
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 2


  30:Core/Src/main.c **** #include "shell.h"
  31:Core/Src/main.c **** #include "semphr.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define TASK_SHELL_STACK_DEPTH 512
  42:Core/Src/main.c **** #define TASK_SHELL_PRIORITY 1
  43:Core/Src/main.c **** #define STACK_SIZE 1000
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PM */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 	TaskHandle_t h_task_shell = NULL;
  55:Core/Src/main.c ****   TaskHandle_t h_task_led = NULL;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c ****   SemaphoreHandle_t xSemaphore;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c ****   static int delay;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* USER CODE END PV */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  64:Core/Src/main.c **** void SystemClock_Config(void);
  65:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  66:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  67:Core/Src/main.c **** void blink_led(void *unsued);
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* USER CODE END PFP */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  72:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  73:Core/Src/main.c **** void blink_led(void *unsued){
  30              		.loc 1 73 29 view -0
  31              		.cfi_startproc
  32              		@ Volatile: function does not return.
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 73 29 is_stmt 0 view .LVU1
  36 0000 08B5     		push	{r3, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   vTaskSuspend(h_task_led);
  40              		.loc 1 75 3 is_stmt 1 view .LVU2
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 3


  41 0002 064B     		ldr	r3, .L4
  42 0004 1868     		ldr	r0, [r3]
  43              	.LVL1:
  44              		.loc 1 75 3 is_stmt 0 view .LVU3
  45 0006 FFF7FEFF 		bl	vTaskSuspend
  46              	.LVL2:
  47              	.L2:
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   while(1)
  48              		.loc 1 77 3 is_stmt 1 discriminator 1 view .LVU4
  78:Core/Src/main.c ****   {
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****     HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  49              		.loc 1 80 5 discriminator 1 view .LVU5
  50 000a 0221     		movs	r1, #2
  51 000c 0448     		ldr	r0, .L4+4
  52 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
  53              	.LVL3:
  81:Core/Src/main.c ****     vTaskDelay(delay);
  54              		.loc 1 81 5 discriminator 1 view .LVU6
  55 0012 044B     		ldr	r3, .L4+8
  56 0014 1868     		ldr	r0, [r3]
  57 0016 FFF7FEFF 		bl	vTaskDelay
  58              	.LVL4:
  77:Core/Src/main.c ****   {
  59              		.loc 1 77 8 discriminator 1 view .LVU7
  60 001a F6E7     		b	.L2
  61              	.L5:
  62              		.align	2
  63              	.L4:
  64 001c 00000000 		.word	h_task_led
  65 0020 00200240 		.word	1073881088
  66 0024 00000000 		.word	delay
  67              		.cfi_endproc
  68              	.LFE149:
  70              		.section	.rodata.spam.str1.4,"aMS",%progbits,1
  71              		.align	2
  72              	.LC0:
  73 0000 4A652073 		.ascii	"Je suis la fonction spam\015\000"
  73      75697320 
  73      6C612066 
  73      6F6E6374 
  73      696F6E20 
  74              		.section	.text.spam,"ax",%progbits
  75              		.align	1
  76              		.global	spam
  77              		.syntax unified
  78              		.thumb
  79              		.thumb_func
  81              	spam:
  82              	.LVL5:
  83              	.LFB155:
  82:Core/Src/main.c ****     
  83:Core/Src/main.c ****   }
  84:Core/Src/main.c **** }
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** int __io_putchar(int ch)
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 4


  87:Core/Src/main.c **** {
  88:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY);
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 	return ch;
  91:Core/Src/main.c **** }
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  94:Core/Src/main.c **** {
  95:Core/Src/main.c **** 	if (huart->Instance == USART1)
  96:Core/Src/main.c **** 	{
  97:Core/Src/main.c **** 		shell_uart_receive_irq_cb();	// C'est la fonction qui donne le s√©maphore!
  98:Core/Src/main.c **** 	}
  99:Core/Src/main.c **** }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** int fonction(int argc, char ** argv)
 102:Core/Src/main.c **** {
 103:Core/Src/main.c **** 	printf("Je suis une fonction bidon\r\n");
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** 	printf("argc = %d\r\n", argc);
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** 	for (int i = 0 ; i < argc ; i++)
 108:Core/Src/main.c **** 	{
 109:Core/Src/main.c **** 		printf("arg %d = %s\r\n", i, argv[i]);
 110:Core/Src/main.c **** 	}
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 	return 0;
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** int addition(int argc, char ** argv)
 116:Core/Src/main.c **** {
 117:Core/Src/main.c **** 	if (argc == 3)
 118:Core/Src/main.c **** 	{
 119:Core/Src/main.c **** 		int a, b;
 120:Core/Src/main.c **** 		a = atoi(argv[1]);
 121:Core/Src/main.c **** 		b = atoi(argv[2]);
 122:Core/Src/main.c **** 		printf("%d + %d = %d\r\n", a, b, a+b);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** 		return 0;
 125:Core/Src/main.c **** 	}
 126:Core/Src/main.c **** 	else
 127:Core/Src/main.c **** 	{
 128:Core/Src/main.c **** 		printf("Erreur, pas le bon nombre d'arguments\r\n");
 129:Core/Src/main.c **** 		return -1;
 130:Core/Src/main.c **** 	}
 131:Core/Src/main.c **** }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** int timer(int argc, char ** argv)
 134:Core/Src/main.c **** {
 135:Core/Src/main.c ****   printf("Je suis la fonction periode\r\n");
 136:Core/Src/main.c ****   int a;
 137:Core/Src/main.c ****   a = atoi(argv[1]);
 138:Core/Src/main.c ****   printf("%d\r\n",a);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   if (a == 0)
 141:Core/Src/main.c ****   {
 142:Core/Src/main.c ****     vTaskSuspend(h_task_led);
 143:Core/Src/main.c ****   } else {
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 5


 144:Core/Src/main.c ****     delay = a;
 145:Core/Src/main.c ****     printf("%d\r\n",delay);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****     vTaskResume(h_task_led);
 148:Core/Src/main.c ****   }
 149:Core/Src/main.c ****   return 0;
 150:Core/Src/main.c **** }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** int spam(int argc, char **argv)
 153:Core/Src/main.c **** {
  84              		.loc 1 153 1 view -0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		.loc 1 153 1 is_stmt 0 view .LVU9
  89 0000 08B5     		push	{r3, lr}
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 3, -8
  92              		.cfi_offset 14, -4
 154:Core/Src/main.c ****   printf("Je suis la fonction spam\r\n");
  93              		.loc 1 154 3 is_stmt 1 view .LVU10
  94 0002 0248     		ldr	r0, .L8
  95              	.LVL6:
  96              		.loc 1 154 3 is_stmt 0 view .LVU11
  97 0004 FFF7FEFF 		bl	puts
  98              	.LVL7:
 155:Core/Src/main.c **** }
  99              		.loc 1 155 1 view .LVU12
 100 0008 08BD     		pop	{r3, pc}
 101              	.L9:
 102 000a 00BF     		.align	2
 103              	.L8:
 104 000c 00000000 		.word	.LC0
 105              		.cfi_endproc
 106              	.LFE155:
 108              		.section	.rodata.fonction.str1.4,"aMS",%progbits,1
 109              		.align	2
 110              	.LC1:
 111 0000 4A652073 		.ascii	"Je suis une fonction bidon\015\000"
 111      75697320 
 111      756E6520 
 111      666F6E63 
 111      74696F6E 
 112              		.align	2
 113              	.LC2:
 114 001c 61726763 		.ascii	"argc = %d\015\012\000"
 114      203D2025 
 114      640D0A00 
 115              		.align	2
 116              	.LC3:
 117 0028 61726720 		.ascii	"arg %d = %s\015\012\000"
 117      2564203D 
 117      2025730D 
 117      0A00
 118              		.section	.text.fonction,"ax",%progbits
 119              		.align	1
 120              		.global	fonction
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 6


 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	fonction:
 126              	.LVL8:
 127              	.LFB152:
 102:Core/Src/main.c **** 	printf("Je suis une fonction bidon\r\n");
 128              		.loc 1 102 1 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 102:Core/Src/main.c **** 	printf("Je suis une fonction bidon\r\n");
 132              		.loc 1 102 1 is_stmt 0 view .LVU14
 133 0000 70B5     		push	{r4, r5, r6, lr}
 134              		.cfi_def_cfa_offset 16
 135              		.cfi_offset 4, -16
 136              		.cfi_offset 5, -12
 137              		.cfi_offset 6, -8
 138              		.cfi_offset 14, -4
 139 0002 0546     		mov	r5, r0
 140 0004 0E46     		mov	r6, r1
 103:Core/Src/main.c **** 
 141              		.loc 1 103 2 is_stmt 1 view .LVU15
 142 0006 0A48     		ldr	r0, .L14
 143              	.LVL9:
 103:Core/Src/main.c **** 
 144              		.loc 1 103 2 is_stmt 0 view .LVU16
 145 0008 FFF7FEFF 		bl	puts
 146              	.LVL10:
 105:Core/Src/main.c **** 
 147              		.loc 1 105 2 is_stmt 1 view .LVU17
 148 000c 2946     		mov	r1, r5
 149 000e 0948     		ldr	r0, .L14+4
 150 0010 FFF7FEFF 		bl	printf
 151              	.LVL11:
 107:Core/Src/main.c **** 	{
 152              		.loc 1 107 2 view .LVU18
 153              	.LBB4:
 107:Core/Src/main.c **** 	{
 154              		.loc 1 107 7 view .LVU19
 107:Core/Src/main.c **** 	{
 155              		.loc 1 107 11 is_stmt 0 view .LVU20
 156 0014 0024     		movs	r4, #0
 107:Core/Src/main.c **** 	{
 157              		.loc 1 107 2 view .LVU21
 158 0016 06E0     		b	.L11
 159              	.LVL12:
 160              	.L12:
 109:Core/Src/main.c **** 	}
 161              		.loc 1 109 3 is_stmt 1 discriminator 3 view .LVU22
 162 0018 56F82420 		ldr	r2, [r6, r4, lsl #2]
 163 001c 2146     		mov	r1, r4
 164 001e 0648     		ldr	r0, .L14+8
 165 0020 FFF7FEFF 		bl	printf
 166              	.LVL13:
 107:Core/Src/main.c **** 	{
 167              		.loc 1 107 31 discriminator 3 view .LVU23
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 7


 168 0024 0134     		adds	r4, r4, #1
 169              	.LVL14:
 170              	.L11:
 107:Core/Src/main.c **** 	{
 171              		.loc 1 107 21 discriminator 1 view .LVU24
 172 0026 AC42     		cmp	r4, r5
 173 0028 F6DB     		blt	.L12
 174              	.LBE4:
 112:Core/Src/main.c **** }
 175              		.loc 1 112 2 view .LVU25
 113:Core/Src/main.c **** 
 176              		.loc 1 113 1 is_stmt 0 view .LVU26
 177 002a 0020     		movs	r0, #0
 178 002c 70BD     		pop	{r4, r5, r6, pc}
 179              	.LVL15:
 180              	.L15:
 113:Core/Src/main.c **** 
 181              		.loc 1 113 1 view .LVU27
 182 002e 00BF     		.align	2
 183              	.L14:
 184 0030 00000000 		.word	.LC1
 185 0034 1C000000 		.word	.LC2
 186 0038 28000000 		.word	.LC3
 187              		.cfi_endproc
 188              	.LFE152:
 190              		.section	.rodata.addition.str1.4,"aMS",%progbits,1
 191              		.align	2
 192              	.LC4:
 193 0000 2564202B 		.ascii	"%d + %d = %d\015\012\000"
 193      20256420 
 193      3D202564 
 193      0D0A00
 194 000f 00       		.align	2
 195              	.LC5:
 196 0010 45727265 		.ascii	"Erreur, pas le bon nombre d'arguments\015\000"
 196      75722C20 
 196      70617320 
 196      6C652062 
 196      6F6E206E 
 197              		.section	.text.addition,"ax",%progbits
 198              		.align	1
 199              		.global	addition
 200              		.syntax unified
 201              		.thumb
 202              		.thumb_func
 204              	addition:
 205              	.LVL16:
 206              	.LFB153:
 116:Core/Src/main.c **** 	if (argc == 3)
 207              		.loc 1 116 1 is_stmt 1 view -0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 116:Core/Src/main.c **** 	if (argc == 3)
 211              		.loc 1 116 1 is_stmt 0 view .LVU29
 212 0000 38B5     		push	{r3, r4, r5, lr}
 213              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 8


 214              		.cfi_offset 3, -16
 215              		.cfi_offset 4, -12
 216              		.cfi_offset 5, -8
 217              		.cfi_offset 14, -4
 117:Core/Src/main.c **** 	{
 218              		.loc 1 117 2 is_stmt 1 view .LVU30
 117:Core/Src/main.c **** 	{
 219              		.loc 1 117 5 is_stmt 0 view .LVU31
 220 0002 0328     		cmp	r0, #3
 221 0004 0FD1     		bne	.L17
 222 0006 0C46     		mov	r4, r1
 223              	.LBB5:
 119:Core/Src/main.c **** 		a = atoi(argv[1]);
 224              		.loc 1 119 3 is_stmt 1 view .LVU32
 120:Core/Src/main.c **** 		b = atoi(argv[2]);
 225              		.loc 1 120 3 view .LVU33
 120:Core/Src/main.c **** 		b = atoi(argv[2]);
 226              		.loc 1 120 7 is_stmt 0 view .LVU34
 227 0008 4868     		ldr	r0, [r1, #4]
 228              	.LVL17:
 120:Core/Src/main.c **** 		b = atoi(argv[2]);
 229              		.loc 1 120 7 view .LVU35
 230 000a FFF7FEFF 		bl	atoi
 231              	.LVL18:
 120:Core/Src/main.c **** 		b = atoi(argv[2]);
 232              		.loc 1 120 7 view .LVU36
 233 000e 0546     		mov	r5, r0
 234              	.LVL19:
 121:Core/Src/main.c **** 		printf("%d + %d = %d\r\n", a, b, a+b);
 235              		.loc 1 121 3 is_stmt 1 view .LVU37
 121:Core/Src/main.c **** 		printf("%d + %d = %d\r\n", a, b, a+b);
 236              		.loc 1 121 7 is_stmt 0 view .LVU38
 237 0010 A068     		ldr	r0, [r4, #8]
 238              	.LVL20:
 121:Core/Src/main.c **** 		printf("%d + %d = %d\r\n", a, b, a+b);
 239              		.loc 1 121 7 view .LVU39
 240 0012 FFF7FEFF 		bl	atoi
 241              	.LVL21:
 242 0016 0246     		mov	r2, r0
 243              	.LVL22:
 122:Core/Src/main.c **** 
 244              		.loc 1 122 3 is_stmt 1 view .LVU40
 245 0018 2B18     		adds	r3, r5, r0
 246 001a 2946     		mov	r1, r5
 247 001c 0548     		ldr	r0, .L20
 248              	.LVL23:
 122:Core/Src/main.c **** 
 249              		.loc 1 122 3 is_stmt 0 view .LVU41
 250 001e FFF7FEFF 		bl	printf
 251              	.LVL24:
 124:Core/Src/main.c **** 	}
 252              		.loc 1 124 3 is_stmt 1 view .LVU42
 124:Core/Src/main.c **** 	}
 253              		.loc 1 124 10 is_stmt 0 view .LVU43
 254 0022 0020     		movs	r0, #0
 255              	.LVL25:
 256              	.L16:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 9


 124:Core/Src/main.c **** 	}
 257              		.loc 1 124 10 view .LVU44
 258              	.LBE5:
 131:Core/Src/main.c **** 
 259              		.loc 1 131 1 view .LVU45
 260 0024 38BD     		pop	{r3, r4, r5, pc}
 261              	.LVL26:
 262              	.L17:
 128:Core/Src/main.c **** 		return -1;
 263              		.loc 1 128 3 is_stmt 1 view .LVU46
 264 0026 0448     		ldr	r0, .L20+4
 265              	.LVL27:
 128:Core/Src/main.c **** 		return -1;
 266              		.loc 1 128 3 is_stmt 0 view .LVU47
 267 0028 FFF7FEFF 		bl	puts
 268              	.LVL28:
 129:Core/Src/main.c **** 	}
 269              		.loc 1 129 3 is_stmt 1 view .LVU48
 129:Core/Src/main.c **** 	}
 270              		.loc 1 129 10 is_stmt 0 view .LVU49
 271 002c 4FF0FF30 		mov	r0, #-1
 272 0030 F8E7     		b	.L16
 273              	.L21:
 274 0032 00BF     		.align	2
 275              	.L20:
 276 0034 00000000 		.word	.LC4
 277 0038 10000000 		.word	.LC5
 278              		.cfi_endproc
 279              	.LFE153:
 281              		.section	.rodata.timer.str1.4,"aMS",%progbits,1
 282              		.align	2
 283              	.LC6:
 284 0000 4A652073 		.ascii	"Je suis la fonction periode\015\000"
 284      75697320 
 284      6C612066 
 284      6F6E6374 
 284      696F6E20 
 285 001d 000000   		.align	2
 286              	.LC7:
 287 0020 25640D0A 		.ascii	"%d\015\012\000"
 287      00
 288              		.section	.text.timer,"ax",%progbits
 289              		.align	1
 290              		.global	timer
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	timer:
 296              	.LVL29:
 297              	.LFB154:
 134:Core/Src/main.c ****   printf("Je suis la fonction periode\r\n");
 298              		.loc 1 134 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 134:Core/Src/main.c ****   printf("Je suis la fonction periode\r\n");
 302              		.loc 1 134 1 is_stmt 0 view .LVU51
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 10


 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 0C46     		mov	r4, r1
 135:Core/Src/main.c ****   int a;
 308              		.loc 1 135 3 is_stmt 1 view .LVU52
 309 0004 0E48     		ldr	r0, .L26
 310              	.LVL30:
 135:Core/Src/main.c ****   int a;
 311              		.loc 1 135 3 is_stmt 0 view .LVU53
 312 0006 FFF7FEFF 		bl	puts
 313              	.LVL31:
 136:Core/Src/main.c ****   a = atoi(argv[1]);
 314              		.loc 1 136 3 is_stmt 1 view .LVU54
 137:Core/Src/main.c ****   printf("%d\r\n",a);
 315              		.loc 1 137 3 view .LVU55
 137:Core/Src/main.c ****   printf("%d\r\n",a);
 316              		.loc 1 137 7 is_stmt 0 view .LVU56
 317 000a 6068     		ldr	r0, [r4, #4]
 318 000c FFF7FEFF 		bl	atoi
 319              	.LVL32:
 320 0010 0446     		mov	r4, r0
 321              	.LVL33:
 138:Core/Src/main.c **** 
 322              		.loc 1 138 3 is_stmt 1 view .LVU57
 323 0012 0146     		mov	r1, r0
 324 0014 0B48     		ldr	r0, .L26+4
 325              	.LVL34:
 138:Core/Src/main.c **** 
 326              		.loc 1 138 3 is_stmt 0 view .LVU58
 327 0016 FFF7FEFF 		bl	printf
 328              	.LVL35:
 140:Core/Src/main.c ****   {
 329              		.loc 1 140 3 is_stmt 1 view .LVU59
 140:Core/Src/main.c ****   {
 330              		.loc 1 140 6 is_stmt 0 view .LVU60
 331 001a 2CB9     		cbnz	r4, .L23
 142:Core/Src/main.c ****   } else {
 332              		.loc 1 142 5 is_stmt 1 view .LVU61
 333 001c 0A4B     		ldr	r3, .L26+8
 334 001e 1868     		ldr	r0, [r3]
 335 0020 FFF7FEFF 		bl	vTaskSuspend
 336              	.LVL36:
 337              	.L24:
 149:Core/Src/main.c **** }
 338              		.loc 1 149 3 view .LVU62
 150:Core/Src/main.c **** 
 339              		.loc 1 150 1 is_stmt 0 view .LVU63
 340 0024 0020     		movs	r0, #0
 341 0026 10BD     		pop	{r4, pc}
 342              	.LVL37:
 343              	.L23:
 144:Core/Src/main.c ****     printf("%d\r\n",delay);
 344              		.loc 1 144 5 is_stmt 1 view .LVU64
 144:Core/Src/main.c ****     printf("%d\r\n",delay);
 345              		.loc 1 144 11 is_stmt 0 view .LVU65
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 11


 346 0028 084B     		ldr	r3, .L26+12
 347 002a 1C60     		str	r4, [r3]
 145:Core/Src/main.c **** 
 348              		.loc 1 145 5 is_stmt 1 view .LVU66
 349 002c 2146     		mov	r1, r4
 350 002e 0548     		ldr	r0, .L26+4
 351 0030 FFF7FEFF 		bl	printf
 352              	.LVL38:
 147:Core/Src/main.c ****   }
 353              		.loc 1 147 5 view .LVU67
 354 0034 044B     		ldr	r3, .L26+8
 355 0036 1868     		ldr	r0, [r3]
 356 0038 FFF7FEFF 		bl	vTaskResume
 357              	.LVL39:
 358 003c F2E7     		b	.L24
 359              	.L27:
 360 003e 00BF     		.align	2
 361              	.L26:
 362 0040 00000000 		.word	.LC6
 363 0044 20000000 		.word	.LC7
 364 0048 00000000 		.word	h_task_led
 365 004c 00000000 		.word	delay
 366              		.cfi_endproc
 367              	.LFE154:
 369              		.section	.rodata.task_shell.str1.4,"aMS",%progbits,1
 370              		.align	2
 371              	.LC8:
 372 0000 556E6520 		.ascii	"Une fonction inutile\000"
 372      666F6E63 
 372      74696F6E 
 372      20696E75 
 372      74696C65 
 373 0015 000000   		.align	2
 374              	.LC9:
 375 0018 45666665 		.ascii	"Effectue une somme\000"
 375      63747565 
 375      20756E65 
 375      20736F6D 
 375      6D6500
 376 002b 00       		.align	2
 377              	.LC10:
 378 002c 4368616E 		.ascii	"Change la p\303\251riode LED\000"
 378      6765206C 
 378      612070C3 
 378      A972696F 
 378      6465204C 
 379 0043 00       		.align	2
 380              	.LC11:
 381 0044 41666669 		.ascii	"Affichage sur console\000"
 381      63686167 
 381      65207375 
 381      7220636F 
 381      6E736F6C 
 382              		.section	.text.task_shell,"ax",%progbits
 383              		.align	1
 384              		.global	task_shell
 385              		.syntax unified
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 12


 386              		.thumb
 387              		.thumb_func
 389              	task_shell:
 390              	.LVL40:
 391              	.LFB156:
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** void task_shell(void * unused)
 158:Core/Src/main.c **** {
 392              		.loc 1 158 1 view -0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		.loc 1 158 1 is_stmt 0 view .LVU69
 397 0000 08B5     		push	{r3, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 3, -8
 400              		.cfi_offset 14, -4
 159:Core/Src/main.c **** 	shell_init();
 401              		.loc 1 159 2 is_stmt 1 view .LVU70
 402 0002 FFF7FEFF 		bl	shell_init
 403              	.LVL41:
 160:Core/Src/main.c **** 	shell_add('f', fonction, "Une fonction inutile");
 404              		.loc 1 160 2 view .LVU71
 405 0006 0B4A     		ldr	r2, .L30
 406 0008 0B49     		ldr	r1, .L30+4
 407 000a 6620     		movs	r0, #102
 408 000c FFF7FEFF 		bl	shell_add
 409              	.LVL42:
 161:Core/Src/main.c **** 	shell_add('a', addition, "Effectue une somme");
 410              		.loc 1 161 2 view .LVU72
 411 0010 0A4A     		ldr	r2, .L30+8
 412 0012 0B49     		ldr	r1, .L30+12
 413 0014 6120     		movs	r0, #97
 414 0016 FFF7FEFF 		bl	shell_add
 415              	.LVL43:
 162:Core/Src/main.c ****   shell_add('l',timer, "Change la p√©riode LED");
 416              		.loc 1 162 3 view .LVU73
 417 001a 0A4A     		ldr	r2, .L30+16
 418 001c 0A49     		ldr	r1, .L30+20
 419 001e 6C20     		movs	r0, #108
 420 0020 FFF7FEFF 		bl	shell_add
 421              	.LVL44:
 163:Core/Src/main.c ****   shell_add('s',spam,"Affichage sur console");
 422              		.loc 1 163 3 view .LVU74
 423 0024 094A     		ldr	r2, .L30+24
 424 0026 0A49     		ldr	r1, .L30+28
 425 0028 7320     		movs	r0, #115
 426 002a FFF7FEFF 		bl	shell_add
 427              	.LVL45:
 164:Core/Src/main.c **** 	shell_run();	// boucle infinie
 428              		.loc 1 164 2 view .LVU75
 429 002e FFF7FEFF 		bl	shell_run
 430              	.LVL46:
 165:Core/Src/main.c **** }
 431              		.loc 1 165 1 is_stmt 0 view .LVU76
 432 0032 08BD     		pop	{r3, pc}
 433              	.L31:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 13


 434              		.align	2
 435              	.L30:
 436 0034 00000000 		.word	.LC8
 437 0038 00000000 		.word	fonction
 438 003c 18000000 		.word	.LC9
 439 0040 00000000 		.word	addition
 440 0044 2C000000 		.word	.LC10
 441 0048 00000000 		.word	timer
 442 004c 44000000 		.word	.LC11
 443 0050 00000000 		.word	spam
 444              		.cfi_endproc
 445              	.LFE156:
 447              		.section	.text.__io_putchar,"ax",%progbits
 448              		.align	1
 449              		.global	__io_putchar
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	__io_putchar:
 455              	.LVL47:
 456              	.LFB150:
  87:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY);
 457              		.loc 1 87 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 8
 460              		@ frame_needed = 0, uses_anonymous_args = 0
  87:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY);
 461              		.loc 1 87 1 is_stmt 0 view .LVU78
 462 0000 00B5     		push	{lr}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 14, -4
 465 0002 83B0     		sub	sp, sp, #12
 466              		.cfi_def_cfa_offset 16
 467 0004 0190     		str	r0, [sp, #4]
  88:Core/Src/main.c **** 
 468              		.loc 1 88 2 is_stmt 1 view .LVU79
 469 0006 4FF0FF33 		mov	r3, #-1
 470 000a 0122     		movs	r2, #1
 471 000c 01A9     		add	r1, sp, #4
 472 000e 0348     		ldr	r0, .L34
 473              	.LVL48:
  88:Core/Src/main.c **** 
 474              		.loc 1 88 2 is_stmt 0 view .LVU80
 475 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 476              	.LVL49:
  90:Core/Src/main.c **** }
 477              		.loc 1 90 2 is_stmt 1 view .LVU81
  91:Core/Src/main.c **** 
 478              		.loc 1 91 1 is_stmt 0 view .LVU82
 479 0014 0198     		ldr	r0, [sp, #4]
 480 0016 03B0     		add	sp, sp, #12
 481              		.cfi_def_cfa_offset 4
 482              		@ sp needed
 483 0018 5DF804FB 		ldr	pc, [sp], #4
 484              	.L35:
 485              		.align	2
 486              	.L34:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 14


 487 001c 00000000 		.word	huart1
 488              		.cfi_endproc
 489              	.LFE150:
 491              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 492              		.align	1
 493              		.global	HAL_UART_RxCpltCallback
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	HAL_UART_RxCpltCallback:
 499              	.LVL50:
 500              	.LFB151:
  94:Core/Src/main.c **** 	if (huart->Instance == USART1)
 501              		.loc 1 94 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
  94:Core/Src/main.c **** 	if (huart->Instance == USART1)
 505              		.loc 1 94 1 is_stmt 0 view .LVU84
 506 0000 08B5     		push	{r3, lr}
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 3, -8
 509              		.cfi_offset 14, -4
  95:Core/Src/main.c **** 	{
 510              		.loc 1 95 2 is_stmt 1 view .LVU85
  95:Core/Src/main.c **** 	{
 511              		.loc 1 95 11 is_stmt 0 view .LVU86
 512 0002 0268     		ldr	r2, [r0]
  95:Core/Src/main.c **** 	{
 513              		.loc 1 95 5 view .LVU87
 514 0004 034B     		ldr	r3, .L40
 515 0006 9A42     		cmp	r2, r3
 516 0008 00D0     		beq	.L39
 517              	.LVL51:
 518              	.L36:
  99:Core/Src/main.c **** 
 519              		.loc 1 99 1 view .LVU88
 520 000a 08BD     		pop	{r3, pc}
 521              	.LVL52:
 522              	.L39:
  97:Core/Src/main.c **** 	}
 523              		.loc 1 97 3 is_stmt 1 view .LVU89
 524 000c FFF7FEFF 		bl	shell_uart_receive_irq_cb
 525              	.LVL53:
  99:Core/Src/main.c **** 
 526              		.loc 1 99 1 is_stmt 0 view .LVU90
 527 0010 FBE7     		b	.L36
 528              	.L41:
 529 0012 00BF     		.align	2
 530              	.L40:
 531 0014 00100140 		.word	1073811456
 532              		.cfi_endproc
 533              	.LFE151:
 535              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 536              		.align	1
 537              		.global	HAL_TIM_PeriodElapsedCallback
 538              		.syntax unified
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 15


 539              		.thumb
 540              		.thumb_func
 542              	HAL_TIM_PeriodElapsedCallback:
 543              	.LVL54:
 544              	.LFB159:
 166:Core/Src/main.c **** /* USER CODE END 0 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c **** /**
 169:Core/Src/main.c ****   * @brief  The application entry point.
 170:Core/Src/main.c ****   * @retval int
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c **** int main(void)
 173:Core/Src/main.c **** {
 174:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE END 1 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 181:Core/Src/main.c ****   HAL_Init();
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END Init */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Configure the system clock */
 188:Core/Src/main.c ****   SystemClock_Config();
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c ****   /* USER CODE END SysInit */
 193:Core/Src/main.c **** 
 194:Core/Src/main.c ****   /* Initialize all configured peripherals */
 195:Core/Src/main.c ****   MX_GPIO_Init();
 196:Core/Src/main.c ****   MX_USART1_UART_Init();
 197:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 198:Core/Src/main.c **** 	if (xTaskCreate(task_shell, "Shell", TASK_SHELL_STACK_DEPTH, NULL, 1, &h_task_shell) != pdPASS)
 199:Core/Src/main.c **** 	{
 200:Core/Src/main.c **** 		printf("Error creating task shell\r\n");
 201:Core/Src/main.c **** 		Error_Handler();
 202:Core/Src/main.c **** 	}
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   if(xTaskCreate(blink_led, "LED",STACK_SIZE,NULL,2,&h_task_led) != pdPASS)
 205:Core/Src/main.c ****   {
 206:Core/Src/main.c ****     printf("Error creating tak led\r\n");
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   xSemaphore = xSemaphoreCreateBinary();
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** 	vTaskStartScheduler();
 213:Core/Src/main.c ****   /* USER CODE END 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 216:Core/Src/main.c ****   MX_FREERTOS_Init();
 217:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 16


 218:Core/Src/main.c ****   /* Start scheduler */
 219:Core/Src/main.c ****   osKernelStart();
 220:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 221:Core/Src/main.c ****   /* Infinite loop */
 222:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 223:Core/Src/main.c **** 	while (1)
 224:Core/Src/main.c **** 	{
 225:Core/Src/main.c ****     /* USER CODE END WHILE */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 228:Core/Src/main.c **** 	}
 229:Core/Src/main.c ****   /* USER CODE END 3 */
 230:Core/Src/main.c **** }
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** /**
 233:Core/Src/main.c ****   * @brief System Clock Configuration
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** void SystemClock_Config(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 239:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 242:Core/Src/main.c ****   */
 243:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 244:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 247:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 248:Core/Src/main.c ****   */
 249:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 250:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 257:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 258:Core/Src/main.c ****   {
 259:Core/Src/main.c ****     Error_Handler();
 260:Core/Src/main.c ****   }
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /** Activate the Over-Drive mode
 263:Core/Src/main.c ****   */
 264:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 265:Core/Src/main.c ****   {
 266:Core/Src/main.c ****     Error_Handler();
 267:Core/Src/main.c ****   }
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 270:Core/Src/main.c ****   */
 271:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 272:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 273:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 274:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 17


 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 276:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 279:Core/Src/main.c ****   {
 280:Core/Src/main.c ****     Error_Handler();
 281:Core/Src/main.c ****   }
 282:Core/Src/main.c **** }
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** /* USER CODE END 4 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 290:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 291:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 292:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 293:Core/Src/main.c ****   * @param  htim : TIM handle
 294:Core/Src/main.c ****   * @retval None
 295:Core/Src/main.c ****   */
 296:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 297:Core/Src/main.c **** {
 545              		.loc 1 297 1 is_stmt 1 view -0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		.loc 1 297 1 is_stmt 0 view .LVU92
 550 0000 08B5     		push	{r3, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 3, -8
 553              		.cfi_offset 14, -4
 298:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 301:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 554              		.loc 1 301 3 is_stmt 1 view .LVU93
 555              		.loc 1 301 11 is_stmt 0 view .LVU94
 556 0002 0268     		ldr	r2, [r0]
 557              		.loc 1 301 6 view .LVU95
 558 0004 034B     		ldr	r3, .L46
 559 0006 9A42     		cmp	r2, r3
 560 0008 00D0     		beq	.L45
 561              	.LVL55:
 562              	.L42:
 302:Core/Src/main.c ****     HAL_IncTick();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 307:Core/Src/main.c **** }
 563              		.loc 1 307 1 view .LVU96
 564 000a 08BD     		pop	{r3, pc}
 565              	.LVL56:
 566              	.L45:
 302:Core/Src/main.c ****     HAL_IncTick();
 567              		.loc 1 302 5 is_stmt 1 view .LVU97
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 18


 568 000c FFF7FEFF 		bl	HAL_IncTick
 569              	.LVL57:
 570              		.loc 1 307 1 is_stmt 0 view .LVU98
 571 0010 FBE7     		b	.L42
 572              	.L47:
 573 0012 00BF     		.align	2
 574              	.L46:
 575 0014 00100040 		.word	1073745920
 576              		.cfi_endproc
 577              	.LFE159:
 579              		.section	.text.Error_Handler,"ax",%progbits
 580              		.align	1
 581              		.global	Error_Handler
 582              		.syntax unified
 583              		.thumb
 584              		.thumb_func
 586              	Error_Handler:
 587              	.LFB160:
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /**
 310:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 311:Core/Src/main.c ****   * @retval None
 312:Core/Src/main.c ****   */
 313:Core/Src/main.c **** void Error_Handler(void)
 314:Core/Src/main.c **** {
 588              		.loc 1 314 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ Volatile: function does not return.
 591              		@ args = 0, pretend = 0, frame = 0
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593              		@ link register save eliminated.
 315:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 316:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 317:Core/Src/main.c **** 	__disable_irq();
 594              		.loc 1 317 2 view .LVU100
 595              	.LBB6:
 596              	.LBI6:
 597              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 19


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 20


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 21


 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 598              		.loc 2 140 27 view .LVU101
 599              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 600              		.loc 2 142 3 view .LVU102
 601              		.syntax unified
 602              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 603 0000 72B6     		cpsid i
 604              	@ 0 "" 2
 605              		.thumb
 606              		.syntax unified
 607              	.L49:
 608              	.LBE7:
 609              	.LBE6:
 318:Core/Src/main.c **** 	while (1)
 610              		.loc 1 318 2 discriminator 1 view .LVU103
 319:Core/Src/main.c **** 	{
 320:Core/Src/main.c **** 	}
 611              		.loc 1 320 2 discriminator 1 view .LVU104
 318:Core/Src/main.c **** 	while (1)
 612              		.loc 1 318 8 discriminator 1 view .LVU105
 613 0002 FEE7     		b	.L49
 614              		.cfi_endproc
 615              	.LFE160:
 617              		.section	.text.SystemClock_Config,"ax",%progbits
 618              		.align	1
 619              		.global	SystemClock_Config
 620              		.syntax unified
 621              		.thumb
 622              		.thumb_func
 624              	SystemClock_Config:
 625              	.LFB158:
 237:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 626              		.loc 1 237 1 view -0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 80
 629              		@ frame_needed = 0, uses_anonymous_args = 0
 630 0000 00B5     		push	{lr}
 631              		.cfi_def_cfa_offset 4
 632              		.cfi_offset 14, -4
 633 0002 95B0     		sub	sp, sp, #84
 634              		.cfi_def_cfa_offset 88
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 635              		.loc 1 238 3 view .LVU107
 238:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 636              		.loc 1 238 22 is_stmt 0 view .LVU108
 637 0004 3022     		movs	r2, #48
 638 0006 0021     		movs	r1, #0
 639 0008 08A8     		add	r0, sp, #32
 640 000a FFF7FEFF 		bl	memset
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 22


 641              	.LVL58:
 239:Core/Src/main.c **** 
 642              		.loc 1 239 3 is_stmt 1 view .LVU109
 239:Core/Src/main.c **** 
 643              		.loc 1 239 22 is_stmt 0 view .LVU110
 644 000e 0023     		movs	r3, #0
 645 0010 0393     		str	r3, [sp, #12]
 646 0012 0493     		str	r3, [sp, #16]
 647 0014 0593     		str	r3, [sp, #20]
 648 0016 0693     		str	r3, [sp, #24]
 649 0018 0793     		str	r3, [sp, #28]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 650              		.loc 1 243 3 is_stmt 1 view .LVU111
 651              	.LBB8:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 652              		.loc 1 243 3 view .LVU112
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 653              		.loc 1 243 3 view .LVU113
 654 001a 234B     		ldr	r3, .L58
 655 001c 1A6C     		ldr	r2, [r3, #64]
 656 001e 42F08052 		orr	r2, r2, #268435456
 657 0022 1A64     		str	r2, [r3, #64]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 658              		.loc 1 243 3 view .LVU114
 659 0024 1B6C     		ldr	r3, [r3, #64]
 660 0026 03F08053 		and	r3, r3, #268435456
 661 002a 0193     		str	r3, [sp, #4]
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 662              		.loc 1 243 3 view .LVU115
 663 002c 019B     		ldr	r3, [sp, #4]
 664              	.LBE8:
 243:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 665              		.loc 1 243 3 view .LVU116
 244:Core/Src/main.c **** 
 666              		.loc 1 244 3 view .LVU117
 667              	.LBB9:
 244:Core/Src/main.c **** 
 668              		.loc 1 244 3 view .LVU118
 244:Core/Src/main.c **** 
 669              		.loc 1 244 3 view .LVU119
 670 002e 1F4B     		ldr	r3, .L58+4
 671 0030 1A68     		ldr	r2, [r3]
 672 0032 42F44042 		orr	r2, r2, #49152
 673 0036 1A60     		str	r2, [r3]
 244:Core/Src/main.c **** 
 674              		.loc 1 244 3 view .LVU120
 675 0038 1B68     		ldr	r3, [r3]
 676 003a 03F44043 		and	r3, r3, #49152
 677 003e 0293     		str	r3, [sp, #8]
 244:Core/Src/main.c **** 
 678              		.loc 1 244 3 view .LVU121
 679 0040 029B     		ldr	r3, [sp, #8]
 680              	.LBE9:
 244:Core/Src/main.c **** 
 681              		.loc 1 244 3 view .LVU122
 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 682              		.loc 1 249 3 view .LVU123
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 23


 249:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 683              		.loc 1 249 36 is_stmt 0 view .LVU124
 684 0042 0123     		movs	r3, #1
 685 0044 0893     		str	r3, [sp, #32]
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 686              		.loc 1 250 3 is_stmt 1 view .LVU125
 250:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 687              		.loc 1 250 30 is_stmt 0 view .LVU126
 688 0046 4FF48033 		mov	r3, #65536
 689 004a 0993     		str	r3, [sp, #36]
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 690              		.loc 1 251 3 is_stmt 1 view .LVU127
 251:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 691              		.loc 1 251 34 is_stmt 0 view .LVU128
 692 004c 0223     		movs	r3, #2
 693 004e 0E93     		str	r3, [sp, #56]
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 694              		.loc 1 252 3 is_stmt 1 view .LVU129
 252:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 695              		.loc 1 252 35 is_stmt 0 view .LVU130
 696 0050 4FF48002 		mov	r2, #4194304
 697 0054 0F92     		str	r2, [sp, #60]
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 698              		.loc 1 253 3 is_stmt 1 view .LVU131
 253:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 699              		.loc 1 253 30 is_stmt 0 view .LVU132
 700 0056 1922     		movs	r2, #25
 701 0058 1092     		str	r2, [sp, #64]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 702              		.loc 1 254 3 is_stmt 1 view .LVU133
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 703              		.loc 1 254 30 is_stmt 0 view .LVU134
 704 005a 4FF4D872 		mov	r2, #432
 705 005e 1192     		str	r2, [sp, #68]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 706              		.loc 1 255 3 is_stmt 1 view .LVU135
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 707              		.loc 1 255 30 is_stmt 0 view .LVU136
 708 0060 1293     		str	r3, [sp, #72]
 256:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 709              		.loc 1 256 3 is_stmt 1 view .LVU137
 256:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 710              		.loc 1 256 30 is_stmt 0 view .LVU138
 711 0062 1393     		str	r3, [sp, #76]
 257:Core/Src/main.c ****   {
 712              		.loc 1 257 3 is_stmt 1 view .LVU139
 257:Core/Src/main.c ****   {
 713              		.loc 1 257 7 is_stmt 0 view .LVU140
 714 0064 08A8     		add	r0, sp, #32
 715 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 716              	.LVL59:
 257:Core/Src/main.c ****   {
 717              		.loc 1 257 6 view .LVU141
 718 006a B0B9     		cbnz	r0, .L55
 264:Core/Src/main.c ****   {
 719              		.loc 1 264 3 is_stmt 1 view .LVU142
 264:Core/Src/main.c ****   {
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 24


 720              		.loc 1 264 7 is_stmt 0 view .LVU143
 721 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 722              	.LVL60:
 264:Core/Src/main.c ****   {
 723              		.loc 1 264 6 view .LVU144
 724 0070 A8B9     		cbnz	r0, .L56
 271:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 725              		.loc 1 271 3 is_stmt 1 view .LVU145
 271:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 726              		.loc 1 271 31 is_stmt 0 view .LVU146
 727 0072 0F23     		movs	r3, #15
 728 0074 0393     		str	r3, [sp, #12]
 273:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 729              		.loc 1 273 3 is_stmt 1 view .LVU147
 273:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 730              		.loc 1 273 34 is_stmt 0 view .LVU148
 731 0076 0223     		movs	r3, #2
 732 0078 0493     		str	r3, [sp, #16]
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 733              		.loc 1 274 3 is_stmt 1 view .LVU149
 274:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 734              		.loc 1 274 35 is_stmt 0 view .LVU150
 735 007a 0023     		movs	r3, #0
 736 007c 0593     		str	r3, [sp, #20]
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 737              		.loc 1 275 3 is_stmt 1 view .LVU151
 275:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 738              		.loc 1 275 36 is_stmt 0 view .LVU152
 739 007e 4FF4A053 		mov	r3, #5120
 740 0082 0693     		str	r3, [sp, #24]
 276:Core/Src/main.c **** 
 741              		.loc 1 276 3 is_stmt 1 view .LVU153
 276:Core/Src/main.c **** 
 742              		.loc 1 276 36 is_stmt 0 view .LVU154
 743 0084 4FF48053 		mov	r3, #4096
 744 0088 0793     		str	r3, [sp, #28]
 278:Core/Src/main.c ****   {
 745              		.loc 1 278 3 is_stmt 1 view .LVU155
 278:Core/Src/main.c ****   {
 746              		.loc 1 278 7 is_stmt 0 view .LVU156
 747 008a 0721     		movs	r1, #7
 748 008c 03A8     		add	r0, sp, #12
 749 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 750              	.LVL61:
 278:Core/Src/main.c ****   {
 751              		.loc 1 278 6 view .LVU157
 752 0092 30B9     		cbnz	r0, .L57
 282:Core/Src/main.c **** 
 753              		.loc 1 282 1 view .LVU158
 754 0094 15B0     		add	sp, sp, #84
 755              		.cfi_remember_state
 756              		.cfi_def_cfa_offset 4
 757              		@ sp needed
 758 0096 5DF804FB 		ldr	pc, [sp], #4
 759              	.L55:
 760              		.cfi_restore_state
 259:Core/Src/main.c ****   }
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 25


 761              		.loc 1 259 5 is_stmt 1 view .LVU159
 762 009a FFF7FEFF 		bl	Error_Handler
 763              	.LVL62:
 764              	.L56:
 266:Core/Src/main.c ****   }
 765              		.loc 1 266 5 view .LVU160
 766 009e FFF7FEFF 		bl	Error_Handler
 767              	.LVL63:
 768              	.L57:
 280:Core/Src/main.c ****   }
 769              		.loc 1 280 5 view .LVU161
 770 00a2 FFF7FEFF 		bl	Error_Handler
 771              	.LVL64:
 772              	.L59:
 773 00a6 00BF     		.align	2
 774              	.L58:
 775 00a8 00380240 		.word	1073887232
 776 00ac 00700040 		.word	1073770496
 777              		.cfi_endproc
 778              	.LFE158:
 780              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 781              		.align	2
 782              	.LC12:
 783 0000 5368656C 		.ascii	"Shell\000"
 783      6C00
 784 0006 0000     		.align	2
 785              	.LC13:
 786 0008 4572726F 		.ascii	"Error creating task shell\015\000"
 786      72206372 
 786      65617469 
 786      6E672074 
 786      61736B20 
 787 0023 00       		.align	2
 788              	.LC14:
 789 0024 4C454400 		.ascii	"LED\000"
 790              		.align	2
 791              	.LC15:
 792 0028 4572726F 		.ascii	"Error creating tak led\015\000"
 792      72206372 
 792      65617469 
 792      6E672074 
 792      616B206C 
 793              		.section	.text.main,"ax",%progbits
 794              		.align	1
 795              		.global	main
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 800              	main:
 801              	.LFB157:
 173:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 802              		.loc 1 173 1 view -0
 803              		.cfi_startproc
 804              		@ Volatile: function does not return.
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807 0000 00B5     		push	{lr}
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 26


 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 14, -4
 810 0002 83B0     		sub	sp, sp, #12
 811              		.cfi_def_cfa_offset 16
 181:Core/Src/main.c **** 
 812              		.loc 1 181 3 view .LVU163
 813 0004 FFF7FEFF 		bl	HAL_Init
 814              	.LVL65:
 188:Core/Src/main.c **** 
 815              		.loc 1 188 3 view .LVU164
 816 0008 FFF7FEFF 		bl	SystemClock_Config
 817              	.LVL66:
 195:Core/Src/main.c ****   MX_USART1_UART_Init();
 818              		.loc 1 195 3 view .LVU165
 819 000c FFF7FEFF 		bl	MX_GPIO_Init
 820              	.LVL67:
 196:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 821              		.loc 1 196 3 view .LVU166
 822 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 823              	.LVL68:
 198:Core/Src/main.c **** 	{
 824              		.loc 1 198 2 view .LVU167
 198:Core/Src/main.c **** 	{
 825              		.loc 1 198 6 is_stmt 0 view .LVU168
 826 0014 184B     		ldr	r3, .L65
 827 0016 0193     		str	r3, [sp, #4]
 828 0018 0123     		movs	r3, #1
 829 001a 0093     		str	r3, [sp]
 830 001c 0023     		movs	r3, #0
 831 001e 4FF40072 		mov	r2, #512
 832 0022 1649     		ldr	r1, .L65+4
 833 0024 1648     		ldr	r0, .L65+8
 834 0026 FFF7FEFF 		bl	xTaskCreate
 835              	.LVL69:
 198:Core/Src/main.c **** 	{
 836              		.loc 1 198 5 view .LVU169
 837 002a 0128     		cmp	r0, #1
 838 002c 04D0     		beq	.L61
 200:Core/Src/main.c **** 		Error_Handler();
 839              		.loc 1 200 3 is_stmt 1 view .LVU170
 840 002e 1548     		ldr	r0, .L65+12
 841 0030 FFF7FEFF 		bl	puts
 842              	.LVL70:
 201:Core/Src/main.c **** 	}
 843              		.loc 1 201 3 view .LVU171
 844 0034 FFF7FEFF 		bl	Error_Handler
 845              	.LVL71:
 846              	.L61:
 204:Core/Src/main.c ****   {
 847              		.loc 1 204 3 view .LVU172
 204:Core/Src/main.c ****   {
 848              		.loc 1 204 6 is_stmt 0 view .LVU173
 849 0038 134B     		ldr	r3, .L65+16
 850 003a 0193     		str	r3, [sp, #4]
 851 003c 0223     		movs	r3, #2
 852 003e 0093     		str	r3, [sp]
 853 0040 0023     		movs	r3, #0
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 27


 854 0042 4FF47A72 		mov	r2, #1000
 855 0046 1149     		ldr	r1, .L65+20
 856 0048 1148     		ldr	r0, .L65+24
 857 004a FFF7FEFF 		bl	xTaskCreate
 858              	.LVL72:
 204:Core/Src/main.c ****   {
 859              		.loc 1 204 5 view .LVU174
 860 004e 0128     		cmp	r0, #1
 861 0050 04D0     		beq	.L62
 206:Core/Src/main.c ****     Error_Handler();
 862              		.loc 1 206 5 is_stmt 1 view .LVU175
 863 0052 1048     		ldr	r0, .L65+28
 864 0054 FFF7FEFF 		bl	puts
 865              	.LVL73:
 207:Core/Src/main.c ****   }
 866              		.loc 1 207 5 view .LVU176
 867 0058 FFF7FEFF 		bl	Error_Handler
 868              	.LVL74:
 869              	.L62:
 210:Core/Src/main.c **** 
 870              		.loc 1 210 3 view .LVU177
 210:Core/Src/main.c **** 
 871              		.loc 1 210 16 is_stmt 0 view .LVU178
 872 005c 0322     		movs	r2, #3
 873 005e 0021     		movs	r1, #0
 874 0060 0120     		movs	r0, #1
 875 0062 FFF7FEFF 		bl	xQueueGenericCreate
 876              	.LVL75:
 210:Core/Src/main.c **** 
 877              		.loc 1 210 14 view .LVU179
 878 0066 0C4B     		ldr	r3, .L65+32
 879 0068 1860     		str	r0, [r3]
 212:Core/Src/main.c ****   /* USER CODE END 2 */
 880              		.loc 1 212 2 is_stmt 1 view .LVU180
 881 006a FFF7FEFF 		bl	vTaskStartScheduler
 882              	.LVL76:
 216:Core/Src/main.c **** 
 883              		.loc 1 216 3 view .LVU181
 884 006e FFF7FEFF 		bl	MX_FREERTOS_Init
 885              	.LVL77:
 219:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 886              		.loc 1 219 3 view .LVU182
 887 0072 FFF7FEFF 		bl	osKernelStart
 888              	.LVL78:
 889              	.L63:
 223:Core/Src/main.c **** 	{
 890              		.loc 1 223 2 discriminator 1 view .LVU183
 228:Core/Src/main.c ****   /* USER CODE END 3 */
 891              		.loc 1 228 2 discriminator 1 view .LVU184
 223:Core/Src/main.c **** 	{
 892              		.loc 1 223 8 discriminator 1 view .LVU185
 893 0076 FEE7     		b	.L63
 894              	.L66:
 895              		.align	2
 896              	.L65:
 897 0078 00000000 		.word	h_task_shell
 898 007c 00000000 		.word	.LC12
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 28


 899 0080 00000000 		.word	task_shell
 900 0084 08000000 		.word	.LC13
 901 0088 00000000 		.word	h_task_led
 902 008c 24000000 		.word	.LC14
 903 0090 00000000 		.word	blink_led
 904 0094 28000000 		.word	.LC15
 905 0098 00000000 		.word	xSemaphore
 906              		.cfi_endproc
 907              	.LFE157:
 909              		.section	.bss.delay,"aw",%nobits
 910              		.align	2
 913              	delay:
 914 0000 00000000 		.space	4
 915              		.global	xSemaphore
 916              		.section	.bss.xSemaphore,"aw",%nobits
 917              		.align	2
 920              	xSemaphore:
 921 0000 00000000 		.space	4
 922              		.global	h_task_led
 923              		.section	.bss.h_task_led,"aw",%nobits
 924              		.align	2
 927              	h_task_led:
 928 0000 00000000 		.space	4
 929              		.global	h_task_shell
 930              		.section	.bss.h_task_shell,"aw",%nobits
 931              		.align	2
 934              	h_task_shell:
 935 0000 00000000 		.space	4
 936              		.text
 937              	.Letext0:
 938              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 939              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 940              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 941              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 942              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 943              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 944              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 945              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 946              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 947              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 948              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 949              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 950              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 951              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 952              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 953              		.file 18 "Core/Inc/usart.h"
 954              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 955              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 956              		.file 21 "Core/Inc/gpio.h"
 957              		.file 22 "shell/shell.h"
 958              		.file 23 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 959              		.file 24 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 960              		.file 25 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 961              		.file 26 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:21     .text.blink_led:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:27     .text.blink_led:0000000000000000 blink_led
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:64     .text.blink_led:000000000000001c $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:927    .bss.h_task_led:0000000000000000 h_task_led
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:913    .bss.delay:0000000000000000 delay
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:71     .rodata.spam.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:75     .text.spam:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:81     .text.spam:0000000000000000 spam
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:104    .text.spam:000000000000000c $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:109    .rodata.fonction.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:119    .text.fonction:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:125    .text.fonction:0000000000000000 fonction
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:184    .text.fonction:0000000000000030 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:191    .rodata.addition.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:198    .text.addition:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:204    .text.addition:0000000000000000 addition
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:276    .text.addition:0000000000000034 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:282    .rodata.timer.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:289    .text.timer:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:295    .text.timer:0000000000000000 timer
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:362    .text.timer:0000000000000040 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:370    .rodata.task_shell.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:383    .text.task_shell:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:389    .text.task_shell:0000000000000000 task_shell
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:436    .text.task_shell:0000000000000034 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:448    .text.__io_putchar:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:454    .text.__io_putchar:0000000000000000 __io_putchar
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:487    .text.__io_putchar:000000000000001c $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:492    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:498    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:531    .text.HAL_UART_RxCpltCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:536    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:542    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:575    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:580    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:586    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:618    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:624    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:775    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:781    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:794    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:800    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:897    .text.main:0000000000000078 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:934    .bss.h_task_shell:0000000000000000 h_task_shell
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:920    .bss.xSemaphore:0000000000000000 xSemaphore
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:910    .bss.delay:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:917    .bss.xSemaphore:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:924    .bss.h_task_led:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc6azr1E.s:931    .bss.h_task_shell:0000000000000000 $d

UNDEFINED SYMBOLS
vTaskSuspend
HAL_GPIO_TogglePin
vTaskDelay
puts
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc6azr1E.s 			page 30


printf
atoi
vTaskResume
shell_init
shell_add
shell_run
HAL_UART_Transmit
huart1
shell_uart_receive_irq_cb
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xTaskCreate
xQueueGenericCreate
vTaskStartScheduler
MX_FREERTOS_Init
osKernelStart
