ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.__io_putchar,"ax",%progbits
  21              		.align	1
  22              		.global	__io_putchar
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	__io_putchar:
  28              	.LVL0:
  29              	.LFB150:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** #include "FreeRTOS.h"
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 2


  30:Core/Src/main.c **** #include "shell.h"
  31:Core/Src/main.c **** #include "semphr.h"
  32:Core/Src/main.c **** #include "task.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** #define TASK_SHELL_STACK_DEPTH 512
  43:Core/Src/main.c **** #define TASK_SHELL_PRIORITY 1
  44:Core/Src/main.c **** #define STACK_SIZE 1000
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 	TaskHandle_t h_task_shell = NULL;
  56:Core/Src/main.c ****   TaskHandle_t h_task_led = NULL;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   TaskHandle_t h_of = NULL;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** void blink_led(void *unsued);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** void taskoverlfow(void *unused){
  73:Core/Src/main.c ****   
  74:Core/Src/main.c ****   while (1) {
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****     int *dynptr;
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****     //Allocation dynamique
  79:Core/Src/main.c ****     dynptr = (int)malloc( 32* sizeof(int));
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****     if (dynptr == NULL) {
  82:Core/Src/main.c ****       //Overflow
  83:Core/Src/main.c ****       printf("Failed to allocate memory\r\n");
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****       //Detextion erreur
  86:Core/Src/main.c ****       Error_Handler();
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 3


  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****     }
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     //Incr√©mentation de la taille de l'allocation
  91:Core/Src/main.c ****     dynptr ++;
  92:Core/Src/main.c ****     
  93:Core/Src/main.c ****     printf("L'adresse du ptr est 0x%x \r\n",dynptr);
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** }
  96:Core/Src/main.c **** }
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** int __io_putchar(int ch)
  99:Core/Src/main.c **** {
  30              		.loc 1 99 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 99 1 is_stmt 0 view .LVU1
  35 0000 00B5     		push	{lr}
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              		.cfi_def_cfa_offset 16
  40 0004 0190     		str	r0, [sp, #4]
 100:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY);
  41              		.loc 1 100 2 is_stmt 1 view .LVU2
  42 0006 4FF0FF33 		mov	r3, #-1
  43 000a 0122     		movs	r2, #1
  44 000c 01A9     		add	r1, sp, #4
  45 000e 0348     		ldr	r0, .L3
  46              	.LVL1:
  47              		.loc 1 100 2 is_stmt 0 view .LVU3
  48 0010 FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL2:
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 	return ch;
  50              		.loc 1 102 2 is_stmt 1 view .LVU4
 103:Core/Src/main.c **** }
  51              		.loc 1 103 1 is_stmt 0 view .LVU5
  52 0014 0198     		ldr	r0, [sp, #4]
  53 0016 03B0     		add	sp, sp, #12
  54              		.cfi_def_cfa_offset 4
  55              		@ sp needed
  56 0018 5DF804FB 		ldr	pc, [sp], #4
  57              	.L4:
  58              		.align	2
  59              	.L3:
  60 001c 00000000 		.word	huart1
  61              		.cfi_endproc
  62              	.LFE150:
  64              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  65              		.align	1
  66              		.global	HAL_TIM_PeriodElapsedCallback
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	HAL_TIM_PeriodElapsedCallback:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 4


  72              	.LVL3:
  73              	.LFB153:
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** /* USER CODE END 0 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** /**
 108:Core/Src/main.c ****   * @brief  The application entry point.
 109:Core/Src/main.c ****   * @retval int
 110:Core/Src/main.c ****   */
 111:Core/Src/main.c **** int main(void)
 112:Core/Src/main.c **** {
 113:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END 1 */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 120:Core/Src/main.c ****   HAL_Init();
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* USER CODE END Init */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* Configure the system clock */
 127:Core/Src/main.c ****   SystemClock_Config();
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE END SysInit */
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* Initialize all configured peripherals */
 134:Core/Src/main.c ****   MX_GPIO_Init();
 135:Core/Src/main.c ****   MX_USART1_UART_Init();
 136:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Create a taskGive*/
 139:Core/Src/main.c ****   xTaskCreate(
 140:Core/Src/main.c ****           taskoverlfow,       // Function to be called
 141:Core/Src/main.c ****           "Overflow",         // Name of task
 142:Core/Src/main.c ****           1024,     // Stack size
 143:Core/Src/main.c ****           NULL,  // Parameter to pass to function
 144:Core/Src/main.c ****           1,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 145:Core/Src/main.c ****           &h_of       // Task handle (allows to find and manipulate the task)
 146:Core/Src/main.c ****           );
 147:Core/Src/main.c ****   /* USER CODE END 2 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 150:Core/Src/main.c ****   MX_FREERTOS_Init();
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   /* Start scheduler */
 153:Core/Src/main.c ****   osKernelStart();
 154:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 155:Core/Src/main.c ****   /* Infinite loop */
 156:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 157:Core/Src/main.c **** 	while (1)
 158:Core/Src/main.c **** 	{
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 5


 159:Core/Src/main.c ****     /* USER CODE END WHILE */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 162:Core/Src/main.c **** 	}
 163:Core/Src/main.c ****   /* USER CODE END 3 */
 164:Core/Src/main.c **** }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief System Clock Configuration
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void SystemClock_Config(void)
 171:Core/Src/main.c **** {
 172:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 173:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 176:Core/Src/main.c ****   */
 177:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 178:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 181:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Activate the Over-Drive mode
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 204:Core/Src/main.c ****   */
 205:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 213:Core/Src/main.c ****   {
 214:Core/Src/main.c ****     Error_Handler();
 215:Core/Src/main.c ****   }
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 6


 216:Core/Src/main.c **** }
 217:Core/Src/main.c **** 
 218:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /* USER CODE END 4 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c **** /**
 223:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 224:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 225:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 226:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 227:Core/Src/main.c ****   * @param  htim : TIM handle
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 231:Core/Src/main.c **** {
  74              		.loc 1 231 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 231 1 is_stmt 0 view .LVU7
  79 0000 08B5     		push	{r3, lr}
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 232:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 235:Core/Src/main.c ****   if (htim->Instance == TIM6) {
  83              		.loc 1 235 3 is_stmt 1 view .LVU8
  84              		.loc 1 235 11 is_stmt 0 view .LVU9
  85 0002 0268     		ldr	r2, [r0]
  86              		.loc 1 235 6 view .LVU10
  87 0004 034B     		ldr	r3, .L9
  88 0006 9A42     		cmp	r2, r3
  89 0008 00D0     		beq	.L8
  90              	.LVL4:
  91              	.L5:
 236:Core/Src/main.c ****     HAL_IncTick();
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 241:Core/Src/main.c **** }
  92              		.loc 1 241 1 view .LVU11
  93 000a 08BD     		pop	{r3, pc}
  94              	.LVL5:
  95              	.L8:
 236:Core/Src/main.c ****     HAL_IncTick();
  96              		.loc 1 236 5 is_stmt 1 view .LVU12
  97 000c FFF7FEFF 		bl	HAL_IncTick
  98              	.LVL6:
  99              		.loc 1 241 1 is_stmt 0 view .LVU13
 100 0010 FBE7     		b	.L5
 101              	.L10:
 102 0012 00BF     		.align	2
 103              	.L9:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 7


 104 0014 00100040 		.word	1073745920
 105              		.cfi_endproc
 106              	.LFE153:
 108              		.section	.text.Error_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	Error_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	Error_Handler:
 116              	.LFB154:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /**
 244:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 245:Core/Src/main.c ****   * @retval None
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c **** void Error_Handler(void)
 248:Core/Src/main.c **** {
 117              		.loc 1 248 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 249:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 250:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 251:Core/Src/main.c **** 	__disable_irq();
 123              		.loc 1 251 2 view .LVU15
 124              	.LBB4:
 125              	.LBI4:
 126              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 8


  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 9


  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 10


 127              		.loc 2 140 27 view .LVU16
 128              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 129              		.loc 2 142 3 view .LVU17
 130              		.syntax unified
 131              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 132 0000 72B6     		cpsid i
 133              	@ 0 "" 2
 134              		.thumb
 135              		.syntax unified
 136              	.L12:
 137              	.LBE5:
 138              	.LBE4:
 252:Core/Src/main.c **** 	while (1)
 139              		.loc 1 252 2 discriminator 1 view .LVU18
 253:Core/Src/main.c **** 	{
 254:Core/Src/main.c **** 	}
 140              		.loc 1 254 2 discriminator 1 view .LVU19
 252:Core/Src/main.c **** 	while (1)
 141              		.loc 1 252 8 discriminator 1 view .LVU20
 142 0002 FEE7     		b	.L12
 143              		.cfi_endproc
 144              	.LFE154:
 146              		.section	.rodata.taskoverlfow.str1.4,"aMS",%progbits,1
 147              		.align	2
 148              	.LC0:
 149 0000 4661696C 		.ascii	"Failed to allocate memory\015\000"
 149      65642074 
 149      6F20616C 
 149      6C6F6361 
 149      7465206D 
 150 001b 00       		.align	2
 151              	.LC1:
 152 001c 4C276164 		.ascii	"L'adresse du ptr est 0x%x \015\012\000"
 152      72657373 
 152      65206475 
 152      20707472 
 152      20657374 
 153              		.section	.text.taskoverlfow,"ax",%progbits
 154              		.align	1
 155              		.global	taskoverlfow
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	taskoverlfow:
 161              	.LFB149:
  72:Core/Src/main.c ****   
 162              		.loc 1 72 32 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL7:
  72:Core/Src/main.c ****   
 167              		.loc 1 72 32 is_stmt 0 view .LVU22
 168 0000 08B5     		push	{r3, lr}
 169              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 11


 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 172 0002 04E0     		b	.L15
 173              	.LVL8:
 174              	.L14:
  72:Core/Src/main.c ****   
 175              		.loc 1 72 32 view .LVU23
 176 0004 0146     		mov	r1, r0
 177              	.LBB6:
  91:Core/Src/main.c ****     
 178              		.loc 1 91 5 is_stmt 1 view .LVU24
 179              	.LVL9:
  93:Core/Src/main.c **** 
 180              		.loc 1 93 5 view .LVU25
 181 0006 0431     		adds	r1, r1, #4
 182              	.LVL10:
  93:Core/Src/main.c **** 
 183              		.loc 1 93 5 is_stmt 0 view .LVU26
 184 0008 0648     		ldr	r0, .L17
 185 000a FFF7FEFF 		bl	printf
 186              	.LVL11:
  93:Core/Src/main.c **** 
 187              		.loc 1 93 5 view .LVU27
 188              	.LBE6:
  74:Core/Src/main.c **** 
 189              		.loc 1 74 9 is_stmt 1 view .LVU28
 190              	.L15:
  74:Core/Src/main.c **** 
 191              		.loc 1 74 3 view .LVU29
 192              	.LBB7:
  76:Core/Src/main.c **** 
 193              		.loc 1 76 5 view .LVU30
  79:Core/Src/main.c **** 
 194              		.loc 1 79 5 view .LVU31
  79:Core/Src/main.c **** 
 195              		.loc 1 79 19 is_stmt 0 view .LVU32
 196 000e 8020     		movs	r0, #128
 197 0010 FFF7FEFF 		bl	malloc
 198              	.LVL12:
  81:Core/Src/main.c ****       //Overflow
 199              		.loc 1 81 5 is_stmt 1 view .LVU33
  81:Core/Src/main.c ****       //Overflow
 200              		.loc 1 81 8 is_stmt 0 view .LVU34
 201 0014 0028     		cmp	r0, #0
 202 0016 F5D1     		bne	.L14
  83:Core/Src/main.c **** 
 203              		.loc 1 83 7 is_stmt 1 view .LVU35
 204 0018 0348     		ldr	r0, .L17+4
 205              	.LVL13:
  83:Core/Src/main.c **** 
 206              		.loc 1 83 7 is_stmt 0 view .LVU36
 207 001a FFF7FEFF 		bl	puts
 208              	.LVL14:
  86:Core/Src/main.c **** 
 209              		.loc 1 86 7 is_stmt 1 view .LVU37
 210 001e FFF7FEFF 		bl	Error_Handler
 211              	.LVL15:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 12


 212              	.L18:
 213 0022 00BF     		.align	2
 214              	.L17:
 215 0024 1C000000 		.word	.LC1
 216 0028 00000000 		.word	.LC0
 217              	.LBE7:
 218              		.cfi_endproc
 219              	.LFE149:
 221              		.section	.text.SystemClock_Config,"ax",%progbits
 222              		.align	1
 223              		.global	SystemClock_Config
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 228              	SystemClock_Config:
 229              	.LFB152:
 171:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 230              		.loc 1 171 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 80
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 00B5     		push	{lr}
 235              		.cfi_def_cfa_offset 4
 236              		.cfi_offset 14, -4
 237 0002 95B0     		sub	sp, sp, #84
 238              		.cfi_def_cfa_offset 88
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 239              		.loc 1 172 3 view .LVU39
 172:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 240              		.loc 1 172 22 is_stmt 0 view .LVU40
 241 0004 3022     		movs	r2, #48
 242 0006 0021     		movs	r1, #0
 243 0008 08A8     		add	r0, sp, #32
 244 000a FFF7FEFF 		bl	memset
 245              	.LVL16:
 173:Core/Src/main.c **** 
 246              		.loc 1 173 3 is_stmt 1 view .LVU41
 173:Core/Src/main.c **** 
 247              		.loc 1 173 22 is_stmt 0 view .LVU42
 248 000e 0023     		movs	r3, #0
 249 0010 0393     		str	r3, [sp, #12]
 250 0012 0493     		str	r3, [sp, #16]
 251 0014 0593     		str	r3, [sp, #20]
 252 0016 0693     		str	r3, [sp, #24]
 253 0018 0793     		str	r3, [sp, #28]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 254              		.loc 1 177 3 is_stmt 1 view .LVU43
 255              	.LBB8:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 256              		.loc 1 177 3 view .LVU44
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 257              		.loc 1 177 3 view .LVU45
 258 001a 234B     		ldr	r3, .L27
 259 001c 1A6C     		ldr	r2, [r3, #64]
 260 001e 42F08052 		orr	r2, r2, #268435456
 261 0022 1A64     		str	r2, [r3, #64]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 13


 262              		.loc 1 177 3 view .LVU46
 263 0024 1B6C     		ldr	r3, [r3, #64]
 264 0026 03F08053 		and	r3, r3, #268435456
 265 002a 0193     		str	r3, [sp, #4]
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 266              		.loc 1 177 3 view .LVU47
 267 002c 019B     		ldr	r3, [sp, #4]
 268              	.LBE8:
 177:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 269              		.loc 1 177 3 view .LVU48
 178:Core/Src/main.c **** 
 270              		.loc 1 178 3 view .LVU49
 271              	.LBB9:
 178:Core/Src/main.c **** 
 272              		.loc 1 178 3 view .LVU50
 178:Core/Src/main.c **** 
 273              		.loc 1 178 3 view .LVU51
 274 002e 1F4B     		ldr	r3, .L27+4
 275 0030 1A68     		ldr	r2, [r3]
 276 0032 42F44042 		orr	r2, r2, #49152
 277 0036 1A60     		str	r2, [r3]
 178:Core/Src/main.c **** 
 278              		.loc 1 178 3 view .LVU52
 279 0038 1B68     		ldr	r3, [r3]
 280 003a 03F44043 		and	r3, r3, #49152
 281 003e 0293     		str	r3, [sp, #8]
 178:Core/Src/main.c **** 
 282              		.loc 1 178 3 view .LVU53
 283 0040 029B     		ldr	r3, [sp, #8]
 284              	.LBE9:
 178:Core/Src/main.c **** 
 285              		.loc 1 178 3 view .LVU54
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 286              		.loc 1 183 3 view .LVU55
 183:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 287              		.loc 1 183 36 is_stmt 0 view .LVU56
 288 0042 0123     		movs	r3, #1
 289 0044 0893     		str	r3, [sp, #32]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 290              		.loc 1 184 3 is_stmt 1 view .LVU57
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 291              		.loc 1 184 30 is_stmt 0 view .LVU58
 292 0046 4FF48033 		mov	r3, #65536
 293 004a 0993     		str	r3, [sp, #36]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 294              		.loc 1 185 3 is_stmt 1 view .LVU59
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 295              		.loc 1 185 34 is_stmt 0 view .LVU60
 296 004c 0223     		movs	r3, #2
 297 004e 0E93     		str	r3, [sp, #56]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 298              		.loc 1 186 3 is_stmt 1 view .LVU61
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 299              		.loc 1 186 35 is_stmt 0 view .LVU62
 300 0050 4FF48002 		mov	r2, #4194304
 301 0054 0F92     		str	r2, [sp, #60]
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 14


 302              		.loc 1 187 3 is_stmt 1 view .LVU63
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 303              		.loc 1 187 30 is_stmt 0 view .LVU64
 304 0056 1922     		movs	r2, #25
 305 0058 1092     		str	r2, [sp, #64]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 306              		.loc 1 188 3 is_stmt 1 view .LVU65
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 307              		.loc 1 188 30 is_stmt 0 view .LVU66
 308 005a 4FF4D872 		mov	r2, #432
 309 005e 1192     		str	r2, [sp, #68]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 310              		.loc 1 189 3 is_stmt 1 view .LVU67
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 311              		.loc 1 189 30 is_stmt 0 view .LVU68
 312 0060 1293     		str	r3, [sp, #72]
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 313              		.loc 1 190 3 is_stmt 1 view .LVU69
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 314              		.loc 1 190 30 is_stmt 0 view .LVU70
 315 0062 1393     		str	r3, [sp, #76]
 191:Core/Src/main.c ****   {
 316              		.loc 1 191 3 is_stmt 1 view .LVU71
 191:Core/Src/main.c ****   {
 317              		.loc 1 191 7 is_stmt 0 view .LVU72
 318 0064 08A8     		add	r0, sp, #32
 319 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 320              	.LVL17:
 191:Core/Src/main.c ****   {
 321              		.loc 1 191 6 view .LVU73
 322 006a B0B9     		cbnz	r0, .L24
 198:Core/Src/main.c ****   {
 323              		.loc 1 198 3 is_stmt 1 view .LVU74
 198:Core/Src/main.c ****   {
 324              		.loc 1 198 7 is_stmt 0 view .LVU75
 325 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 326              	.LVL18:
 198:Core/Src/main.c ****   {
 327              		.loc 1 198 6 view .LVU76
 328 0070 A8B9     		cbnz	r0, .L25
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 329              		.loc 1 205 3 is_stmt 1 view .LVU77
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 330              		.loc 1 205 31 is_stmt 0 view .LVU78
 331 0072 0F23     		movs	r3, #15
 332 0074 0393     		str	r3, [sp, #12]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 333              		.loc 1 207 3 is_stmt 1 view .LVU79
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 334              		.loc 1 207 34 is_stmt 0 view .LVU80
 335 0076 0223     		movs	r3, #2
 336 0078 0493     		str	r3, [sp, #16]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 337              		.loc 1 208 3 is_stmt 1 view .LVU81
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 338              		.loc 1 208 35 is_stmt 0 view .LVU82
 339 007a 0023     		movs	r3, #0
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 15


 340 007c 0593     		str	r3, [sp, #20]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 341              		.loc 1 209 3 is_stmt 1 view .LVU83
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 342              		.loc 1 209 36 is_stmt 0 view .LVU84
 343 007e 4FF4A053 		mov	r3, #5120
 344 0082 0693     		str	r3, [sp, #24]
 210:Core/Src/main.c **** 
 345              		.loc 1 210 3 is_stmt 1 view .LVU85
 210:Core/Src/main.c **** 
 346              		.loc 1 210 36 is_stmt 0 view .LVU86
 347 0084 4FF48053 		mov	r3, #4096
 348 0088 0793     		str	r3, [sp, #28]
 212:Core/Src/main.c ****   {
 349              		.loc 1 212 3 is_stmt 1 view .LVU87
 212:Core/Src/main.c ****   {
 350              		.loc 1 212 7 is_stmt 0 view .LVU88
 351 008a 0721     		movs	r1, #7
 352 008c 03A8     		add	r0, sp, #12
 353 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 354              	.LVL19:
 212:Core/Src/main.c ****   {
 355              		.loc 1 212 6 view .LVU89
 356 0092 30B9     		cbnz	r0, .L26
 216:Core/Src/main.c **** 
 357              		.loc 1 216 1 view .LVU90
 358 0094 15B0     		add	sp, sp, #84
 359              		.cfi_remember_state
 360              		.cfi_def_cfa_offset 4
 361              		@ sp needed
 362 0096 5DF804FB 		ldr	pc, [sp], #4
 363              	.L24:
 364              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 365              		.loc 1 193 5 is_stmt 1 view .LVU91
 366 009a FFF7FEFF 		bl	Error_Handler
 367              	.LVL20:
 368              	.L25:
 200:Core/Src/main.c ****   }
 369              		.loc 1 200 5 view .LVU92
 370 009e FFF7FEFF 		bl	Error_Handler
 371              	.LVL21:
 372              	.L26:
 214:Core/Src/main.c ****   }
 373              		.loc 1 214 5 view .LVU93
 374 00a2 FFF7FEFF 		bl	Error_Handler
 375              	.LVL22:
 376              	.L28:
 377 00a6 00BF     		.align	2
 378              	.L27:
 379 00a8 00380240 		.word	1073887232
 380 00ac 00700040 		.word	1073770496
 381              		.cfi_endproc
 382              	.LFE152:
 384              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 385              		.align	2
 386              	.LC2:
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 16


 387 0000 4F766572 		.ascii	"Overflow\000"
 387      666C6F77 
 387      00
 388              		.section	.text.main,"ax",%progbits
 389              		.align	1
 390              		.global	main
 391              		.syntax unified
 392              		.thumb
 393              		.thumb_func
 395              	main:
 396              	.LFB151:
 112:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 397              		.loc 1 112 1 view -0
 398              		.cfi_startproc
 399              		@ Volatile: function does not return.
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 00B5     		push	{lr}
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 14, -4
 405 0002 83B0     		sub	sp, sp, #12
 406              		.cfi_def_cfa_offset 16
 120:Core/Src/main.c **** 
 407              		.loc 1 120 3 view .LVU95
 408 0004 FFF7FEFF 		bl	HAL_Init
 409              	.LVL23:
 127:Core/Src/main.c **** 
 410              		.loc 1 127 3 view .LVU96
 411 0008 FFF7FEFF 		bl	SystemClock_Config
 412              	.LVL24:
 134:Core/Src/main.c ****   MX_USART1_UART_Init();
 413              		.loc 1 134 3 view .LVU97
 414 000c FFF7FEFF 		bl	MX_GPIO_Init
 415              	.LVL25:
 135:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 416              		.loc 1 135 3 view .LVU98
 417 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 418              	.LVL26:
 139:Core/Src/main.c ****           taskoverlfow,       // Function to be called
 419              		.loc 1 139 3 view .LVU99
 420 0014 074B     		ldr	r3, .L32
 421 0016 0193     		str	r3, [sp, #4]
 422 0018 0123     		movs	r3, #1
 423 001a 0093     		str	r3, [sp]
 424 001c 0023     		movs	r3, #0
 425 001e 4FF48062 		mov	r2, #1024
 426 0022 0549     		ldr	r1, .L32+4
 427 0024 0548     		ldr	r0, .L32+8
 428 0026 FFF7FEFF 		bl	xTaskCreate
 429              	.LVL27:
 150:Core/Src/main.c **** 
 430              		.loc 1 150 3 view .LVU100
 431 002a FFF7FEFF 		bl	MX_FREERTOS_Init
 432              	.LVL28:
 153:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 433              		.loc 1 153 3 view .LVU101
 434 002e FFF7FEFF 		bl	osKernelStart
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 17


 435              	.LVL29:
 436              	.L30:
 157:Core/Src/main.c **** 	{
 437              		.loc 1 157 2 discriminator 1 view .LVU102
 162:Core/Src/main.c ****   /* USER CODE END 3 */
 438              		.loc 1 162 2 discriminator 1 view .LVU103
 157:Core/Src/main.c **** 	{
 439              		.loc 1 157 8 discriminator 1 view .LVU104
 440 0032 FEE7     		b	.L30
 441              	.L33:
 442              		.align	2
 443              	.L32:
 444 0034 00000000 		.word	h_of
 445 0038 00000000 		.word	.LC2
 446 003c 00000000 		.word	taskoverlfow
 447              		.cfi_endproc
 448              	.LFE151:
 450              		.global	h_of
 451              		.section	.bss.h_of,"aw",%nobits
 452              		.align	2
 455              	h_of:
 456 0000 00000000 		.space	4
 457              		.global	h_task_led
 458              		.section	.bss.h_task_led,"aw",%nobits
 459              		.align	2
 462              	h_task_led:
 463 0000 00000000 		.space	4
 464              		.global	h_task_shell
 465              		.section	.bss.h_task_shell,"aw",%nobits
 466              		.align	2
 469              	h_task_shell:
 470 0000 00000000 		.space	4
 471              		.text
 472              	.Letext0:
 473              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 474              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 475              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 476              		.file 6 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 477              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 478              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 479              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 480              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 481              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 482              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 483              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 484              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 485              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 486              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 487              		.file 17 "Core/Inc/usart.h"
 488              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 489              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 490              		.file 20 "Core/Inc/gpio.h"
 491              		.file 21 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 492              		.file 22 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 493              		.file 23 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:21     .text.__io_putchar:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:27     .text.__io_putchar:0000000000000000 __io_putchar
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:60     .text.__io_putchar:000000000000001c $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:65     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:71     .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:104    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:109    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:115    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:147    .rodata.taskoverlfow.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:154    .text.taskoverlfow:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:160    .text.taskoverlfow:0000000000000000 taskoverlfow
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:215    .text.taskoverlfow:0000000000000024 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:222    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:228    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:379    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:385    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:389    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:395    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:444    .text.main:0000000000000034 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:455    .bss.h_of:0000000000000000 h_of
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:452    .bss.h_of:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:462    .bss.h_task_led:0000000000000000 h_task_led
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:459    .bss.h_task_led:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:469    .bss.h_task_shell:0000000000000000 h_task_shell
C:\Users\billa\AppData\Local\Temp\cc5SqIaC.s:466    .bss.h_task_shell:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
HAL_IncTick
printf
malloc
puts
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xTaskCreate
MX_FREERTOS_Init
osKernelStart
