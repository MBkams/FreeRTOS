ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.taskoverlfow.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 5461736B 		.ascii	"Task Overflow running \015\000"
  23      204F7665 
  23      72666C6F 
  23      77207275 
  23      6E6E696E 
  24              		.section	.text.taskoverlfow,"ax",%progbits
  25              		.align	1
  26              		.global	taskoverlfow
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	taskoverlfow:
  32              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 2


  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** #include <stdlib.h>
  29:Core/Src/main.c **** #include "FreeRTOS.h"
  30:Core/Src/main.c **** #include "shell.h"
  31:Core/Src/main.c **** #include "semphr.h"
  32:Core/Src/main.c **** #include "task.h"
  33:Core/Src/main.c **** /* USER CODE END Includes */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** #define TASK_SHELL_STACK_DEPTH 512
  43:Core/Src/main.c **** #define TASK_SHELL_PRIORITY 1
  44:Core/Src/main.c **** #define STACK_SIZE 10000
  45:Core/Src/main.c **** /* USER CODE END PD */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  48:Core/Src/main.c **** /* USER CODE BEGIN PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** 	TaskHandle_t h_task_shell = NULL;
  56:Core/Src/main.c ****   TaskHandle_t h_task_led = NULL;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c ****   TaskHandle_t h_of = NULL;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PV */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  63:Core/Src/main.c **** void SystemClock_Config(void);
  64:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  65:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  66:Core/Src/main.c **** void blink_led(void *unsued);
  67:Core/Src/main.c **** void vApplicationStackOverflowHook( TaskHandle_t xTask, signed char *pcTaskName );
  68:Core/Src/main.c **** /* USER CODE END PFP */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  72:Core/Src/main.c **** void taskoverlfow(void *unused){
  33              		.loc 1 72 32 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 10000
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              	.LVL0:
  38              		.loc 1 72 32 is_stmt 0 view .LVU1
  39 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 3


  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
  43 0002 ADF51C5D 		sub	sp, sp, #9984
  44              		.cfi_def_cfa_offset 9992
  45 0006 84B0     		sub	sp, sp, #16
  46              		.cfi_def_cfa_offset 10008
  47 0008 0AE0     		b	.L4
  48              	.LVL1:
  49              	.L3:
  73:Core/Src/main.c ****   
  74:Core/Src/main.c ****   char buffer[STACK_SIZE];
  75:Core/Src/main.c ****   int i;
  76:Core/Src/main.c ****   
  77:Core/Src/main.c ****   while (1) {
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****     for (i = 0; i <= STACK_SIZE+1; i++) {
  80:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  50              		.loc 1 80 7 is_stmt 1 discriminator 3 view .LVU2
  51 000a 0648     		ldr	r0, .L6
  52 000c FFF7FEFF 		bl	puts
  53              	.LVL2:
  81:Core/Src/main.c ****       buffer[i] = 'A';
  54              		.loc 1 81 7 discriminator 3 view .LVU3
  55              		.loc 1 81 17 is_stmt 0 discriminator 3 view .LVU4
  56 0010 4123     		movs	r3, #65
  57 0012 0DF80430 		strb	r3, [sp, r4]
  79:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  58              		.loc 1 79 37 is_stmt 1 discriminator 3 view .LVU5
  59 0016 0134     		adds	r4, r4, #1
  60              	.LVL3:
  61              	.L2:
  79:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  62              		.loc 1 79 19 discriminator 1 view .LVU6
  63 0018 42F21173 		movw	r3, #10001
  64 001c 9C42     		cmp	r4, r3
  65 001e F4DD     		ble	.L3
  66              	.LVL4:
  67              	.L4:
  74:Core/Src/main.c ****   int i;
  68              		.loc 1 74 3 view .LVU7
  75:Core/Src/main.c ****   
  69              		.loc 1 75 3 view .LVU8
  77:Core/Src/main.c **** 
  70              		.loc 1 77 3 view .LVU9
  79:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  71              		.loc 1 79 5 view .LVU10
  79:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  72              		.loc 1 79 12 is_stmt 0 view .LVU11
  73 0020 0024     		movs	r4, #0
  79:Core/Src/main.c ****       printf("Task Overflow running \r\n");
  74              		.loc 1 79 5 view .LVU12
  75 0022 F9E7     		b	.L2
  76              	.L7:
  77              		.align	2
  78              	.L6:
  79 0024 00000000 		.word	.LC0
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 4


  80              		.cfi_endproc
  81              	.LFE149:
  83              		.section	.text.__io_putchar,"ax",%progbits
  84              		.align	1
  85              		.global	__io_putchar
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
  90              	__io_putchar:
  91              	.LVL5:
  92              	.LFB150:
  82:Core/Src/main.c ****   }
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** }
  85:Core/Src/main.c **** }
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** int __io_putchar(int ch)
  88:Core/Src/main.c **** {
  93              		.loc 1 88 1 is_stmt 1 view -0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 8
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97              		.loc 1 88 1 is_stmt 0 view .LVU14
  98 0000 00B5     		push	{lr}
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 14, -4
 101 0002 83B0     		sub	sp, sp, #12
 102              		.cfi_def_cfa_offset 16
 103 0004 0190     		str	r0, [sp, #4]
  89:Core/Src/main.c **** 	HAL_UART_Transmit(&huart1, (uint8_t*)&ch, 1, HAL_MAX_DELAY);
 104              		.loc 1 89 2 is_stmt 1 view .LVU15
 105 0006 4FF0FF33 		mov	r3, #-1
 106 000a 0122     		movs	r2, #1
 107 000c 01A9     		add	r1, sp, #4
 108 000e 0348     		ldr	r0, .L10
 109              	.LVL6:
 110              		.loc 1 89 2 is_stmt 0 view .LVU16
 111 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 112              	.LVL7:
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 	return ch;
 113              		.loc 1 91 2 is_stmt 1 view .LVU17
  92:Core/Src/main.c **** }
 114              		.loc 1 92 1 is_stmt 0 view .LVU18
 115 0014 0198     		ldr	r0, [sp, #4]
 116 0016 03B0     		add	sp, sp, #12
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 0018 5DF804FB 		ldr	pc, [sp], #4
 120              	.L11:
 121              		.align	2
 122              	.L10:
 123 001c 00000000 		.word	huart1
 124              		.cfi_endproc
 125              	.LFE150:
 127              		.section	.rodata.vApplicationStackOverflowHook.str1.4,"aMS",%progbits,1
 128              		.align	2
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 5


 129              	.LC1:
 130 0000 4552524F 		.ascii	"ERROR: Stack overflow in task %s\012\000"
 130      523A2053 
 130      7461636B 
 130      206F7665 
 130      72666C6F 
 131              		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 132              		.align	1
 133              		.global	vApplicationStackOverflowHook
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 138              	vApplicationStackOverflowHook:
 139              	.LVL8:
 140              	.LFB151:
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** void vApplicationStackOverflowHook( TaskHandle_t xTask, signed char *pcTaskName ){
 141              		.loc 1 94 82 is_stmt 1 view -0
 142              		.cfi_startproc
 143              		@ Volatile: function does not return.
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		.loc 1 94 82 is_stmt 0 view .LVU20
 147 0000 08B5     		push	{r3, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 3, -8
 150              		.cfi_offset 14, -4
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   printf("ERROR: Stack overflow in task %s\n", pcTaskName);
 151              		.loc 1 96 3 is_stmt 1 view .LVU21
 152 0002 0248     		ldr	r0, .L15
 153              	.LVL9:
 154              		.loc 1 96 3 is_stmt 0 view .LVU22
 155 0004 FFF7FEFF 		bl	printf
 156              	.LVL10:
 157              	.L13:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   for(;;){
 158              		.loc 1 98 3 is_stmt 1 discriminator 1 view .LVU23
  99:Core/Src/main.c ****     
 100:Core/Src/main.c ****   }
 159              		.loc 1 100 3 discriminator 1 view .LVU24
  98:Core/Src/main.c ****     
 160              		.loc 1 98 3 discriminator 1 view .LVU25
 161 0008 FEE7     		b	.L13
 162              	.L16:
 163 000a 00BF     		.align	2
 164              	.L15:
 165 000c 00000000 		.word	.LC1
 166              		.cfi_endproc
 167              	.LFE151:
 169              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 170              		.align	1
 171              		.global	HAL_TIM_PeriodElapsedCallback
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 6


 176              	HAL_TIM_PeriodElapsedCallback:
 177              	.LVL11:
 178              	.LFB154:
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** /* USER CODE END 0 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** /**
 105:Core/Src/main.c ****   * @brief  The application entry point.
 106:Core/Src/main.c ****   * @retval int
 107:Core/Src/main.c ****   */
 108:Core/Src/main.c **** int main(void)
 109:Core/Src/main.c **** {
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END 1 */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 117:Core/Src/main.c ****   HAL_Init();
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* USER CODE END Init */
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /* Configure the system clock */
 124:Core/Src/main.c ****   SystemClock_Config();
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* USER CODE END SysInit */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /* Initialize all configured peripherals */
 131:Core/Src/main.c ****   MX_GPIO_Init();
 132:Core/Src/main.c ****   MX_USART1_UART_Init();
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Create a taskGive*/
 136:Core/Src/main.c ****   xTaskCreate(
 137:Core/Src/main.c ****           taskoverlfow,       // Function to be called
 138:Core/Src/main.c ****           "Overflow",         // Name of task
 139:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 140:Core/Src/main.c ****           NULL,  // Parameter to pass to function
 141:Core/Src/main.c ****           1,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 142:Core/Src/main.c ****           &h_of       // Task handle (allows to find and manipulate the task)
 143:Core/Src/main.c ****           );
 144:Core/Src/main.c ****   /* USER CODE END 2 */
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 147:Core/Src/main.c ****   MX_FREERTOS_Init();
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Start scheduler */
 150:Core/Src/main.c ****   osKernelStart();
 151:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 152:Core/Src/main.c ****   /* Infinite loop */
 153:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 154:Core/Src/main.c **** 	while (1)
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 7


 155:Core/Src/main.c **** 	{
 156:Core/Src/main.c ****     /* USER CODE END WHILE */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 159:Core/Src/main.c **** 	}
 160:Core/Src/main.c ****   /* USER CODE END 3 */
 161:Core/Src/main.c **** }
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief System Clock Configuration
 165:Core/Src/main.c ****   * @retval None
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c **** void SystemClock_Config(void)
 168:Core/Src/main.c **** {
 169:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 170:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 175:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 178:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 179:Core/Src/main.c ****   */
 180:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 181:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 188:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Activate the Over-Drive mode
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 201:Core/Src/main.c ****   */
 202:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 203:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 204:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 205:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 207:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 8


 212:Core/Src/main.c ****   }
 213:Core/Src/main.c **** }
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE END 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 221:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 222:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 223:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 224:Core/Src/main.c ****   * @param  htim : TIM handle
 225:Core/Src/main.c ****   * @retval None
 226:Core/Src/main.c ****   */
 227:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 228:Core/Src/main.c **** {
 179              		.loc 1 228 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		.loc 1 228 1 is_stmt 0 view .LVU27
 184 0000 08B5     		push	{r3, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 229:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 232:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 188              		.loc 1 232 3 is_stmt 1 view .LVU28
 189              		.loc 1 232 11 is_stmt 0 view .LVU29
 190 0002 0268     		ldr	r2, [r0]
 191              		.loc 1 232 6 view .LVU30
 192 0004 034B     		ldr	r3, .L21
 193 0006 9A42     		cmp	r2, r3
 194 0008 00D0     		beq	.L20
 195              	.LVL12:
 196              	.L17:
 233:Core/Src/main.c ****     HAL_IncTick();
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 238:Core/Src/main.c **** }
 197              		.loc 1 238 1 view .LVU31
 198 000a 08BD     		pop	{r3, pc}
 199              	.LVL13:
 200              	.L20:
 233:Core/Src/main.c ****     HAL_IncTick();
 201              		.loc 1 233 5 is_stmt 1 view .LVU32
 202 000c FFF7FEFF 		bl	HAL_IncTick
 203              	.LVL14:
 204              		.loc 1 238 1 is_stmt 0 view .LVU33
 205 0010 FBE7     		b	.L17
 206              	.L22:
 207 0012 00BF     		.align	2
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 9


 208              	.L21:
 209 0014 00100040 		.word	1073745920
 210              		.cfi_endproc
 211              	.LFE154:
 213              		.section	.text.Error_Handler,"ax",%progbits
 214              		.align	1
 215              		.global	Error_Handler
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 220              	Error_Handler:
 221              	.LFB155:
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** /**
 241:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 242:Core/Src/main.c ****   * @retval None
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c **** void Error_Handler(void)
 245:Core/Src/main.c **** {
 222              		.loc 1 245 1 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ Volatile: function does not return.
 225              		@ args = 0, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		@ link register save eliminated.
 246:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 247:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 248:Core/Src/main.c **** 	__disable_irq();
 228              		.loc 1 248 2 view .LVU35
 229              	.LBB4:
 230              	.LBI4:
 231              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 10


  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 11


  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 12


 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 232              		.loc 2 140 27 view .LVU36
 233              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 234              		.loc 2 142 3 view .LVU37
 235              		.syntax unified
 236              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 237 0000 72B6     		cpsid i
 238              	@ 0 "" 2
 239              		.thumb
 240              		.syntax unified
 241              	.L24:
 242              	.LBE5:
 243              	.LBE4:
 249:Core/Src/main.c **** 	while (1)
 244              		.loc 1 249 2 discriminator 1 view .LVU38
 250:Core/Src/main.c **** 	{
 251:Core/Src/main.c **** 	}
 245              		.loc 1 251 2 discriminator 1 view .LVU39
 249:Core/Src/main.c **** 	while (1)
 246              		.loc 1 249 8 discriminator 1 view .LVU40
 247 0002 FEE7     		b	.L24
 248              		.cfi_endproc
 249              	.LFE155:
 251              		.section	.text.SystemClock_Config,"ax",%progbits
 252              		.align	1
 253              		.global	SystemClock_Config
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 258              	SystemClock_Config:
 259              	.LFB153:
 168:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 260              		.loc 1 168 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 80
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264 0000 00B5     		push	{lr}
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 14, -4
 267 0002 95B0     		sub	sp, sp, #84
 268              		.cfi_def_cfa_offset 88
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 269              		.loc 1 169 3 view .LVU42
 169:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 270              		.loc 1 169 22 is_stmt 0 view .LVU43
 271 0004 3022     		movs	r2, #48
 272 0006 0021     		movs	r1, #0
 273 0008 08A8     		add	r0, sp, #32
 274 000a FFF7FEFF 		bl	memset
 275              	.LVL15:
 170:Core/Src/main.c **** 
 276              		.loc 1 170 3 is_stmt 1 view .LVU44
 170:Core/Src/main.c **** 
 277              		.loc 1 170 22 is_stmt 0 view .LVU45
 278 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 13


 279 0010 0393     		str	r3, [sp, #12]
 280 0012 0493     		str	r3, [sp, #16]
 281 0014 0593     		str	r3, [sp, #20]
 282 0016 0693     		str	r3, [sp, #24]
 283 0018 0793     		str	r3, [sp, #28]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 284              		.loc 1 174 3 is_stmt 1 view .LVU46
 285              	.LBB6:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 286              		.loc 1 174 3 view .LVU47
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 287              		.loc 1 174 3 view .LVU48
 288 001a 234B     		ldr	r3, .L33
 289 001c 1A6C     		ldr	r2, [r3, #64]
 290 001e 42F08052 		orr	r2, r2, #268435456
 291 0022 1A64     		str	r2, [r3, #64]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 292              		.loc 1 174 3 view .LVU49
 293 0024 1B6C     		ldr	r3, [r3, #64]
 294 0026 03F08053 		and	r3, r3, #268435456
 295 002a 0193     		str	r3, [sp, #4]
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 296              		.loc 1 174 3 view .LVU50
 297 002c 019B     		ldr	r3, [sp, #4]
 298              	.LBE6:
 174:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 299              		.loc 1 174 3 view .LVU51
 175:Core/Src/main.c **** 
 300              		.loc 1 175 3 view .LVU52
 301              	.LBB7:
 175:Core/Src/main.c **** 
 302              		.loc 1 175 3 view .LVU53
 175:Core/Src/main.c **** 
 303              		.loc 1 175 3 view .LVU54
 304 002e 1F4B     		ldr	r3, .L33+4
 305 0030 1A68     		ldr	r2, [r3]
 306 0032 42F44042 		orr	r2, r2, #49152
 307 0036 1A60     		str	r2, [r3]
 175:Core/Src/main.c **** 
 308              		.loc 1 175 3 view .LVU55
 309 0038 1B68     		ldr	r3, [r3]
 310 003a 03F44043 		and	r3, r3, #49152
 311 003e 0293     		str	r3, [sp, #8]
 175:Core/Src/main.c **** 
 312              		.loc 1 175 3 view .LVU56
 313 0040 029B     		ldr	r3, [sp, #8]
 314              	.LBE7:
 175:Core/Src/main.c **** 
 315              		.loc 1 175 3 view .LVU57
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 316              		.loc 1 180 3 view .LVU58
 180:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 317              		.loc 1 180 36 is_stmt 0 view .LVU59
 318 0042 0123     		movs	r3, #1
 319 0044 0893     		str	r3, [sp, #32]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 320              		.loc 1 181 3 is_stmt 1 view .LVU60
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 14


 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 321              		.loc 1 181 30 is_stmt 0 view .LVU61
 322 0046 4FF48033 		mov	r3, #65536
 323 004a 0993     		str	r3, [sp, #36]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 324              		.loc 1 182 3 is_stmt 1 view .LVU62
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 325              		.loc 1 182 34 is_stmt 0 view .LVU63
 326 004c 0223     		movs	r3, #2
 327 004e 0E93     		str	r3, [sp, #56]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 328              		.loc 1 183 3 is_stmt 1 view .LVU64
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 329              		.loc 1 183 35 is_stmt 0 view .LVU65
 330 0050 4FF48002 		mov	r2, #4194304
 331 0054 0F92     		str	r2, [sp, #60]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 332              		.loc 1 184 3 is_stmt 1 view .LVU66
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 333              		.loc 1 184 30 is_stmt 0 view .LVU67
 334 0056 1922     		movs	r2, #25
 335 0058 1092     		str	r2, [sp, #64]
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 336              		.loc 1 185 3 is_stmt 1 view .LVU68
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 337              		.loc 1 185 30 is_stmt 0 view .LVU69
 338 005a 4FF4D872 		mov	r2, #432
 339 005e 1192     		str	r2, [sp, #68]
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 340              		.loc 1 186 3 is_stmt 1 view .LVU70
 186:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 341              		.loc 1 186 30 is_stmt 0 view .LVU71
 342 0060 1293     		str	r3, [sp, #72]
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 343              		.loc 1 187 3 is_stmt 1 view .LVU72
 187:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 344              		.loc 1 187 30 is_stmt 0 view .LVU73
 345 0062 1393     		str	r3, [sp, #76]
 188:Core/Src/main.c ****   {
 346              		.loc 1 188 3 is_stmt 1 view .LVU74
 188:Core/Src/main.c ****   {
 347              		.loc 1 188 7 is_stmt 0 view .LVU75
 348 0064 08A8     		add	r0, sp, #32
 349 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 350              	.LVL16:
 188:Core/Src/main.c ****   {
 351              		.loc 1 188 6 view .LVU76
 352 006a B0B9     		cbnz	r0, .L30
 195:Core/Src/main.c ****   {
 353              		.loc 1 195 3 is_stmt 1 view .LVU77
 195:Core/Src/main.c ****   {
 354              		.loc 1 195 7 is_stmt 0 view .LVU78
 355 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 356              	.LVL17:
 195:Core/Src/main.c ****   {
 357              		.loc 1 195 6 view .LVU79
 358 0070 A8B9     		cbnz	r0, .L31
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 15


 202:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 359              		.loc 1 202 3 is_stmt 1 view .LVU80
 202:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 360              		.loc 1 202 31 is_stmt 0 view .LVU81
 361 0072 0F23     		movs	r3, #15
 362 0074 0393     		str	r3, [sp, #12]
 204:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 363              		.loc 1 204 3 is_stmt 1 view .LVU82
 204:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 364              		.loc 1 204 34 is_stmt 0 view .LVU83
 365 0076 0223     		movs	r3, #2
 366 0078 0493     		str	r3, [sp, #16]
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 367              		.loc 1 205 3 is_stmt 1 view .LVU84
 205:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 368              		.loc 1 205 35 is_stmt 0 view .LVU85
 369 007a 0023     		movs	r3, #0
 370 007c 0593     		str	r3, [sp, #20]
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 371              		.loc 1 206 3 is_stmt 1 view .LVU86
 206:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 372              		.loc 1 206 36 is_stmt 0 view .LVU87
 373 007e 4FF4A053 		mov	r3, #5120
 374 0082 0693     		str	r3, [sp, #24]
 207:Core/Src/main.c **** 
 375              		.loc 1 207 3 is_stmt 1 view .LVU88
 207:Core/Src/main.c **** 
 376              		.loc 1 207 36 is_stmt 0 view .LVU89
 377 0084 4FF48053 		mov	r3, #4096
 378 0088 0793     		str	r3, [sp, #28]
 209:Core/Src/main.c ****   {
 379              		.loc 1 209 3 is_stmt 1 view .LVU90
 209:Core/Src/main.c ****   {
 380              		.loc 1 209 7 is_stmt 0 view .LVU91
 381 008a 0721     		movs	r1, #7
 382 008c 03A8     		add	r0, sp, #12
 383 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 384              	.LVL18:
 209:Core/Src/main.c ****   {
 385              		.loc 1 209 6 view .LVU92
 386 0092 30B9     		cbnz	r0, .L32
 213:Core/Src/main.c **** 
 387              		.loc 1 213 1 view .LVU93
 388 0094 15B0     		add	sp, sp, #84
 389              		.cfi_remember_state
 390              		.cfi_def_cfa_offset 4
 391              		@ sp needed
 392 0096 5DF804FB 		ldr	pc, [sp], #4
 393              	.L30:
 394              		.cfi_restore_state
 190:Core/Src/main.c ****   }
 395              		.loc 1 190 5 is_stmt 1 view .LVU94
 396 009a FFF7FEFF 		bl	Error_Handler
 397              	.LVL19:
 398              	.L31:
 197:Core/Src/main.c ****   }
 399              		.loc 1 197 5 view .LVU95
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 16


 400 009e FFF7FEFF 		bl	Error_Handler
 401              	.LVL20:
 402              	.L32:
 211:Core/Src/main.c ****   }
 403              		.loc 1 211 5 view .LVU96
 404 00a2 FFF7FEFF 		bl	Error_Handler
 405              	.LVL21:
 406              	.L34:
 407 00a6 00BF     		.align	2
 408              	.L33:
 409 00a8 00380240 		.word	1073887232
 410 00ac 00700040 		.word	1073770496
 411              		.cfi_endproc
 412              	.LFE153:
 414              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 415              		.align	2
 416              	.LC2:
 417 0000 4F766572 		.ascii	"Overflow\000"
 417      666C6F77 
 417      00
 418              		.section	.text.main,"ax",%progbits
 419              		.align	1
 420              		.global	main
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	main:
 426              	.LFB152:
 109:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 427              		.loc 1 109 1 view -0
 428              		.cfi_startproc
 429              		@ Volatile: function does not return.
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 00B5     		push	{lr}
 433              		.cfi_def_cfa_offset 4
 434              		.cfi_offset 14, -4
 435 0002 83B0     		sub	sp, sp, #12
 436              		.cfi_def_cfa_offset 16
 117:Core/Src/main.c **** 
 437              		.loc 1 117 3 view .LVU98
 438 0004 FFF7FEFF 		bl	HAL_Init
 439              	.LVL22:
 124:Core/Src/main.c **** 
 440              		.loc 1 124 3 view .LVU99
 441 0008 FFF7FEFF 		bl	SystemClock_Config
 442              	.LVL23:
 131:Core/Src/main.c ****   MX_USART1_UART_Init();
 443              		.loc 1 131 3 view .LVU100
 444 000c FFF7FEFF 		bl	MX_GPIO_Init
 445              	.LVL24:
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 446              		.loc 1 132 3 view .LVU101
 447 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 448              	.LVL25:
 136:Core/Src/main.c ****           taskoverlfow,       // Function to be called
 449              		.loc 1 136 3 view .LVU102
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 17


 450 0014 074B     		ldr	r3, .L38
 451 0016 0193     		str	r3, [sp, #4]
 452 0018 0123     		movs	r3, #1
 453 001a 0093     		str	r3, [sp]
 454 001c 0023     		movs	r3, #0
 455 001e 42F21072 		movw	r2, #10000
 456 0022 0549     		ldr	r1, .L38+4
 457 0024 0548     		ldr	r0, .L38+8
 458 0026 FFF7FEFF 		bl	xTaskCreate
 459              	.LVL26:
 147:Core/Src/main.c **** 
 460              		.loc 1 147 3 view .LVU103
 461 002a FFF7FEFF 		bl	MX_FREERTOS_Init
 462              	.LVL27:
 150:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 463              		.loc 1 150 3 view .LVU104
 464 002e FFF7FEFF 		bl	osKernelStart
 465              	.LVL28:
 466              	.L36:
 154:Core/Src/main.c **** 	{
 467              		.loc 1 154 2 discriminator 1 view .LVU105
 159:Core/Src/main.c ****   /* USER CODE END 3 */
 468              		.loc 1 159 2 discriminator 1 view .LVU106
 154:Core/Src/main.c **** 	{
 469              		.loc 1 154 8 discriminator 1 view .LVU107
 470 0032 FEE7     		b	.L36
 471              	.L39:
 472              		.align	2
 473              	.L38:
 474 0034 00000000 		.word	h_of
 475 0038 00000000 		.word	.LC2
 476 003c 00000000 		.word	taskoverlfow
 477              		.cfi_endproc
 478              	.LFE152:
 480              		.global	h_of
 481              		.section	.bss.h_of,"aw",%nobits
 482              		.align	2
 485              	h_of:
 486 0000 00000000 		.space	4
 487              		.global	h_task_led
 488              		.section	.bss.h_task_led,"aw",%nobits
 489              		.align	2
 492              	h_task_led:
 493 0000 00000000 		.space	4
 494              		.global	h_task_shell
 495              		.section	.bss.h_task_shell,"aw",%nobits
 496              		.align	2
 499              	h_task_shell:
 500 0000 00000000 		.space	4
 501              		.text
 502              	.Letext0:
 503              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 504              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 505              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 506              		.file 6 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 507              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 508              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 18


 509              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 510              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 511              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 512              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 513              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 514              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 515              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 516              		.file 16 "Core/Inc/usart.h"
 517              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 518              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 519              		.file 19 "Core/Inc/gpio.h"
 520              		.file 20 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 521              		.file 21 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s 			page 19


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:21     .rodata.taskoverlfow.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:25     .text.taskoverlfow:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:31     .text.taskoverlfow:0000000000000000 taskoverlfow
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:79     .text.taskoverlfow:0000000000000024 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:84     .text.__io_putchar:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:90     .text.__io_putchar:0000000000000000 __io_putchar
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:123    .text.__io_putchar:000000000000001c $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:128    .rodata.vApplicationStackOverflowHook.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:132    .text.vApplicationStackOverflowHook:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:138    .text.vApplicationStackOverflowHook:0000000000000000 vApplicationStackOverflowHook
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:165    .text.vApplicationStackOverflowHook:000000000000000c $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:170    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:176    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:209    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:214    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:220    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:252    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:258    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:409    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:415    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:419    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:425    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:474    .text.main:0000000000000034 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:485    .bss.h_of:0000000000000000 h_of
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:482    .bss.h_of:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:492    .bss.h_task_led:0000000000000000 h_task_led
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:489    .bss.h_task_led:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:499    .bss.h_task_shell:0000000000000000 h_task_shell
C:\Users\billa\AppData\Local\Temp\ccyfyFv4.s:496    .bss.h_task_shell:0000000000000000 $d

UNDEFINED SYMBOLS
puts
HAL_UART_Transmit
huart1
printf
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xTaskCreate
MX_FREERTOS_Init
osKernelStart
