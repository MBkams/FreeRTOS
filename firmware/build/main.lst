ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.LedBlinker.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 4A652073 		.ascii	"Je suis la tache %s et je m'endors pour %d periodes"
  23      75697320 
  23      6C612074 
  23      61636865 
  23      20257320 
  24 0033 0A00     		.ascii	"\012\000"
  25              		.section	.text.LedBlinker,"ax",%progbits
  26              		.align	1
  27              		.global	LedBlinker
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	LedBlinker:
  33              	.LVL0:
  34              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 2


  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "FreeRTOS.h"
  29:Core/Src/main.c **** #include "task.h"
  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <string.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define STACK_SIZE 1000
  42:Core/Src/main.c **** #define Delay 500
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** void LedBlinker (void * pvParameters);
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* Fonction LED Blinker*/
  67:Core/Src/main.c **** void LedBlinker (void * pvParameters){
  35              		.loc 1 67 38 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 104
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 67 38 is_stmt 0 view .LVU1
  40 0000 30B5     		push	{r4, r5, lr}
  41              		.cfi_def_cfa_offset 12
  42              		.cfi_offset 4, -12
  43              		.cfi_offset 5, -8
  44              		.cfi_offset 14, -4
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 3


  45 0002 9BB0     		sub	sp, sp, #108
  46              		.cfi_def_cfa_offset 120
  47 0004 0446     		mov	r4, r0
  68:Core/Src/main.c ****     
  69:Core/Src/main.c ****     int duree = (int) pvParameters;
  48              		.loc 1 69 5 is_stmt 1 view .LVU2
  49              	.LVL1:
  70:Core/Src/main.c ****     uint8_t uartTxBuffer[100];
  50              		.loc 1 70 5 view .LVU3
  71:Core/Src/main.c ****     char* s = pcTaskGetName(xTaskGetCurrentTaskHandle());
  51              		.loc 1 71 5 view .LVU4
  52              		.loc 1 71 15 is_stmt 0 view .LVU5
  53 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
  54              	.LVL2:
  55              		.loc 1 71 15 view .LVU6
  56 000a FFF7FEFF 		bl	pcTaskGetName
  57              	.LVL3:
  58 000e 0546     		mov	r5, r0
  59              	.LVL4:
  60              	.L2:
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****     while (1)
  61              		.loc 1 73 5 is_stmt 1 discriminator 1 view .LVU7
  74:Core/Src/main.c ****     {
  75:Core/Src/main.c ****       sprintf((char*)uartTxBuffer, "Je suis la tache %s et je m'endors pour %d periodes\n", s, dure
  62              		.loc 1 75 7 discriminator 1 view .LVU8
  63 0010 2346     		mov	r3, r4
  64 0012 2A46     		mov	r2, r5
  65 0014 0A49     		ldr	r1, .L4
  66 0016 01A8     		add	r0, sp, #4
  67 0018 FFF7FEFF 		bl	sprintf
  68              	.LVL5:
  76:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
  69              		.loc 1 76 7 discriminator 1 view .LVU9
  70              		.loc 1 76 48 is_stmt 0 discriminator 1 view .LVU10
  71 001c 01A8     		add	r0, sp, #4
  72 001e FFF7FEFF 		bl	strlen
  73              	.LVL6:
  74              		.loc 1 76 7 discriminator 1 view .LVU11
  75 0022 4FF0FF33 		mov	r3, #-1
  76 0026 82B2     		uxth	r2, r0
  77 0028 01A9     		add	r1, sp, #4
  78 002a 0648     		ldr	r0, .L4+4
  79 002c FFF7FEFF 		bl	HAL_UART_Transmit
  80              	.LVL7:
  77:Core/Src/main.c ****       vTaskDelay(duree/portTICK_PERIOD_MS);
  81              		.loc 1 77 7 is_stmt 1 discriminator 1 view .LVU12
  82 0030 2046     		mov	r0, r4
  83 0032 FFF7FEFF 		bl	vTaskDelay
  84              	.LVL8:
  78:Core/Src/main.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
  85              		.loc 1 78 7 discriminator 1 view .LVU13
  86 0036 0221     		movs	r1, #2
  87 0038 0348     		ldr	r0, .L4+8
  88 003a FFF7FEFF 		bl	HAL_GPIO_TogglePin
  89              	.LVL9:
  73:Core/Src/main.c ****     {
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 4


  90              		.loc 1 73 11 discriminator 1 view .LVU14
  91 003e E7E7     		b	.L2
  92              	.L5:
  93              		.align	2
  94              	.L4:
  95 0040 00000000 		.word	.LC0
  96 0044 00000000 		.word	huart1
  97 0048 00200240 		.word	1073881088
  98              		.cfi_endproc
  99              	.LFE149:
 101              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 102              		.align	1
 103              		.global	HAL_TIM_PeriodElapsedCallback
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	HAL_TIM_PeriodElapsedCallback:
 109              	.LVL10:
 110              	.LFB152:
  79:Core/Src/main.c ****     }
  80:Core/Src/main.c ****     
  81:Core/Src/main.c **** }
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Fonction affichage*/
  84:Core/Src/main.c ****   // int __io_putchar(int ch) 
  85:Core/Src/main.c ****   // {
  86:Core/Src/main.c ****   // uint8_t data = ch;
  87:Core/Src/main.c ****   // HAL_UART_Transmit(&huart1, (uint8_t *)&data, 1, HAL_MAX_DELAY);
  88:Core/Src/main.c ****   // return ch;
  89:Core/Src/main.c ****   // }
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** /* USER CODE END 0 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /**
  94:Core/Src/main.c ****   * @brief  The application entry point.
  95:Core/Src/main.c ****   * @retval int
  96:Core/Src/main.c ****   */
  97:Core/Src/main.c **** int main(void)
  98:Core/Src/main.c **** {
  99:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 100:Core/Src/main.c ****   BaseType_t xReturned;
 101:Core/Src/main.c ****   TaskHandle_t xHandle1 = NULL;
 102:Core/Src/main.c ****   /* USER CODE END 1 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 107:Core/Src/main.c ****   HAL_Init();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Configure the system clock */
 114:Core/Src/main.c ****   SystemClock_Config();
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 5


 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE END SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* Initialize all configured peripherals */
 121:Core/Src/main.c ****   MX_GPIO_Init();
 122:Core/Src/main.c ****   MX_USART1_UART_Init();
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 124:Core/Src/main.c ****   /*Create a task*/
 125:Core/Src/main.c ****   xReturned = xTaskCreate(
 126:Core/Src/main.c ****           LedBlinker,      // Function to be called
 127:Core/Src/main.c ****           "LedBlink",     // Name of task
 128:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 129:Core/Src/main.c ****           (void*) Delay,  // Parameter to pass to function
 130:Core/Src/main.c ****           1,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 131:Core/Src/main.c ****           &xHandle1       // Task handle (allows to find and manipulate the task)
 132:Core/Src/main.c ****           );
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 136:Core/Src/main.c ****   MX_FREERTOS_Init();
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   /* Start scheduler */
 139:Core/Src/main.c ****   osKernelStart();
 140:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 141:Core/Src/main.c ****   /* Infinite loop */
 142:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 143:Core/Src/main.c ****   /* Redirect stdout to UART */
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   while (1)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     // HAL_Delay(1000);
 148:Core/Src/main.c ****     // HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 149:Core/Src/main.c ****     /* USER CODE END WHILE */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 152:Core/Src/main.c ****   }
 153:Core/Src/main.c ****   /* USER CODE END 3 */
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief System Clock Configuration
 158:Core/Src/main.c ****   * @retval None
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c **** void SystemClock_Config(void)
 161:Core/Src/main.c **** {
 162:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 163:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 168:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 171:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 172:Core/Src/main.c ****   */
 173:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 6


 174:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 181:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Activate the Over-Drive mode
 187:Core/Src/main.c ****   */
 188:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 196:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 203:Core/Src/main.c ****   {
 204:Core/Src/main.c ****     Error_Handler();
 205:Core/Src/main.c ****   }
 206:Core/Src/main.c **** }
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /* USER CODE END 4 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 214:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 215:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 216:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 217:Core/Src/main.c ****   * @param  htim : TIM handle
 218:Core/Src/main.c ****   * @retval None
 219:Core/Src/main.c ****   */
 220:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 221:Core/Src/main.c **** {
 111              		.loc 1 221 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 221 1 is_stmt 0 view .LVU16
 116 0000 08B5     		push	{r3, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 7


 222:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 225:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 120              		.loc 1 225 3 is_stmt 1 view .LVU17
 121              		.loc 1 225 11 is_stmt 0 view .LVU18
 122 0002 0268     		ldr	r2, [r0]
 123              		.loc 1 225 6 view .LVU19
 124 0004 034B     		ldr	r3, .L10
 125 0006 9A42     		cmp	r2, r3
 126 0008 00D0     		beq	.L9
 127              	.LVL11:
 128              	.L6:
 226:Core/Src/main.c ****     HAL_IncTick();
 227:Core/Src/main.c ****   }
 228:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 229:Core/Src/main.c **** 
 230:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 231:Core/Src/main.c **** }
 129              		.loc 1 231 1 view .LVU20
 130 000a 08BD     		pop	{r3, pc}
 131              	.LVL12:
 132              	.L9:
 226:Core/Src/main.c ****     HAL_IncTick();
 133              		.loc 1 226 5 is_stmt 1 view .LVU21
 134 000c FFF7FEFF 		bl	HAL_IncTick
 135              	.LVL13:
 136              		.loc 1 231 1 is_stmt 0 view .LVU22
 137 0010 FBE7     		b	.L6
 138              	.L11:
 139 0012 00BF     		.align	2
 140              	.L10:
 141 0014 00100040 		.word	1073745920
 142              		.cfi_endproc
 143              	.LFE152:
 145              		.section	.text.Error_Handler,"ax",%progbits
 146              		.align	1
 147              		.global	Error_Handler
 148              		.syntax unified
 149              		.thumb
 150              		.thumb_func
 152              	Error_Handler:
 153              	.LFB153:
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /**
 234:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 235:Core/Src/main.c ****   * @retval None
 236:Core/Src/main.c ****   */
 237:Core/Src/main.c **** void Error_Handler(void)
 238:Core/Src/main.c **** {
 154              		.loc 1 238 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ Volatile: function does not return.
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 239:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 8


 240:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 241:Core/Src/main.c ****   __disable_irq();
 160              		.loc 1 241 3 view .LVU24
 161              	.LBB4:
 162              	.LBI4:
 163              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 9


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 10


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 164              		.loc 2 140 27 view .LVU25
 165              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 166              		.loc 2 142 3 view .LVU26
 167              		.syntax unified
 168              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 169 0000 72B6     		cpsid i
 170              	@ 0 "" 2
 171              		.thumb
 172              		.syntax unified
 173              	.L13:
 174              	.LBE5:
 175              	.LBE4:
 242:Core/Src/main.c ****   while (1)
 176              		.loc 1 242 3 discriminator 1 view .LVU27
 243:Core/Src/main.c ****   {
 244:Core/Src/main.c ****   }
 177              		.loc 1 244 3 discriminator 1 view .LVU28
 242:Core/Src/main.c ****   while (1)
 178              		.loc 1 242 9 discriminator 1 view .LVU29
 179 0002 FEE7     		b	.L13
 180              		.cfi_endproc
 181              	.LFE153:
 183              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 11


 184              		.align	1
 185              		.global	SystemClock_Config
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	SystemClock_Config:
 191              	.LFB151:
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 192              		.loc 1 161 1 view -0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 80
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 00B5     		push	{lr}
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 14, -4
 199 0002 95B0     		sub	sp, sp, #84
 200              		.cfi_def_cfa_offset 88
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 201              		.loc 1 162 3 view .LVU31
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 202              		.loc 1 162 22 is_stmt 0 view .LVU32
 203 0004 3022     		movs	r2, #48
 204 0006 0021     		movs	r1, #0
 205 0008 08A8     		add	r0, sp, #32
 206 000a FFF7FEFF 		bl	memset
 207              	.LVL14:
 163:Core/Src/main.c **** 
 208              		.loc 1 163 3 is_stmt 1 view .LVU33
 163:Core/Src/main.c **** 
 209              		.loc 1 163 22 is_stmt 0 view .LVU34
 210 000e 0023     		movs	r3, #0
 211 0010 0393     		str	r3, [sp, #12]
 212 0012 0493     		str	r3, [sp, #16]
 213 0014 0593     		str	r3, [sp, #20]
 214 0016 0693     		str	r3, [sp, #24]
 215 0018 0793     		str	r3, [sp, #28]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 216              		.loc 1 167 3 is_stmt 1 view .LVU35
 217              	.LBB6:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 218              		.loc 1 167 3 view .LVU36
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 219              		.loc 1 167 3 view .LVU37
 220 001a 234B     		ldr	r3, .L22
 221 001c 1A6C     		ldr	r2, [r3, #64]
 222 001e 42F08052 		orr	r2, r2, #268435456
 223 0022 1A64     		str	r2, [r3, #64]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 224              		.loc 1 167 3 view .LVU38
 225 0024 1B6C     		ldr	r3, [r3, #64]
 226 0026 03F08053 		and	r3, r3, #268435456
 227 002a 0193     		str	r3, [sp, #4]
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 228              		.loc 1 167 3 view .LVU39
 229 002c 019B     		ldr	r3, [sp, #4]
 230              	.LBE6:
 167:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 12


 231              		.loc 1 167 3 view .LVU40
 168:Core/Src/main.c **** 
 232              		.loc 1 168 3 view .LVU41
 233              	.LBB7:
 168:Core/Src/main.c **** 
 234              		.loc 1 168 3 view .LVU42
 168:Core/Src/main.c **** 
 235              		.loc 1 168 3 view .LVU43
 236 002e 1F4B     		ldr	r3, .L22+4
 237 0030 1A68     		ldr	r2, [r3]
 238 0032 42F44042 		orr	r2, r2, #49152
 239 0036 1A60     		str	r2, [r3]
 168:Core/Src/main.c **** 
 240              		.loc 1 168 3 view .LVU44
 241 0038 1B68     		ldr	r3, [r3]
 242 003a 03F44043 		and	r3, r3, #49152
 243 003e 0293     		str	r3, [sp, #8]
 168:Core/Src/main.c **** 
 244              		.loc 1 168 3 view .LVU45
 245 0040 029B     		ldr	r3, [sp, #8]
 246              	.LBE7:
 168:Core/Src/main.c **** 
 247              		.loc 1 168 3 view .LVU46
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 248              		.loc 1 173 3 view .LVU47
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 249              		.loc 1 173 36 is_stmt 0 view .LVU48
 250 0042 0123     		movs	r3, #1
 251 0044 0893     		str	r3, [sp, #32]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 252              		.loc 1 174 3 is_stmt 1 view .LVU49
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 253              		.loc 1 174 30 is_stmt 0 view .LVU50
 254 0046 4FF48033 		mov	r3, #65536
 255 004a 0993     		str	r3, [sp, #36]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 256              		.loc 1 175 3 is_stmt 1 view .LVU51
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 257              		.loc 1 175 34 is_stmt 0 view .LVU52
 258 004c 0223     		movs	r3, #2
 259 004e 0E93     		str	r3, [sp, #56]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 260              		.loc 1 176 3 is_stmt 1 view .LVU53
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 261              		.loc 1 176 35 is_stmt 0 view .LVU54
 262 0050 4FF48002 		mov	r2, #4194304
 263 0054 0F92     		str	r2, [sp, #60]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 264              		.loc 1 177 3 is_stmt 1 view .LVU55
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 265              		.loc 1 177 30 is_stmt 0 view .LVU56
 266 0056 1922     		movs	r2, #25
 267 0058 1092     		str	r2, [sp, #64]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 268              		.loc 1 178 3 is_stmt 1 view .LVU57
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 269              		.loc 1 178 30 is_stmt 0 view .LVU58
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 13


 270 005a 4FF4D872 		mov	r2, #432
 271 005e 1192     		str	r2, [sp, #68]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 272              		.loc 1 179 3 is_stmt 1 view .LVU59
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 273              		.loc 1 179 30 is_stmt 0 view .LVU60
 274 0060 1293     		str	r3, [sp, #72]
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 275              		.loc 1 180 3 is_stmt 1 view .LVU61
 180:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 276              		.loc 1 180 30 is_stmt 0 view .LVU62
 277 0062 1393     		str	r3, [sp, #76]
 181:Core/Src/main.c ****   {
 278              		.loc 1 181 3 is_stmt 1 view .LVU63
 181:Core/Src/main.c ****   {
 279              		.loc 1 181 7 is_stmt 0 view .LVU64
 280 0064 08A8     		add	r0, sp, #32
 281 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 282              	.LVL15:
 181:Core/Src/main.c ****   {
 283              		.loc 1 181 6 view .LVU65
 284 006a B0B9     		cbnz	r0, .L19
 188:Core/Src/main.c ****   {
 285              		.loc 1 188 3 is_stmt 1 view .LVU66
 188:Core/Src/main.c ****   {
 286              		.loc 1 188 7 is_stmt 0 view .LVU67
 287 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 288              	.LVL16:
 188:Core/Src/main.c ****   {
 289              		.loc 1 188 6 view .LVU68
 290 0070 A8B9     		cbnz	r0, .L20
 195:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 291              		.loc 1 195 3 is_stmt 1 view .LVU69
 195:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 292              		.loc 1 195 31 is_stmt 0 view .LVU70
 293 0072 0F23     		movs	r3, #15
 294 0074 0393     		str	r3, [sp, #12]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 295              		.loc 1 197 3 is_stmt 1 view .LVU71
 197:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 296              		.loc 1 197 34 is_stmt 0 view .LVU72
 297 0076 0223     		movs	r3, #2
 298 0078 0493     		str	r3, [sp, #16]
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 299              		.loc 1 198 3 is_stmt 1 view .LVU73
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 300              		.loc 1 198 35 is_stmt 0 view .LVU74
 301 007a 0023     		movs	r3, #0
 302 007c 0593     		str	r3, [sp, #20]
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 303              		.loc 1 199 3 is_stmt 1 view .LVU75
 199:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 304              		.loc 1 199 36 is_stmt 0 view .LVU76
 305 007e 4FF4A053 		mov	r3, #5120
 306 0082 0693     		str	r3, [sp, #24]
 200:Core/Src/main.c **** 
 307              		.loc 1 200 3 is_stmt 1 view .LVU77
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 14


 200:Core/Src/main.c **** 
 308              		.loc 1 200 36 is_stmt 0 view .LVU78
 309 0084 4FF48053 		mov	r3, #4096
 310 0088 0793     		str	r3, [sp, #28]
 202:Core/Src/main.c ****   {
 311              		.loc 1 202 3 is_stmt 1 view .LVU79
 202:Core/Src/main.c ****   {
 312              		.loc 1 202 7 is_stmt 0 view .LVU80
 313 008a 0721     		movs	r1, #7
 314 008c 03A8     		add	r0, sp, #12
 315 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 316              	.LVL17:
 202:Core/Src/main.c ****   {
 317              		.loc 1 202 6 view .LVU81
 318 0092 30B9     		cbnz	r0, .L21
 206:Core/Src/main.c **** 
 319              		.loc 1 206 1 view .LVU82
 320 0094 15B0     		add	sp, sp, #84
 321              		.cfi_remember_state
 322              		.cfi_def_cfa_offset 4
 323              		@ sp needed
 324 0096 5DF804FB 		ldr	pc, [sp], #4
 325              	.L19:
 326              		.cfi_restore_state
 183:Core/Src/main.c ****   }
 327              		.loc 1 183 5 is_stmt 1 view .LVU83
 328 009a FFF7FEFF 		bl	Error_Handler
 329              	.LVL18:
 330              	.L20:
 190:Core/Src/main.c ****   }
 331              		.loc 1 190 5 view .LVU84
 332 009e FFF7FEFF 		bl	Error_Handler
 333              	.LVL19:
 334              	.L21:
 204:Core/Src/main.c ****   }
 335              		.loc 1 204 5 view .LVU85
 336 00a2 FFF7FEFF 		bl	Error_Handler
 337              	.LVL20:
 338              	.L23:
 339 00a6 00BF     		.align	2
 340              	.L22:
 341 00a8 00380240 		.word	1073887232
 342 00ac 00700040 		.word	1073770496
 343              		.cfi_endproc
 344              	.LFE151:
 346              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 347              		.align	2
 348              	.LC1:
 349 0000 4C656442 		.ascii	"LedBlink\000"
 349      6C696E6B 
 349      00
 350              		.section	.text.main,"ax",%progbits
 351              		.align	1
 352              		.global	main
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 15


 357              	main:
 358              	.LFB150:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 359              		.loc 1 98 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 8
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 00B5     		push	{lr}
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 14, -4
 366 0002 85B0     		sub	sp, sp, #20
 367              		.cfi_def_cfa_offset 24
 100:Core/Src/main.c ****   TaskHandle_t xHandle1 = NULL;
 368              		.loc 1 100 3 view .LVU87
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 369              		.loc 1 101 3 view .LVU88
 101:Core/Src/main.c ****   /* USER CODE END 1 */
 370              		.loc 1 101 16 is_stmt 0 view .LVU89
 371 0004 0023     		movs	r3, #0
 372 0006 0393     		str	r3, [sp, #12]
 107:Core/Src/main.c **** 
 373              		.loc 1 107 3 is_stmt 1 view .LVU90
 374 0008 FFF7FEFF 		bl	HAL_Init
 375              	.LVL21:
 114:Core/Src/main.c **** 
 376              		.loc 1 114 3 view .LVU91
 377 000c FFF7FEFF 		bl	SystemClock_Config
 378              	.LVL22:
 121:Core/Src/main.c ****   MX_USART1_UART_Init();
 379              		.loc 1 121 3 view .LVU92
 380 0010 FFF7FEFF 		bl	MX_GPIO_Init
 381              	.LVL23:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 382              		.loc 1 122 3 view .LVU93
 383 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 384              	.LVL24:
 125:Core/Src/main.c ****           LedBlinker,      // Function to be called
 385              		.loc 1 125 3 view .LVU94
 125:Core/Src/main.c ****           LedBlinker,      // Function to be called
 386              		.loc 1 125 15 is_stmt 0 view .LVU95
 387 0018 03AB     		add	r3, sp, #12
 388 001a 0193     		str	r3, [sp, #4]
 389 001c 0123     		movs	r3, #1
 390 001e 0093     		str	r3, [sp]
 391 0020 4FF4FA73 		mov	r3, #500
 392 0024 4FF47A72 		mov	r2, #1000
 393 0028 0449     		ldr	r1, .L27
 394 002a 0548     		ldr	r0, .L27+4
 395 002c FFF7FEFF 		bl	xTaskCreate
 396              	.LVL25:
 136:Core/Src/main.c **** 
 397              		.loc 1 136 3 is_stmt 1 view .LVU96
 398 0030 FFF7FEFF 		bl	MX_FREERTOS_Init
 399              	.LVL26:
 139:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 400              		.loc 1 139 3 view .LVU97
 401 0034 FFF7FEFF 		bl	osKernelStart
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 16


 402              	.LVL27:
 403              	.L25:
 145:Core/Src/main.c ****   {
 404              		.loc 1 145 3 discriminator 1 view .LVU98
 152:Core/Src/main.c ****   /* USER CODE END 3 */
 405              		.loc 1 152 3 discriminator 1 view .LVU99
 145:Core/Src/main.c ****   {
 406              		.loc 1 145 9 discriminator 1 view .LVU100
 407 0038 FEE7     		b	.L25
 408              	.L28:
 409 003a 00BF     		.align	2
 410              	.L27:
 411 003c 00000000 		.word	.LC1
 412 0040 00000000 		.word	LedBlinker
 413              		.cfi_endproc
 414              	.LFE150:
 416              		.text
 417              	.Letext0:
 418              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 419              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 420              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 421              		.file 6 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 422              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 423              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 424              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 425              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 426              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 427              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 428              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 429              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 430              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 431              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 432              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 433              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 434              		.file 19 "Core/Inc/usart.h"
 435              		.file 20 "Core/Inc/gpio.h"
 436              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 437              		.file 22 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 438              		.file 23 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 439              		.file 24 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccOwutWK.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:21     .rodata.LedBlinker.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:26     .text.LedBlinker:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:32     .text.LedBlinker:0000000000000000 LedBlinker
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:95     .text.LedBlinker:0000000000000040 $d
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:102    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:108    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:141    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:146    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:152    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:184    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:190    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:341    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:347    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:351    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:357    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\ccOwutWK.s:411    .text.main:000000000000003c $d

UNDEFINED SYMBOLS
xTaskGetCurrentTaskHandle
pcTaskGetName
sprintf
strlen
HAL_UART_Transmit
vTaskDelay
HAL_GPIO_TogglePin
huart1
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xTaskCreate
MX_FREERTOS_Init
osKernelStart
