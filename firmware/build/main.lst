ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.taskGive.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 4A652073 		.ascii	"Je suis la tache %s avant de donner la notification"
  23      75697320 
  23      6C612074 
  23      61636865 
  23      20257320 
  24 0033 0A00     		.ascii	"\012\000"
  25 0035 000000   		.align	2
  26              	.LC1:
  27 0038 4A652073 		.ascii	"Je suis la tache %s apres avoir donner la notificat"
  27      75697320 
  27      6C612074 
  27      61636865 
  27      20257320 
  28 006b 696F6E20 		.ascii	"ion tous les %d ms\012\000"
  28      746F7573 
  28      206C6573 
  28      20256420 
  28      6D730A00 
  29              		.section	.text.taskGive,"ax",%progbits
  30              		.align	1
  31              		.global	taskGive
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  36              	taskGive:
  37              	.LVL0:
  38              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 2


   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** #include "task.h"
  29:Core/Src/main.c **** #include "semphr.h"
  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <string.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define STACK_SIZE 1000
  42:Core/Src/main.c **** #define Delay 100
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** /* Semaphore */
  56:Core/Src/main.c **** SemaphoreHandle_t Semaphore;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Handle */
  60:Core/Src/main.c **** TaskHandle_t xHandlegive = NULL;
  61:Core/Src/main.c **** TaskHandle_t xHandletake = NULL;
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Notification */
  65:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 3


  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  72:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  73:Core/Src/main.c **** void LedBlinker (void * pvParameters);
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** void taskGive(void *pvParameters);
  76:Core/Src/main.c **** void taskTake(void *unsued);
  77:Core/Src/main.c **** /* USER CODE END PFP */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  80:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** 
  84:Core/Src/main.c **** /* Fonction Give*/
  85:Core/Src/main.c **** void taskGive(void *pvParameters) {
  39              		.loc 1 85 35 view -0
  40              		.cfi_startproc
  41              		@ args = 0, pretend = 0, frame = 104
  42              		@ frame_needed = 0, uses_anonymous_args = 0
  43              		.loc 1 85 35 is_stmt 0 view .LVU1
  44 0000 70B5     		push	{r4, r5, r6, lr}
  45              		.cfi_def_cfa_offset 16
  46              		.cfi_offset 4, -16
  47              		.cfi_offset 5, -12
  48              		.cfi_offset 6, -8
  49              		.cfi_offset 14, -4
  50 0002 9AB0     		sub	sp, sp, #104
  51              		.cfi_def_cfa_offset 120
  52 0004 0646     		mov	r6, r0
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****     int delay = (int) pvParameters;
  53              		.loc 1 87 5 is_stmt 1 view .LVU2
  54              	.LVL1:
  88:Core/Src/main.c ****     uint8_t uartTxBuffer[100];
  55              		.loc 1 88 5 view .LVU3
  89:Core/Src/main.c ****     char* s = pcTaskGetName(xTaskGetCurrentTaskHandle());
  56              		.loc 1 89 5 view .LVU4
  57              		.loc 1 89 15 is_stmt 0 view .LVU5
  58 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
  59              	.LVL2:
  60              		.loc 1 89 15 view .LVU6
  61 000a FFF7FEFF 		bl	pcTaskGetName
  62              	.LVL3:
  63 000e 0546     		mov	r5, r0
  64              	.LVL4:
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****     //Gestion erreur
  92:Core/Src/main.c ****     uint16_t xCountError = 0;
  65              		.loc 1 92 5 is_stmt 1 view .LVU7
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****     //Fixation de la fréquence du sémaphore
  95:Core/Src/main.c ****     TickType_t xLastWakeTime;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 4


  66              		.loc 1 95 5 view .LVU8
  96:Core/Src/main.c ****     xLastWakeTime =  xTaskGetTickCount();
  67              		.loc 1 96 5 view .LVU9
  68              		.loc 1 96 22 is_stmt 0 view .LVU10
  69 0010 FFF7FEFF 		bl	xTaskGetTickCount
  70              	.LVL5:
  71              		.loc 1 96 19 view .LVU11
  72 0014 0090     		str	r0, [sp]
  97:Core/Src/main.c ****     const TickType_t xFrequency = Delay;
  73              		.loc 1 97 5 is_stmt 1 view .LVU12
  74              	.LVL6:
  75              	.L2:
  98:Core/Src/main.c **** 
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     for(;;)
  76              		.loc 1 100 5 discriminator 1 view .LVU13
 101:Core/Src/main.c ****     {
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****       //Délais avec précision 
 104:Core/Src/main.c ****       vTaskDelayUntil(&xLastWakeTime,xFrequency);
  77              		.loc 1 104 7 discriminator 1 view .LVU14
  78 0016 6421     		movs	r1, #100
  79 0018 6846     		mov	r0, sp
  80 001a FFF7FEFF 		bl	vTaskDelayUntil
  81              	.LVL7:
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****       // Affichage sur console
 108:Core/Src/main.c ****       sprintf((char*)uartTxBuffer, "Je suis la tache %s avant de donner la notification\n", s);
  82              		.loc 1 108 7 discriminator 1 view .LVU15
  83 001e 2A46     		mov	r2, r5
  84 0020 1849     		ldr	r1, .L4
  85 0022 01A8     		add	r0, sp, #4
  86 0024 FFF7FEFF 		bl	sprintf
  87              	.LVL8:
 109:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
  88              		.loc 1 109 7 discriminator 1 view .LVU16
  89              		.loc 1 109 48 is_stmt 0 discriminator 1 view .LVU17
  90 0028 01A8     		add	r0, sp, #4
  91 002a FFF7FEFF 		bl	strlen
  92              	.LVL9:
  93              		.loc 1 109 7 discriminator 1 view .LVU18
  94 002e 164C     		ldr	r4, .L4+4
  95 0030 4FF0FF33 		mov	r3, #-1
  96 0034 82B2     		uxth	r2, r0
  97 0036 01A9     		add	r1, sp, #4
  98 0038 2046     		mov	r0, r4
  99 003a FFF7FEFF 		bl	HAL_UART_Transmit
 100              	.LVL10:
 110:Core/Src/main.c **** 
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****       //Envoi de la notification à la tache take
 113:Core/Src/main.c ****       xTaskNotifyGive(xHandletake);
 101              		.loc 1 113 7 is_stmt 1 discriminator 1 view .LVU19
 102 003e 0023     		movs	r3, #0
 103 0040 0222     		movs	r2, #2
 104 0042 1946     		mov	r1, r3
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 5


 105 0044 1148     		ldr	r0, .L4+8
 106 0046 0068     		ldr	r0, [r0]
 107 0048 FFF7FEFF 		bl	xTaskGenericNotify
 108              	.LVL11:
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****       //Verification avec la LED
 116:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,GPIO_PIN_RESET);
 109              		.loc 1 116 7 discriminator 1 view .LVU20
 110 004c 0022     		movs	r2, #0
 111 004e 0221     		movs	r1, #2
 112 0050 0F48     		ldr	r0, .L4+12
 113 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 114              	.LVL12:
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****       sprintf((char*)uartTxBuffer, "Je suis la tache %s apres avoir donner la notification tous les
 115              		.loc 1 118 7 discriminator 1 view .LVU21
 116 0056 3346     		mov	r3, r6
 117 0058 2A46     		mov	r2, r5
 118 005a 0E49     		ldr	r1, .L4+16
 119 005c 01A8     		add	r0, sp, #4
 120 005e FFF7FEFF 		bl	sprintf
 121              	.LVL13:
 119:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 122              		.loc 1 119 7 discriminator 1 view .LVU22
 123              		.loc 1 119 48 is_stmt 0 discriminator 1 view .LVU23
 124 0062 01A8     		add	r0, sp, #4
 125 0064 FFF7FEFF 		bl	strlen
 126              	.LVL14:
 127              		.loc 1 119 7 discriminator 1 view .LVU24
 128 0068 4FF0FF33 		mov	r3, #-1
 129 006c 82B2     		uxth	r2, r0
 130 006e 01A9     		add	r1, sp, #4
 131 0070 2046     		mov	r0, r4
 132 0072 FFF7FEFF 		bl	HAL_UART_Transmit
 133              	.LVL15:
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****       /* Attente de la prise de notification */
 122:Core/Src/main.c ****       ulTaskNotifyTake( pdTRUE, portMAX_DELAY );
 134              		.loc 1 122 7 is_stmt 1 discriminator 1 view .LVU25
 135 0076 4FF0FF31 		mov	r1, #-1
 136 007a 0120     		movs	r0, #1
 137 007c FFF7FEFF 		bl	ulTaskNotifyTake
 138              	.LVL16:
 100:Core/Src/main.c ****     {
 139              		.loc 1 100 5 discriminator 1 view .LVU26
 140 0080 C9E7     		b	.L2
 141              	.L5:
 142 0082 00BF     		.align	2
 143              	.L4:
 144 0084 00000000 		.word	.LC0
 145 0088 00000000 		.word	huart1
 146 008c 00000000 		.word	xHandletake
 147 0090 00200240 		.word	1073881088
 148 0094 38000000 		.word	.LC1
 149              		.cfi_endproc
 150              	.LFE149:
 152              		.section	.rodata.taskTake.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 6


 153              		.align	2
 154              	.LC2:
 155 0000 4A652073 		.ascii	"Je suis la tache %s avant de prendre la notificatio"
 155      75697320 
 155      6C612074 
 155      61636865 
 155      20257320 
 156 0033 6E0A00   		.ascii	"n\012\000"
 157 0036 0000     		.align	2
 158              	.LC3:
 159 0038 4A652073 		.ascii	"Je suis la tache %s apres avoir pris la notificatio"
 159      75697320 
 159      6C612074 
 159      61636865 
 159      20257320 
 160 006b 6E200A00 		.ascii	"n \012\000"
 161              		.section	.text.taskTake,"ax",%progbits
 162              		.align	1
 163              		.global	taskTake
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 168              	taskTake:
 169              	.LVL17:
 170              	.LFB150:
 123:Core/Src/main.c ****      
 124:Core/Src/main.c ****     }
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** void taskTake(void *unsued) {
 171              		.loc 1 128 29 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 104
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		.loc 1 128 29 is_stmt 0 view .LVU28
 176 0000 30B5     		push	{r4, r5, lr}
 177              		.cfi_def_cfa_offset 12
 178              		.cfi_offset 4, -12
 179              		.cfi_offset 5, -8
 180              		.cfi_offset 14, -4
 181 0002 9BB0     		sub	sp, sp, #108
 182              		.cfi_def_cfa_offset 120
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****     uint8_t uartTxBuffer[100];
 183              		.loc 1 130 5 is_stmt 1 view .LVU29
 131:Core/Src/main.c ****     char* s = pcTaskGetName(xTaskGetCurrentTaskHandle());
 184              		.loc 1 131 5 view .LVU30
 185              		.loc 1 131 15 is_stmt 0 view .LVU31
 186 0004 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 187              	.LVL18:
 188              		.loc 1 131 15 view .LVU32
 189 0008 FFF7FEFF 		bl	pcTaskGetName
 190              	.LVL19:
 191 000c 0546     		mov	r5, r0
 192              	.LVL20:
 193              	.L7:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 7


 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****     for(;;)
 194              		.loc 1 133 5 is_stmt 1 discriminator 1 view .LVU33
 134:Core/Src/main.c ****     {
 135:Core/Src/main.c **** 
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****         // Affichage sur console
 138:Core/Src/main.c ****         sprintf((char*)uartTxBuffer, "Je suis la tache %s avant de prendre la notification\n", s);
 195              		.loc 1 138 9 discriminator 1 view .LVU34
 196 000e 2A46     		mov	r2, r5
 197 0010 1749     		ldr	r1, .L9
 198 0012 01A8     		add	r0, sp, #4
 199 0014 FFF7FEFF 		bl	sprintf
 200              	.LVL21:
 139:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 201              		.loc 1 139 9 discriminator 1 view .LVU35
 202              		.loc 1 139 50 is_stmt 0 discriminator 1 view .LVU36
 203 0018 01A8     		add	r0, sp, #4
 204 001a FFF7FEFF 		bl	strlen
 205              	.LVL22:
 206              		.loc 1 139 9 discriminator 1 view .LVU37
 207 001e 154C     		ldr	r4, .L9+4
 208 0020 4FF0FF33 		mov	r3, #-1
 209 0024 82B2     		uxth	r2, r0
 210 0026 01A9     		add	r1, sp, #4
 211 0028 2046     		mov	r0, r4
 212 002a FFF7FEFF 		bl	HAL_UART_Transmit
 213              	.LVL23:
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****         /* Attente de la prise de notification */
 142:Core/Src/main.c ****         ulTaskNotifyTake( pdTRUE, portMAX_DELAY );
 214              		.loc 1 142 9 is_stmt 1 discriminator 1 view .LVU38
 215 002e 4FF0FF31 		mov	r1, #-1
 216 0032 0120     		movs	r0, #1
 217 0034 FFF7FEFF 		bl	ulTaskNotifyTake
 218              	.LVL24:
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****         //Verification avec la LED
 146:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,GPIO_PIN_SET);
 219              		.loc 1 146 9 discriminator 1 view .LVU39
 220 0038 0122     		movs	r2, #1
 221 003a 0221     		movs	r1, #2
 222 003c 0E48     		ldr	r0, .L9+8
 223 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 224              	.LVL25:
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****         sprintf((char*)uartTxBuffer, "Je suis la tache %s apres avoir pris la notification \n", s);
 225              		.loc 1 148 9 discriminator 1 view .LVU40
 226 0042 2A46     		mov	r2, r5
 227 0044 0D49     		ldr	r1, .L9+12
 228 0046 01A8     		add	r0, sp, #4
 229 0048 FFF7FEFF 		bl	sprintf
 230              	.LVL26:
 149:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 231              		.loc 1 149 9 discriminator 1 view .LVU41
 232              		.loc 1 149 50 is_stmt 0 discriminator 1 view .LVU42
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 8


 233 004c 01A8     		add	r0, sp, #4
 234 004e FFF7FEFF 		bl	strlen
 235              	.LVL27:
 236              		.loc 1 149 9 discriminator 1 view .LVU43
 237 0052 4FF0FF33 		mov	r3, #-1
 238 0056 82B2     		uxth	r2, r0
 239 0058 01A9     		add	r1, sp, #4
 240 005a 2046     		mov	r0, r4
 241 005c FFF7FEFF 		bl	HAL_UART_Transmit
 242              	.LVL28:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****         //Envoi de la notification à la tache Give
 152:Core/Src/main.c ****         xTaskNotifyGive(xHandlegive);
 243              		.loc 1 152 9 is_stmt 1 discriminator 1 view .LVU44
 244 0060 0023     		movs	r3, #0
 245 0062 0222     		movs	r2, #2
 246 0064 1946     		mov	r1, r3
 247 0066 0648     		ldr	r0, .L9+16
 248 0068 0068     		ldr	r0, [r0]
 249 006a FFF7FEFF 		bl	xTaskGenericNotify
 250              	.LVL29:
 133:Core/Src/main.c ****     {
 251              		.loc 1 133 5 discriminator 1 view .LVU45
 252 006e CEE7     		b	.L7
 253              	.L10:
 254              		.align	2
 255              	.L9:
 256 0070 00000000 		.word	.LC2
 257 0074 00000000 		.word	huart1
 258 0078 00200240 		.word	1073881088
 259 007c 38000000 		.word	.LC3
 260 0080 00000000 		.word	xHandlegive
 261              		.cfi_endproc
 262              	.LFE150:
 264              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 265              		.align	1
 266              		.global	HAL_TIM_PeriodElapsedCallback
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	HAL_TIM_PeriodElapsedCallback:
 272              	.LVL30:
 273              	.LFB153:
 153:Core/Src/main.c ****       
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /* USER CODE END 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** /**
 162:Core/Src/main.c ****   * @brief  The application entry point.
 163:Core/Src/main.c ****   * @retval int
 164:Core/Src/main.c ****   */
 165:Core/Src/main.c **** int main(void)
 166:Core/Src/main.c **** {
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 9


 167:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END 1 */
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 174:Core/Src/main.c ****   HAL_Init();
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   /* USER CODE END Init */
 179:Core/Src/main.c **** 
 180:Core/Src/main.c ****   /* Configure the system clock */
 181:Core/Src/main.c ****   SystemClock_Config();
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END SysInit */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* Initialize all configured peripherals */
 188:Core/Src/main.c ****   MX_GPIO_Init();
 189:Core/Src/main.c ****   MX_USART1_UART_Init();
 190:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 191:Core/Src/main.c **** 
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* Create a taskGive*/
 194:Core/Src/main.c ****   xTaskCreate(
 195:Core/Src/main.c ****           taskGive,       // Function to be called
 196:Core/Src/main.c ****           "Give",         // Name of task
 197:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 198:Core/Src/main.c ****           (void*) Delay,  // Parameter to pass to function
 199:Core/Src/main.c ****           1,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 200:Core/Src/main.c ****           &xHandlegive       // Task handle (allows to find and manipulate the task)
 201:Core/Src/main.c ****           );
 202:Core/Src/main.c **** 
 203:Core/Src/main.c ****   /* Create a taskTake*/
 204:Core/Src/main.c ****   xTaskCreate(
 205:Core/Src/main.c ****           taskTake,       // Function to be called
 206:Core/Src/main.c ****           "Take",         // Name of task
 207:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 208:Core/Src/main.c ****           NULL,           // Parameter to pass to function
 209:Core/Src/main.c ****           2,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 210:Core/Src/main.c ****           &xHandletake       // Task handle (allows to find and manipulate the task)
 211:Core/Src/main.c ****           );
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE END 2 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 216:Core/Src/main.c ****   MX_FREERTOS_Init();
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* Start scheduler */
 219:Core/Src/main.c ****   osKernelStart();
 220:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 221:Core/Src/main.c ****   /* Infinite loop */
 222:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 223:Core/Src/main.c ****   /* Redirect stdout to UART */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 10


 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   while (1)
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****     // HAL_Delay(1000);
 228:Core/Src/main.c ****     // HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 229:Core/Src/main.c ****     /* USER CODE END WHILE */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 232:Core/Src/main.c ****   }
 233:Core/Src/main.c ****   /* USER CODE END 3 */
 234:Core/Src/main.c **** }
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /**
 237:Core/Src/main.c ****   * @brief System Clock Configuration
 238:Core/Src/main.c ****   * @retval None
 239:Core/Src/main.c ****   */
 240:Core/Src/main.c **** void SystemClock_Config(void)
 241:Core/Src/main.c **** {
 242:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 243:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 246:Core/Src/main.c ****   */
 247:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 248:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 251:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 252:Core/Src/main.c ****   */
 253:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 254:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 260:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 261:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   /** Activate the Over-Drive mode
 267:Core/Src/main.c ****   */
 268:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c **** 
 273:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 274:Core/Src/main.c ****   */
 275:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 276:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 277:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 278:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 280:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 11


 281:Core/Src/main.c **** 
 282:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 283:Core/Src/main.c ****   {
 284:Core/Src/main.c ****     Error_Handler();
 285:Core/Src/main.c ****   }
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** /* USER CODE END 4 */
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** /**
 293:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 294:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 295:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 296:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 297:Core/Src/main.c ****   * @param  htim : TIM handle
 298:Core/Src/main.c ****   * @retval None
 299:Core/Src/main.c ****   */
 300:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 301:Core/Src/main.c **** {
 274              		.loc 1 301 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		.loc 1 301 1 is_stmt 0 view .LVU47
 279 0000 08B5     		push	{r3, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 302:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 305:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 283              		.loc 1 305 3 is_stmt 1 view .LVU48
 284              		.loc 1 305 11 is_stmt 0 view .LVU49
 285 0002 0268     		ldr	r2, [r0]
 286              		.loc 1 305 6 view .LVU50
 287 0004 034B     		ldr	r3, .L15
 288 0006 9A42     		cmp	r2, r3
 289 0008 00D0     		beq	.L14
 290              	.LVL31:
 291              	.L11:
 306:Core/Src/main.c ****     HAL_IncTick();
 307:Core/Src/main.c ****   }
 308:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 311:Core/Src/main.c **** }
 292              		.loc 1 311 1 view .LVU51
 293 000a 08BD     		pop	{r3, pc}
 294              	.LVL32:
 295              	.L14:
 306:Core/Src/main.c ****     HAL_IncTick();
 296              		.loc 1 306 5 is_stmt 1 view .LVU52
 297 000c FFF7FEFF 		bl	HAL_IncTick
 298              	.LVL33:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 12


 299              		.loc 1 311 1 is_stmt 0 view .LVU53
 300 0010 FBE7     		b	.L11
 301              	.L16:
 302 0012 00BF     		.align	2
 303              	.L15:
 304 0014 00100040 		.word	1073745920
 305              		.cfi_endproc
 306              	.LFE153:
 308              		.section	.text.Error_Handler,"ax",%progbits
 309              		.align	1
 310              		.global	Error_Handler
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 315              	Error_Handler:
 316              	.LFB154:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 315:Core/Src/main.c ****   * @retval None
 316:Core/Src/main.c ****   */
 317:Core/Src/main.c **** void Error_Handler(void)
 318:Core/Src/main.c **** {
 317              		.loc 1 318 1 is_stmt 1 view -0
 318              		.cfi_startproc
 319              		@ Volatile: function does not return.
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 319:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 320:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 321:Core/Src/main.c ****   __disable_irq();
 323              		.loc 1 321 3 view .LVU55
 324              	.LBB4:
 325              	.LBI4:
 326              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 13


  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 14


  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 15


 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 327              		.loc 2 140 27 view .LVU56
 328              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 329              		.loc 2 142 3 view .LVU57
 330              		.syntax unified
 331              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 332 0000 72B6     		cpsid i
 333              	@ 0 "" 2
 334              		.thumb
 335              		.syntax unified
 336              	.L18:
 337              	.LBE5:
 338              	.LBE4:
 322:Core/Src/main.c ****   while (1)
 339              		.loc 1 322 3 discriminator 1 view .LVU58
 323:Core/Src/main.c ****   {
 324:Core/Src/main.c ****   }
 340              		.loc 1 324 3 discriminator 1 view .LVU59
 322:Core/Src/main.c ****   while (1)
 341              		.loc 1 322 9 discriminator 1 view .LVU60
 342 0002 FEE7     		b	.L18
 343              		.cfi_endproc
 344              	.LFE154:
 346              		.section	.text.SystemClock_Config,"ax",%progbits
 347              		.align	1
 348              		.global	SystemClock_Config
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	SystemClock_Config:
 354              	.LFB152:
 241:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 355              		.loc 1 241 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 80
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 00B5     		push	{lr}
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 14, -4
 362 0002 95B0     		sub	sp, sp, #84
 363              		.cfi_def_cfa_offset 88
 242:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 364              		.loc 1 242 3 view .LVU62
 242:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 365              		.loc 1 242 22 is_stmt 0 view .LVU63
 366 0004 3022     		movs	r2, #48
 367 0006 0021     		movs	r1, #0
 368 0008 08A8     		add	r0, sp, #32
 369 000a FFF7FEFF 		bl	memset
 370              	.LVL34:
 243:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 16


 371              		.loc 1 243 3 is_stmt 1 view .LVU64
 243:Core/Src/main.c **** 
 372              		.loc 1 243 22 is_stmt 0 view .LVU65
 373 000e 0023     		movs	r3, #0
 374 0010 0393     		str	r3, [sp, #12]
 375 0012 0493     		str	r3, [sp, #16]
 376 0014 0593     		str	r3, [sp, #20]
 377 0016 0693     		str	r3, [sp, #24]
 378 0018 0793     		str	r3, [sp, #28]
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 379              		.loc 1 247 3 is_stmt 1 view .LVU66
 380              	.LBB6:
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 381              		.loc 1 247 3 view .LVU67
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 382              		.loc 1 247 3 view .LVU68
 383 001a 234B     		ldr	r3, .L27
 384 001c 1A6C     		ldr	r2, [r3, #64]
 385 001e 42F08052 		orr	r2, r2, #268435456
 386 0022 1A64     		str	r2, [r3, #64]
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 387              		.loc 1 247 3 view .LVU69
 388 0024 1B6C     		ldr	r3, [r3, #64]
 389 0026 03F08053 		and	r3, r3, #268435456
 390 002a 0193     		str	r3, [sp, #4]
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 391              		.loc 1 247 3 view .LVU70
 392 002c 019B     		ldr	r3, [sp, #4]
 393              	.LBE6:
 247:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 394              		.loc 1 247 3 view .LVU71
 248:Core/Src/main.c **** 
 395              		.loc 1 248 3 view .LVU72
 396              	.LBB7:
 248:Core/Src/main.c **** 
 397              		.loc 1 248 3 view .LVU73
 248:Core/Src/main.c **** 
 398              		.loc 1 248 3 view .LVU74
 399 002e 1F4B     		ldr	r3, .L27+4
 400 0030 1A68     		ldr	r2, [r3]
 401 0032 42F44042 		orr	r2, r2, #49152
 402 0036 1A60     		str	r2, [r3]
 248:Core/Src/main.c **** 
 403              		.loc 1 248 3 view .LVU75
 404 0038 1B68     		ldr	r3, [r3]
 405 003a 03F44043 		and	r3, r3, #49152
 406 003e 0293     		str	r3, [sp, #8]
 248:Core/Src/main.c **** 
 407              		.loc 1 248 3 view .LVU76
 408 0040 029B     		ldr	r3, [sp, #8]
 409              	.LBE7:
 248:Core/Src/main.c **** 
 410              		.loc 1 248 3 view .LVU77
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 411              		.loc 1 253 3 view .LVU78
 253:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 412              		.loc 1 253 36 is_stmt 0 view .LVU79
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 17


 413 0042 0123     		movs	r3, #1
 414 0044 0893     		str	r3, [sp, #32]
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 415              		.loc 1 254 3 is_stmt 1 view .LVU80
 254:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 416              		.loc 1 254 30 is_stmt 0 view .LVU81
 417 0046 4FF48033 		mov	r3, #65536
 418 004a 0993     		str	r3, [sp, #36]
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 419              		.loc 1 255 3 is_stmt 1 view .LVU82
 255:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 420              		.loc 1 255 34 is_stmt 0 view .LVU83
 421 004c 0223     		movs	r3, #2
 422 004e 0E93     		str	r3, [sp, #56]
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 423              		.loc 1 256 3 is_stmt 1 view .LVU84
 256:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 424              		.loc 1 256 35 is_stmt 0 view .LVU85
 425 0050 4FF48002 		mov	r2, #4194304
 426 0054 0F92     		str	r2, [sp, #60]
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 427              		.loc 1 257 3 is_stmt 1 view .LVU86
 257:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 428              		.loc 1 257 30 is_stmt 0 view .LVU87
 429 0056 1922     		movs	r2, #25
 430 0058 1092     		str	r2, [sp, #64]
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 431              		.loc 1 258 3 is_stmt 1 view .LVU88
 258:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 432              		.loc 1 258 30 is_stmt 0 view .LVU89
 433 005a 4FF4D872 		mov	r2, #432
 434 005e 1192     		str	r2, [sp, #68]
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 435              		.loc 1 259 3 is_stmt 1 view .LVU90
 259:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 436              		.loc 1 259 30 is_stmt 0 view .LVU91
 437 0060 1293     		str	r3, [sp, #72]
 260:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 438              		.loc 1 260 3 is_stmt 1 view .LVU92
 260:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 439              		.loc 1 260 30 is_stmt 0 view .LVU93
 440 0062 1393     		str	r3, [sp, #76]
 261:Core/Src/main.c ****   {
 441              		.loc 1 261 3 is_stmt 1 view .LVU94
 261:Core/Src/main.c ****   {
 442              		.loc 1 261 7 is_stmt 0 view .LVU95
 443 0064 08A8     		add	r0, sp, #32
 444 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 445              	.LVL35:
 261:Core/Src/main.c ****   {
 446              		.loc 1 261 6 view .LVU96
 447 006a B0B9     		cbnz	r0, .L24
 268:Core/Src/main.c ****   {
 448              		.loc 1 268 3 is_stmt 1 view .LVU97
 268:Core/Src/main.c ****   {
 449              		.loc 1 268 7 is_stmt 0 view .LVU98
 450 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 18


 451              	.LVL36:
 268:Core/Src/main.c ****   {
 452              		.loc 1 268 6 view .LVU99
 453 0070 A8B9     		cbnz	r0, .L25
 275:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 454              		.loc 1 275 3 is_stmt 1 view .LVU100
 275:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 455              		.loc 1 275 31 is_stmt 0 view .LVU101
 456 0072 0F23     		movs	r3, #15
 457 0074 0393     		str	r3, [sp, #12]
 277:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 458              		.loc 1 277 3 is_stmt 1 view .LVU102
 277:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 459              		.loc 1 277 34 is_stmt 0 view .LVU103
 460 0076 0223     		movs	r3, #2
 461 0078 0493     		str	r3, [sp, #16]
 278:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 462              		.loc 1 278 3 is_stmt 1 view .LVU104
 278:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 463              		.loc 1 278 35 is_stmt 0 view .LVU105
 464 007a 0023     		movs	r3, #0
 465 007c 0593     		str	r3, [sp, #20]
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 466              		.loc 1 279 3 is_stmt 1 view .LVU106
 279:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 467              		.loc 1 279 36 is_stmt 0 view .LVU107
 468 007e 4FF4A053 		mov	r3, #5120
 469 0082 0693     		str	r3, [sp, #24]
 280:Core/Src/main.c **** 
 470              		.loc 1 280 3 is_stmt 1 view .LVU108
 280:Core/Src/main.c **** 
 471              		.loc 1 280 36 is_stmt 0 view .LVU109
 472 0084 4FF48053 		mov	r3, #4096
 473 0088 0793     		str	r3, [sp, #28]
 282:Core/Src/main.c ****   {
 474              		.loc 1 282 3 is_stmt 1 view .LVU110
 282:Core/Src/main.c ****   {
 475              		.loc 1 282 7 is_stmt 0 view .LVU111
 476 008a 0721     		movs	r1, #7
 477 008c 03A8     		add	r0, sp, #12
 478 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 479              	.LVL37:
 282:Core/Src/main.c ****   {
 480              		.loc 1 282 6 view .LVU112
 481 0092 30B9     		cbnz	r0, .L26
 286:Core/Src/main.c **** 
 482              		.loc 1 286 1 view .LVU113
 483 0094 15B0     		add	sp, sp, #84
 484              		.cfi_remember_state
 485              		.cfi_def_cfa_offset 4
 486              		@ sp needed
 487 0096 5DF804FB 		ldr	pc, [sp], #4
 488              	.L24:
 489              		.cfi_restore_state
 263:Core/Src/main.c ****   }
 490              		.loc 1 263 5 is_stmt 1 view .LVU114
 491 009a FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 19


 492              	.LVL38:
 493              	.L25:
 270:Core/Src/main.c ****   }
 494              		.loc 1 270 5 view .LVU115
 495 009e FFF7FEFF 		bl	Error_Handler
 496              	.LVL39:
 497              	.L26:
 284:Core/Src/main.c ****   }
 498              		.loc 1 284 5 view .LVU116
 499 00a2 FFF7FEFF 		bl	Error_Handler
 500              	.LVL40:
 501              	.L28:
 502 00a6 00BF     		.align	2
 503              	.L27:
 504 00a8 00380240 		.word	1073887232
 505 00ac 00700040 		.word	1073770496
 506              		.cfi_endproc
 507              	.LFE152:
 509              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 510              		.align	2
 511              	.LC4:
 512 0000 47697665 		.ascii	"Give\000"
 512      00
 513 0005 000000   		.align	2
 514              	.LC5:
 515 0008 54616B65 		.ascii	"Take\000"
 515      00
 516              		.section	.text.main,"ax",%progbits
 517              		.align	1
 518              		.global	main
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 523              	main:
 524              	.LFB151:
 166:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 525              		.loc 1 166 1 view -0
 526              		.cfi_startproc
 527              		@ Volatile: function does not return.
 528              		@ args = 0, pretend = 0, frame = 0
 529              		@ frame_needed = 0, uses_anonymous_args = 0
 530 0000 00B5     		push	{lr}
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 14, -4
 533 0002 83B0     		sub	sp, sp, #12
 534              		.cfi_def_cfa_offset 16
 174:Core/Src/main.c **** 
 535              		.loc 1 174 3 view .LVU118
 536 0004 FFF7FEFF 		bl	HAL_Init
 537              	.LVL41:
 181:Core/Src/main.c **** 
 538              		.loc 1 181 3 view .LVU119
 539 0008 FFF7FEFF 		bl	SystemClock_Config
 540              	.LVL42:
 188:Core/Src/main.c ****   MX_USART1_UART_Init();
 541              		.loc 1 188 3 view .LVU120
 542 000c FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 20


 543              	.LVL43:
 189:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 544              		.loc 1 189 3 view .LVU121
 545 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 546              	.LVL44:
 194:Core/Src/main.c ****           taskGive,       // Function to be called
 547              		.loc 1 194 3 view .LVU122
 548 0014 0D4B     		ldr	r3, .L32
 549 0016 0193     		str	r3, [sp, #4]
 550 0018 0123     		movs	r3, #1
 551 001a 0093     		str	r3, [sp]
 552 001c 6423     		movs	r3, #100
 553 001e 4FF47A72 		mov	r2, #1000
 554 0022 0B49     		ldr	r1, .L32+4
 555 0024 0B48     		ldr	r0, .L32+8
 556 0026 FFF7FEFF 		bl	xTaskCreate
 557              	.LVL45:
 204:Core/Src/main.c ****           taskTake,       // Function to be called
 558              		.loc 1 204 3 view .LVU123
 559 002a 0B4B     		ldr	r3, .L32+12
 560 002c 0193     		str	r3, [sp, #4]
 561 002e 0223     		movs	r3, #2
 562 0030 0093     		str	r3, [sp]
 563 0032 0023     		movs	r3, #0
 564 0034 4FF47A72 		mov	r2, #1000
 565 0038 0849     		ldr	r1, .L32+16
 566 003a 0948     		ldr	r0, .L32+20
 567 003c FFF7FEFF 		bl	xTaskCreate
 568              	.LVL46:
 216:Core/Src/main.c **** 
 569              		.loc 1 216 3 view .LVU124
 570 0040 FFF7FEFF 		bl	MX_FREERTOS_Init
 571              	.LVL47:
 219:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 572              		.loc 1 219 3 view .LVU125
 573 0044 FFF7FEFF 		bl	osKernelStart
 574              	.LVL48:
 575              	.L30:
 225:Core/Src/main.c ****   {
 576              		.loc 1 225 3 discriminator 1 view .LVU126
 232:Core/Src/main.c ****   /* USER CODE END 3 */
 577              		.loc 1 232 3 discriminator 1 view .LVU127
 225:Core/Src/main.c ****   {
 578              		.loc 1 225 9 discriminator 1 view .LVU128
 579 0048 FEE7     		b	.L30
 580              	.L33:
 581 004a 00BF     		.align	2
 582              	.L32:
 583 004c 00000000 		.word	xHandlegive
 584 0050 00000000 		.word	.LC4
 585 0054 00000000 		.word	taskGive
 586 0058 00000000 		.word	xHandletake
 587 005c 08000000 		.word	.LC5
 588 0060 00000000 		.word	taskTake
 589              		.cfi_endproc
 590              	.LFE151:
 592              		.global	xHandletake
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 21


 593              		.section	.bss.xHandletake,"aw",%nobits
 594              		.align	2
 597              	xHandletake:
 598 0000 00000000 		.space	4
 599              		.global	xHandlegive
 600              		.section	.bss.xHandlegive,"aw",%nobits
 601              		.align	2
 604              	xHandlegive:
 605 0000 00000000 		.space	4
 606              		.global	Semaphore
 607              		.section	.bss.Semaphore,"aw",%nobits
 608              		.align	2
 611              	Semaphore:
 612 0000 00000000 		.space	4
 613              		.text
 614              	.Letext0:
 615              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 616              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 617              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 618              		.file 6 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 619              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 620              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 621              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 622              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 623              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 624              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 625              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 626              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 627              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 628              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 629              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 630              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 631              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 632              		.file 20 "Core/Inc/usart.h"
 633              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 634              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 635              		.file 23 "Core/Inc/gpio.h"
 636              		.file 24 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 637              		.file 25 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 638              		.file 26 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccm7TABh.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:21     .rodata.taskGive.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:30     .text.taskGive:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:36     .text.taskGive:0000000000000000 taskGive
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:144    .text.taskGive:0000000000000084 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:597    .bss.xHandletake:0000000000000000 xHandletake
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:153    .rodata.taskTake.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:162    .text.taskTake:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:168    .text.taskTake:0000000000000000 taskTake
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:256    .text.taskTake:0000000000000070 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:604    .bss.xHandlegive:0000000000000000 xHandlegive
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:265    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:271    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:304    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:309    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:315    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:347    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:353    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:504    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:510    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:517    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:523    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:583    .text.main:000000000000004c $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:594    .bss.xHandletake:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:601    .bss.xHandlegive:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:611    .bss.Semaphore:0000000000000000 Semaphore
C:\Users\billa\AppData\Local\Temp\ccm7TABh.s:608    .bss.Semaphore:0000000000000000 $d

UNDEFINED SYMBOLS
xTaskGetCurrentTaskHandle
pcTaskGetName
xTaskGetTickCount
vTaskDelayUntil
sprintf
strlen
HAL_UART_Transmit
xTaskGenericNotify
HAL_GPIO_WritePin
ulTaskNotifyTake
huart1
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xTaskCreate
MX_FREERTOS_Init
osKernelStart
