ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.taskGive.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 4A652073 		.ascii	"Je suis la tache %s avant de donner le semaphore\012"
  23      75697320 
  23      6C612074 
  23      61636865 
  23      20257320 
  24 0031 00       		.ascii	"\000"
  25 0032 0000     		.align	2
  26              	.LC1:
  27 0034 4A652073 		.ascii	"Je suis la tache %s apres avoir donner semaphore to"
  27      75697320 
  27      6C612074 
  27      61636865 
  27      20257320 
  28 0067 7573206C 		.ascii	"us les %d ms\012\000"
  28      65732025 
  28      64206D73 
  28      0A00
  29 0075 000000   		.align	2
  30              	.LC2:
  31 0078 45727265 		.ascii	"Erreur : Semaphore non cree\012\000"
  31      7572203A 
  31      2053656D 
  31      6170686F 
  31      7265206E 
  32 0095 000000   		.align	2
  33              	.LC3:
  34 0098 53797374 		.ascii	"System Reset\012\000"
  34      656D2052 
  34      65736574 
  34      0A00
  35              		.section	.text.taskGive,"ax",%progbits
  36              		.align	1
  37              		.global	taskGive
  38              		.syntax unified
  39              		.thumb
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 2


  40              		.thumb_func
  42              	taskGive:
  43              	.LVL0:
  44              	.LFB149:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "FreeRTOS.h"
  28:Core/Src/main.c **** #include "task.h"
  29:Core/Src/main.c **** #include "semphr.h"
  30:Core/Src/main.c **** #include <stdio.h>
  31:Core/Src/main.c **** #include <string.h>
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** #define STACK_SIZE 1000
  42:Core/Src/main.c **** #define Delay 100
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE END PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  47:Core/Src/main.c **** /* USER CODE BEGIN PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE END PM */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  53:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 3


  54:Core/Src/main.c **** /* USER CODE BEGIN PV */
  55:Core/Src/main.c **** /* Semaphore */
  56:Core/Src/main.c **** SemaphoreHandle_t Semaphore;
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** TaskHandle_t xHandlegive = NULL;
  59:Core/Src/main.c **** TaskHandle_t xHandletake = NULL;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Notification */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  69:Core/Src/main.c **** void SystemClock_Config(void);
  70:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  71:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  72:Core/Src/main.c **** void LedBlinker (void * pvParameters);
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** void taskGive(void *pvParameters);
  75:Core/Src/main.c **** void taskTake(void *unsued);
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Fonction Give*/
  84:Core/Src/main.c **** void taskGive(void *pvParameters) {
  45              		.loc 1 84 35 view -0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 104
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		.loc 1 84 35 is_stmt 0 view .LVU1
  50 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  51              		.cfi_def_cfa_offset 20
  52              		.cfi_offset 4, -20
  53              		.cfi_offset 5, -16
  54              		.cfi_offset 6, -12
  55              		.cfi_offset 7, -8
  56              		.cfi_offset 14, -4
  57 0002 9BB0     		sub	sp, sp, #108
  58              		.cfi_def_cfa_offset 128
  59 0004 0746     		mov	r7, r0
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     int delay = (int) pvParameters;
  60              		.loc 1 86 5 is_stmt 1 view .LVU2
  61              	.LVL1:
  87:Core/Src/main.c ****     uint8_t uartTxBuffer[100];
  62              		.loc 1 87 5 view .LVU3
  88:Core/Src/main.c ****     char* s = pcTaskGetName(xTaskGetCurrentTaskHandle());
  63              		.loc 1 88 5 view .LVU4
  64              		.loc 1 88 15 is_stmt 0 view .LVU5
  65 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
  66              	.LVL2:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 4


  67              		.loc 1 88 15 view .LVU6
  68 000a FFF7FEFF 		bl	pcTaskGetName
  69              	.LVL3:
  70 000e 0546     		mov	r5, r0
  71              	.LVL4:
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****     //Gestion erreur
  91:Core/Src/main.c ****     uint16_t xCountError = 0;
  72              		.loc 1 91 5 is_stmt 1 view .LVU7
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****     //Fixation de la fréquence du sémaphore
  94:Core/Src/main.c ****     TickType_t xLastWakeTime;
  73              		.loc 1 94 5 view .LVU8
  95:Core/Src/main.c ****     xLastWakeTime =  xTaskGetTickCount();
  74              		.loc 1 95 5 view .LVU9
  75              		.loc 1 95 22 is_stmt 0 view .LVU10
  76 0010 FFF7FEFF 		bl	xTaskGetTickCount
  77              	.LVL5:
  78              		.loc 1 95 19 view .LVU11
  79 0014 0090     		str	r0, [sp]
  96:Core/Src/main.c ****     const TickType_t xFrequency = Delay;
  80              		.loc 1 96 5 is_stmt 1 view .LVU12
  81              	.LVL6:
  91:Core/Src/main.c **** 
  82              		.loc 1 91 14 is_stmt 0 view .LVU13
  83 0016 0026     		movs	r6, #0
  84 0018 2BE0     		b	.L2
  85              	.LVL7:
  86              	.L6:
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****     for(;;)
 100:Core/Src/main.c ****     {
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****       //Délais avec précision 
 103:Core/Src/main.c ****       vTaskDelayUntil(&xLastWakeTime,xFrequency);
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****       //Verification creation semaphore
 106:Core/Src/main.c ****       if ( Semaphore != NULL)
 107:Core/Src/main.c ****       {
 108:Core/Src/main.c ****       // Affichage sur console
 109:Core/Src/main.c ****       sprintf((char*)uartTxBuffer, "Je suis la tache %s avant de donner le semaphore\n", s);
  87              		.loc 1 109 7 is_stmt 1 view .LVU14
  88 001a 2A46     		mov	r2, r5
  89 001c 2549     		ldr	r1, .L7
  90 001e 01A8     		add	r0, sp, #4
  91 0020 FFF7FEFF 		bl	sprintf
  92              	.LVL8:
 110:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
  93              		.loc 1 110 7 view .LVU15
  94              		.loc 1 110 48 is_stmt 0 view .LVU16
  95 0024 01A8     		add	r0, sp, #4
  96 0026 FFF7FEFF 		bl	strlen
  97              	.LVL9:
  98              		.loc 1 110 7 view .LVU17
  99 002a 234C     		ldr	r4, .L7+4
 100 002c 4FF0FF33 		mov	r3, #-1
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 5


 101 0030 82B2     		uxth	r2, r0
 102 0032 01A9     		add	r1, sp, #4
 103 0034 2046     		mov	r0, r4
 104 0036 FFF7FEFF 		bl	HAL_UART_Transmit
 105              	.LVL10:
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****       //Prise du semaphore
 114:Core/Src/main.c ****       xSemaphoreGive(Semaphore);
 106              		.loc 1 114 7 is_stmt 1 view .LVU18
 107 003a 0023     		movs	r3, #0
 108 003c 1A46     		mov	r2, r3
 109 003e 1946     		mov	r1, r3
 110 0040 1E48     		ldr	r0, .L7+8
 111 0042 0068     		ldr	r0, [r0]
 112 0044 FFF7FEFF 		bl	xQueueGenericSend
 113              	.LVL11:
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****       //Verification avec la LED
 117:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,GPIO_PIN_RESET);
 114              		.loc 1 117 7 view .LVU19
 115 0048 0022     		movs	r2, #0
 116 004a 0221     		movs	r1, #2
 117 004c 1C48     		ldr	r0, .L7+12
 118 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 119              	.LVL12:
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****       sprintf((char*)uartTxBuffer, "Je suis la tache %s apres avoir donner semaphore tous les %d ms
 120              		.loc 1 119 7 view .LVU20
 121 0052 3B46     		mov	r3, r7
 122 0054 2A46     		mov	r2, r5
 123 0056 1B49     		ldr	r1, .L7+16
 124 0058 01A8     		add	r0, sp, #4
 125 005a FFF7FEFF 		bl	sprintf
 126              	.LVL13:
 120:Core/Src/main.c ****       HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 127              		.loc 1 120 7 view .LVU21
 128              		.loc 1 120 48 is_stmt 0 view .LVU22
 129 005e 01A8     		add	r0, sp, #4
 130 0060 FFF7FEFF 		bl	strlen
 131              	.LVL14:
 132              		.loc 1 120 7 view .LVU23
 133 0064 4FF0FF33 		mov	r3, #-1
 134 0068 82B2     		uxth	r2, r0
 135 006a 01A9     		add	r1, sp, #4
 136 006c 2046     		mov	r0, r4
 137 006e FFF7FEFF 		bl	HAL_UART_Transmit
 138              	.LVL15:
 139              	.L2:
  99:Core/Src/main.c ****     {
 140              		.loc 1 99 5 is_stmt 1 view .LVU24
 103:Core/Src/main.c **** 
 141              		.loc 1 103 7 view .LVU25
 142 0072 6421     		movs	r1, #100
 143 0074 6846     		mov	r0, sp
 144 0076 FFF7FEFF 		bl	vTaskDelayUntil
 145              	.LVL16:
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 6


 106:Core/Src/main.c ****       {
 146              		.loc 1 106 7 view .LVU26
 106:Core/Src/main.c ****       {
 147              		.loc 1 106 22 is_stmt 0 view .LVU27
 148 007a 1049     		ldr	r1, .L7+8
 149 007c 0968     		ldr	r1, [r1]
 106:Core/Src/main.c ****       {
 150              		.loc 1 106 10 view .LVU28
 151 007e 0029     		cmp	r1, #0
 152 0080 CBD1     		bne	.L6
 153              	.LBB4:
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****       }
 123:Core/Src/main.c ****       else
 124:Core/Src/main.c ****       {
 125:Core/Src/main.c ****         char *strsem = "Erreur : Semaphore non cree\n" ;
 154              		.loc 1 125 9 is_stmt 1 view .LVU29
 155              	.LVL17:
 126:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, strsem, strlen(strsem), HAL_MAX_DELAY);
 156              		.loc 1 126 9 view .LVU30
 157 0082 4FF0FF33 		mov	r3, #-1
 158 0086 1C22     		movs	r2, #28
 159 0088 0F49     		ldr	r1, .L7+20
 160 008a 0B48     		ldr	r0, .L7+4
 161 008c FFF7FEFF 		bl	HAL_UART_Transmit
 162              	.LVL18:
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****         xCountError ++ ; 
 163              		.loc 1 128 9 view .LVU31
 164              		.loc 1 128 21 is_stmt 0 view .LVU32
 165 0090 0136     		adds	r6, r6, #1
 166              	.LVL19:
 167              		.loc 1 128 21 view .LVU33
 168 0092 B6B2     		uxth	r6, r6
 169              	.LVL20:
 129:Core/Src/main.c ****         vTaskDelay(Delay/portTICK_PERIOD_MS);
 170              		.loc 1 129 9 is_stmt 1 view .LVU34
 171 0094 6420     		movs	r0, #100
 172 0096 FFF7FEFF 		bl	vTaskDelay
 173              	.LVL21:
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****         if(xCountError == 10)
 174              		.loc 1 131 9 view .LVU35
 175              		.loc 1 131 11 is_stmt 0 view .LVU36
 176 009a 0A2E     		cmp	r6, #10
 177 009c E9D1     		bne	.L2
 178              	.LBB5:
 132:Core/Src/main.c ****         {
 133:Core/Src/main.c ****           char *str = "System Reset\n" ;
 179              		.loc 1 133 11 is_stmt 1 view .LVU37
 180              	.LVL22:
 134:Core/Src/main.c ****           HAL_UART_Transmit(&huart1, str, strlen(str), HAL_MAX_DELAY);
 181              		.loc 1 134 11 view .LVU38
 182 009e 4FF0FF33 		mov	r3, #-1
 183 00a2 0D22     		movs	r2, #13
 184 00a4 0949     		ldr	r1, .L7+24
 185 00a6 0448     		ldr	r0, .L7+4
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 7


 186 00a8 FFF7FEFF 		bl	HAL_UART_Transmit
 187              	.LVL23:
 135:Core/Src/main.c ****           HAL_NVIC_SystemReset();
 188              		.loc 1 135 11 view .LVU39
 189 00ac FFF7FEFF 		bl	HAL_NVIC_SystemReset
 190              	.LVL24:
 191 00b0 DFE7     		b	.L2
 192              	.L8:
 193 00b2 00BF     		.align	2
 194              	.L7:
 195 00b4 00000000 		.word	.LC0
 196 00b8 00000000 		.word	huart1
 197 00bc 00000000 		.word	Semaphore
 198 00c0 00200240 		.word	1073881088
 199 00c4 34000000 		.word	.LC1
 200 00c8 78000000 		.word	.LC2
 201 00cc 98000000 		.word	.LC3
 202              	.LBE5:
 203              	.LBE4:
 204              		.cfi_endproc
 205              	.LFE149:
 207              		.section	.rodata.taskTake.str1.4,"aMS",%progbits,1
 208              		.align	2
 209              	.LC4:
 210 0000 4A652073 		.ascii	"Je suis la tache %s avant de prendre le semaphore\012"
 210      75697320 
 210      6C612074 
 210      61636865 
 210      20257320 
 211 0032 00       		.ascii	"\000"
 212 0033 00       		.align	2
 213              	.LC5:
 214 0034 4A652073 		.ascii	"Je suis la tache %s apres avoir pris le semaphore \012"
 214      75697320 
 214      6C612074 
 214      61636865 
 214      20257320 
 215 0067 00       		.ascii	"\000"
 216              		.section	.text.taskTake,"ax",%progbits
 217              		.align	1
 218              		.global	taskTake
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	taskTake:
 224              	.LVL25:
 225              	.LFB150:
 136:Core/Src/main.c ****         }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****         
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****       }
 141:Core/Src/main.c ****       
 142:Core/Src/main.c ****     }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c **** }
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 8


 146:Core/Src/main.c **** void taskTake(void *unsued) {
 226              		.loc 1 146 29 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 104
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		.loc 1 146 29 is_stmt 0 view .LVU41
 231 0000 30B5     		push	{r4, r5, lr}
 232              		.cfi_def_cfa_offset 12
 233              		.cfi_offset 4, -12
 234              		.cfi_offset 5, -8
 235              		.cfi_offset 14, -4
 236 0002 9BB0     		sub	sp, sp, #108
 237              		.cfi_def_cfa_offset 120
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****     uint8_t uartTxBuffer[100];
 238              		.loc 1 148 5 is_stmt 1 view .LVU42
 149:Core/Src/main.c ****     char* s = pcTaskGetName(xTaskGetCurrentTaskHandle());
 239              		.loc 1 149 5 view .LVU43
 240              		.loc 1 149 15 is_stmt 0 view .LVU44
 241 0004 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 242              	.LVL26:
 243              		.loc 1 149 15 view .LVU45
 244 0008 FFF7FEFF 		bl	pcTaskGetName
 245              	.LVL27:
 246 000c 0546     		mov	r5, r0
 247              	.LVL28:
 248              		.loc 1 149 15 view .LVU46
 249 000e 29E0     		b	.L10
 250              	.LVL29:
 251              	.L13:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****     for(;;)
 152:Core/Src/main.c ****     {
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****       //Verification creation semaphore
 155:Core/Src/main.c ****       if ( Semaphore != NULL)
 156:Core/Src/main.c ****       {
 157:Core/Src/main.c ****         // Affichage sur console
 158:Core/Src/main.c ****         sprintf((char*)uartTxBuffer, "Je suis la tache %s avant de prendre le semaphore\n", s);
 252              		.loc 1 158 9 is_stmt 1 view .LVU47
 253 0010 2A46     		mov	r2, r5
 254 0012 1749     		ldr	r1, .L14
 255 0014 01A8     		add	r0, sp, #4
 256 0016 FFF7FEFF 		bl	sprintf
 257              	.LVL30:
 159:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 258              		.loc 1 159 9 view .LVU48
 259              		.loc 1 159 50 is_stmt 0 view .LVU49
 260 001a 01A8     		add	r0, sp, #4
 261 001c FFF7FEFF 		bl	strlen
 262              	.LVL31:
 263              		.loc 1 159 9 view .LVU50
 264 0020 144C     		ldr	r4, .L14+4
 265 0022 4FF0FF33 		mov	r3, #-1
 266 0026 82B2     		uxth	r2, r0
 267 0028 01A9     		add	r1, sp, #4
 268 002a 2046     		mov	r0, r4
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 9


 269 002c FFF7FEFF 		bl	HAL_UART_Transmit
 270              	.LVL32:
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****         //Prise du semaphore
 162:Core/Src/main.c ****         xSemaphoreTake(Semaphore,HAL_MAX_DELAY);
 271              		.loc 1 162 9 is_stmt 1 view .LVU51
 272 0030 4FF0FF31 		mov	r1, #-1
 273 0034 104B     		ldr	r3, .L14+8
 274 0036 1868     		ldr	r0, [r3]
 275 0038 FFF7FEFF 		bl	xQueueSemaphoreTake
 276              	.LVL33:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****         //Verification avec la LED
 165:Core/Src/main.c ****         HAL_GPIO_WritePin(LED_GPIO_Port,LED_Pin,GPIO_PIN_SET);
 277              		.loc 1 165 9 view .LVU52
 278 003c 0122     		movs	r2, #1
 279 003e 0221     		movs	r1, #2
 280 0040 0E48     		ldr	r0, .L14+12
 281 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
 282              	.LVL34:
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****         sprintf((char*)uartTxBuffer, "Je suis la tache %s apres avoir pris le semaphore \n", s);
 283              		.loc 1 167 9 view .LVU53
 284 0046 2A46     		mov	r2, r5
 285 0048 0D49     		ldr	r1, .L14+16
 286 004a 01A8     		add	r0, sp, #4
 287 004c FFF7FEFF 		bl	sprintf
 288              	.LVL35:
 168:Core/Src/main.c ****         HAL_UART_Transmit(&huart1, uartTxBuffer, strlen((char*)uartTxBuffer), HAL_MAX_DELAY);
 289              		.loc 1 168 9 view .LVU54
 290              		.loc 1 168 50 is_stmt 0 view .LVU55
 291 0050 01A8     		add	r0, sp, #4
 292 0052 FFF7FEFF 		bl	strlen
 293              	.LVL36:
 294              		.loc 1 168 9 view .LVU56
 295 0056 4FF0FF33 		mov	r3, #-1
 296 005a 82B2     		uxth	r2, r0
 297 005c 01A9     		add	r1, sp, #4
 298 005e 2046     		mov	r0, r4
 299 0060 FFF7FEFF 		bl	HAL_UART_Transmit
 300              	.LVL37:
 301              	.L10:
 151:Core/Src/main.c ****     {
 302              		.loc 1 151 5 is_stmt 1 view .LVU57
 155:Core/Src/main.c ****       {
 303              		.loc 1 155 7 view .LVU58
 155:Core/Src/main.c ****       {
 304              		.loc 1 155 22 is_stmt 0 view .LVU59
 305 0064 044B     		ldr	r3, .L14+8
 306 0066 1B68     		ldr	r3, [r3]
 155:Core/Src/main.c ****       {
 307              		.loc 1 155 10 view .LVU60
 308 0068 002B     		cmp	r3, #0
 309 006a D1D1     		bne	.L13
 310 006c FAE7     		b	.L10
 311              	.L15:
 312 006e 00BF     		.align	2
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 10


 313              	.L14:
 314 0070 00000000 		.word	.LC4
 315 0074 00000000 		.word	huart1
 316 0078 00000000 		.word	Semaphore
 317 007c 00200240 		.word	1073881088
 318 0080 34000000 		.word	.LC5
 319              		.cfi_endproc
 320              	.LFE150:
 322              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 323              		.align	1
 324              		.global	HAL_TIM_PeriodElapsedCallback
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	HAL_TIM_PeriodElapsedCallback:
 330              	.LVL38:
 331              	.LFB153:
 169:Core/Src/main.c ****       
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****       }
 172:Core/Src/main.c ****   }
 173:Core/Src/main.c **** }
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** 
 176:Core/Src/main.c **** /* USER CODE END 0 */
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** /**
 179:Core/Src/main.c ****   * @brief  The application entry point.
 180:Core/Src/main.c ****   * @retval int
 181:Core/Src/main.c ****   */
 182:Core/Src/main.c **** int main(void)
 183:Core/Src/main.c **** {
 184:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /* USER CODE END 1 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 189:Core/Src/main.c **** 
 190:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 191:Core/Src/main.c ****   HAL_Init();
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END Init */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* Configure the system clock */
 198:Core/Src/main.c ****   SystemClock_Config();
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE END SysInit */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* Initialize all configured peripherals */
 205:Core/Src/main.c ****   MX_GPIO_Init();
 206:Core/Src/main.c ****   MX_USART1_UART_Init();
 207:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 208:Core/Src/main.c **** 
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 11


 209:Core/Src/main.c ****   // Create binary semaphore before starting task
 210:Core/Src/main.c ****   Semaphore = xSemaphoreCreateBinary(); 
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* Create a taskGive*/
 213:Core/Src/main.c ****   xTaskCreate(
 214:Core/Src/main.c ****           taskGive,       // Function to be called
 215:Core/Src/main.c ****           "Give",         // Name of task
 216:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 217:Core/Src/main.c ****           (void*) Delay,  // Parameter to pass to function
 218:Core/Src/main.c ****           3,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 219:Core/Src/main.c ****           &xHandlegive       // Task handle (allows to find and manipulate the task)
 220:Core/Src/main.c ****           );
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   /* Create a taskTake*/
 223:Core/Src/main.c ****   xTaskCreate(
 224:Core/Src/main.c ****           taskTake,       // Function to be called
 225:Core/Src/main.c ****           "Take",         // Name of task
 226:Core/Src/main.c ****           STACK_SIZE,     // Stack size
 227:Core/Src/main.c ****           NULL,           // Parameter to pass to function
 228:Core/Src/main.c ****           2,              // Task priority 0 to configMAX_PRIORITIES - 1 (FreeRTOSConfig.h)
 229:Core/Src/main.c ****           &xHandletake       // Task handle (allows to find and manipulate the task)
 230:Core/Src/main.c ****           );
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   /* USER CODE END 2 */
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /* Call init function for freertos objects (in freertos.c) */
 235:Core/Src/main.c ****   MX_FREERTOS_Init();
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* Start scheduler */
 238:Core/Src/main.c ****   osKernelStart();
 239:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 240:Core/Src/main.c ****   /* Infinite loop */
 241:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 242:Core/Src/main.c ****   /* Redirect stdout to UART */
 243:Core/Src/main.c **** 
 244:Core/Src/main.c ****   while (1)
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     // HAL_Delay(1000);
 247:Core/Src/main.c ****     // HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin);
 248:Core/Src/main.c ****     /* USER CODE END WHILE */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c ****   /* USER CODE END 3 */
 253:Core/Src/main.c **** }
 254:Core/Src/main.c **** 
 255:Core/Src/main.c **** /**
 256:Core/Src/main.c ****   * @brief System Clock Configuration
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c **** void SystemClock_Config(void)
 260:Core/Src/main.c **** {
 261:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 262:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 265:Core/Src/main.c ****   */
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 12


 266:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 267:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 270:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 271:Core/Src/main.c ****   */
 272:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 273:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 279:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 280:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 281:Core/Src/main.c ****   {
 282:Core/Src/main.c ****     Error_Handler();
 283:Core/Src/main.c ****   }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /** Activate the Over-Drive mode
 286:Core/Src/main.c ****   */
 287:Core/Src/main.c ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 288:Core/Src/main.c ****   {
 289:Core/Src/main.c ****     Error_Handler();
 290:Core/Src/main.c ****   }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 293:Core/Src/main.c ****   */
 294:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 295:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 296:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 297:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 299:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 302:Core/Src/main.c ****   {
 303:Core/Src/main.c ****     Error_Handler();
 304:Core/Src/main.c ****   }
 305:Core/Src/main.c **** }
 306:Core/Src/main.c **** 
 307:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** /* USER CODE END 4 */
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /**
 312:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 313:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 314:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 315:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 316:Core/Src/main.c ****   * @param  htim : TIM handle
 317:Core/Src/main.c ****   * @retval None
 318:Core/Src/main.c ****   */
 319:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 320:Core/Src/main.c **** {
 332              		.loc 1 320 1 is_stmt 1 view -0
 333              		.cfi_startproc
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 13


 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		.loc 1 320 1 is_stmt 0 view .LVU62
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 321:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 324:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 341              		.loc 1 324 3 is_stmt 1 view .LVU63
 342              		.loc 1 324 11 is_stmt 0 view .LVU64
 343 0002 0268     		ldr	r2, [r0]
 344              		.loc 1 324 6 view .LVU65
 345 0004 034B     		ldr	r3, .L20
 346 0006 9A42     		cmp	r2, r3
 347 0008 00D0     		beq	.L19
 348              	.LVL39:
 349              	.L16:
 325:Core/Src/main.c ****     HAL_IncTick();
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 330:Core/Src/main.c **** }
 350              		.loc 1 330 1 view .LVU66
 351 000a 08BD     		pop	{r3, pc}
 352              	.LVL40:
 353              	.L19:
 325:Core/Src/main.c ****     HAL_IncTick();
 354              		.loc 1 325 5 is_stmt 1 view .LVU67
 355 000c FFF7FEFF 		bl	HAL_IncTick
 356              	.LVL41:
 357              		.loc 1 330 1 is_stmt 0 view .LVU68
 358 0010 FBE7     		b	.L16
 359              	.L21:
 360 0012 00BF     		.align	2
 361              	.L20:
 362 0014 00100040 		.word	1073745920
 363              		.cfi_endproc
 364              	.LFE153:
 366              		.section	.text.Error_Handler,"ax",%progbits
 367              		.align	1
 368              		.global	Error_Handler
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	Error_Handler:
 374              	.LFB154:
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** /**
 333:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 334:Core/Src/main.c ****   * @retval None
 335:Core/Src/main.c ****   */
 336:Core/Src/main.c **** void Error_Handler(void)
 337:Core/Src/main.c **** {
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 14


 375              		.loc 1 337 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ Volatile: function does not return.
 378              		@ args = 0, pretend = 0, frame = 0
 379              		@ frame_needed = 0, uses_anonymous_args = 0
 380              		@ link register save eliminated.
 338:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 339:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 340:Core/Src/main.c ****   __disable_irq();
 381              		.loc 1 340 3 view .LVU70
 382              	.LBB6:
 383              	.LBI6:
 384              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 15


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 16


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 385              		.loc 2 140 27 view .LVU71
 386              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 387              		.loc 2 142 3 view .LVU72
 388              		.syntax unified
 389              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 390 0000 72B6     		cpsid i
 391              	@ 0 "" 2
 392              		.thumb
 393              		.syntax unified
 394              	.L23:
 395              	.LBE7:
 396              	.LBE6:
 341:Core/Src/main.c ****   while (1)
 397              		.loc 1 341 3 discriminator 1 view .LVU73
 342:Core/Src/main.c ****   {
 343:Core/Src/main.c ****   }
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 17


 398              		.loc 1 343 3 discriminator 1 view .LVU74
 341:Core/Src/main.c ****   while (1)
 399              		.loc 1 341 9 discriminator 1 view .LVU75
 400 0002 FEE7     		b	.L23
 401              		.cfi_endproc
 402              	.LFE154:
 404              		.section	.text.SystemClock_Config,"ax",%progbits
 405              		.align	1
 406              		.global	SystemClock_Config
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 411              	SystemClock_Config:
 412              	.LFB152:
 260:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 413              		.loc 1 260 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 80
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 00B5     		push	{lr}
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 14, -4
 420 0002 95B0     		sub	sp, sp, #84
 421              		.cfi_def_cfa_offset 88
 261:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 422              		.loc 1 261 3 view .LVU77
 261:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 423              		.loc 1 261 22 is_stmt 0 view .LVU78
 424 0004 3022     		movs	r2, #48
 425 0006 0021     		movs	r1, #0
 426 0008 08A8     		add	r0, sp, #32
 427 000a FFF7FEFF 		bl	memset
 428              	.LVL42:
 262:Core/Src/main.c **** 
 429              		.loc 1 262 3 is_stmt 1 view .LVU79
 262:Core/Src/main.c **** 
 430              		.loc 1 262 22 is_stmt 0 view .LVU80
 431 000e 0023     		movs	r3, #0
 432 0010 0393     		str	r3, [sp, #12]
 433 0012 0493     		str	r3, [sp, #16]
 434 0014 0593     		str	r3, [sp, #20]
 435 0016 0693     		str	r3, [sp, #24]
 436 0018 0793     		str	r3, [sp, #28]
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 437              		.loc 1 266 3 is_stmt 1 view .LVU81
 438              	.LBB8:
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 439              		.loc 1 266 3 view .LVU82
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 440              		.loc 1 266 3 view .LVU83
 441 001a 234B     		ldr	r3, .L32
 442 001c 1A6C     		ldr	r2, [r3, #64]
 443 001e 42F08052 		orr	r2, r2, #268435456
 444 0022 1A64     		str	r2, [r3, #64]
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 445              		.loc 1 266 3 view .LVU84
 446 0024 1B6C     		ldr	r3, [r3, #64]
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 18


 447 0026 03F08053 		and	r3, r3, #268435456
 448 002a 0193     		str	r3, [sp, #4]
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 449              		.loc 1 266 3 view .LVU85
 450 002c 019B     		ldr	r3, [sp, #4]
 451              	.LBE8:
 266:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 452              		.loc 1 266 3 view .LVU86
 267:Core/Src/main.c **** 
 453              		.loc 1 267 3 view .LVU87
 454              	.LBB9:
 267:Core/Src/main.c **** 
 455              		.loc 1 267 3 view .LVU88
 267:Core/Src/main.c **** 
 456              		.loc 1 267 3 view .LVU89
 457 002e 1F4B     		ldr	r3, .L32+4
 458 0030 1A68     		ldr	r2, [r3]
 459 0032 42F44042 		orr	r2, r2, #49152
 460 0036 1A60     		str	r2, [r3]
 267:Core/Src/main.c **** 
 461              		.loc 1 267 3 view .LVU90
 462 0038 1B68     		ldr	r3, [r3]
 463 003a 03F44043 		and	r3, r3, #49152
 464 003e 0293     		str	r3, [sp, #8]
 267:Core/Src/main.c **** 
 465              		.loc 1 267 3 view .LVU91
 466 0040 029B     		ldr	r3, [sp, #8]
 467              	.LBE9:
 267:Core/Src/main.c **** 
 468              		.loc 1 267 3 view .LVU92
 272:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 469              		.loc 1 272 3 view .LVU93
 272:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 470              		.loc 1 272 36 is_stmt 0 view .LVU94
 471 0042 0123     		movs	r3, #1
 472 0044 0893     		str	r3, [sp, #32]
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 473              		.loc 1 273 3 is_stmt 1 view .LVU95
 273:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 474              		.loc 1 273 30 is_stmt 0 view .LVU96
 475 0046 4FF48033 		mov	r3, #65536
 476 004a 0993     		str	r3, [sp, #36]
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 477              		.loc 1 274 3 is_stmt 1 view .LVU97
 274:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 478              		.loc 1 274 34 is_stmt 0 view .LVU98
 479 004c 0223     		movs	r3, #2
 480 004e 0E93     		str	r3, [sp, #56]
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 481              		.loc 1 275 3 is_stmt 1 view .LVU99
 275:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 482              		.loc 1 275 35 is_stmt 0 view .LVU100
 483 0050 4FF48002 		mov	r2, #4194304
 484 0054 0F92     		str	r2, [sp, #60]
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
 485              		.loc 1 276 3 is_stmt 1 view .LVU101
 276:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 432;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 19


 486              		.loc 1 276 30 is_stmt 0 view .LVU102
 487 0056 1922     		movs	r2, #25
 488 0058 1092     		str	r2, [sp, #64]
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 489              		.loc 1 277 3 is_stmt 1 view .LVU103
 277:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 490              		.loc 1 277 30 is_stmt 0 view .LVU104
 491 005a 4FF4D872 		mov	r2, #432
 492 005e 1192     		str	r2, [sp, #68]
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 493              		.loc 1 278 3 is_stmt 1 view .LVU105
 278:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 494              		.loc 1 278 30 is_stmt 0 view .LVU106
 495 0060 1293     		str	r3, [sp, #72]
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 496              		.loc 1 279 3 is_stmt 1 view .LVU107
 279:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 497              		.loc 1 279 30 is_stmt 0 view .LVU108
 498 0062 1393     		str	r3, [sp, #76]
 280:Core/Src/main.c ****   {
 499              		.loc 1 280 3 is_stmt 1 view .LVU109
 280:Core/Src/main.c ****   {
 500              		.loc 1 280 7 is_stmt 0 view .LVU110
 501 0064 08A8     		add	r0, sp, #32
 502 0066 FFF7FEFF 		bl	HAL_RCC_OscConfig
 503              	.LVL43:
 280:Core/Src/main.c ****   {
 504              		.loc 1 280 6 view .LVU111
 505 006a B0B9     		cbnz	r0, .L29
 287:Core/Src/main.c ****   {
 506              		.loc 1 287 3 is_stmt 1 view .LVU112
 287:Core/Src/main.c ****   {
 507              		.loc 1 287 7 is_stmt 0 view .LVU113
 508 006c FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 509              	.LVL44:
 287:Core/Src/main.c ****   {
 510              		.loc 1 287 6 view .LVU114
 511 0070 A8B9     		cbnz	r0, .L30
 294:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 512              		.loc 1 294 3 is_stmt 1 view .LVU115
 294:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 513              		.loc 1 294 31 is_stmt 0 view .LVU116
 514 0072 0F23     		movs	r3, #15
 515 0074 0393     		str	r3, [sp, #12]
 296:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 516              		.loc 1 296 3 is_stmt 1 view .LVU117
 296:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 517              		.loc 1 296 34 is_stmt 0 view .LVU118
 518 0076 0223     		movs	r3, #2
 519 0078 0493     		str	r3, [sp, #16]
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 520              		.loc 1 297 3 is_stmt 1 view .LVU119
 297:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 521              		.loc 1 297 35 is_stmt 0 view .LVU120
 522 007a 0023     		movs	r3, #0
 523 007c 0593     		str	r3, [sp, #20]
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 20


 524              		.loc 1 298 3 is_stmt 1 view .LVU121
 298:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 525              		.loc 1 298 36 is_stmt 0 view .LVU122
 526 007e 4FF4A053 		mov	r3, #5120
 527 0082 0693     		str	r3, [sp, #24]
 299:Core/Src/main.c **** 
 528              		.loc 1 299 3 is_stmt 1 view .LVU123
 299:Core/Src/main.c **** 
 529              		.loc 1 299 36 is_stmt 0 view .LVU124
 530 0084 4FF48053 		mov	r3, #4096
 531 0088 0793     		str	r3, [sp, #28]
 301:Core/Src/main.c ****   {
 532              		.loc 1 301 3 is_stmt 1 view .LVU125
 301:Core/Src/main.c ****   {
 533              		.loc 1 301 7 is_stmt 0 view .LVU126
 534 008a 0721     		movs	r1, #7
 535 008c 03A8     		add	r0, sp, #12
 536 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 537              	.LVL45:
 301:Core/Src/main.c ****   {
 538              		.loc 1 301 6 view .LVU127
 539 0092 30B9     		cbnz	r0, .L31
 305:Core/Src/main.c **** 
 540              		.loc 1 305 1 view .LVU128
 541 0094 15B0     		add	sp, sp, #84
 542              		.cfi_remember_state
 543              		.cfi_def_cfa_offset 4
 544              		@ sp needed
 545 0096 5DF804FB 		ldr	pc, [sp], #4
 546              	.L29:
 547              		.cfi_restore_state
 282:Core/Src/main.c ****   }
 548              		.loc 1 282 5 is_stmt 1 view .LVU129
 549 009a FFF7FEFF 		bl	Error_Handler
 550              	.LVL46:
 551              	.L30:
 289:Core/Src/main.c ****   }
 552              		.loc 1 289 5 view .LVU130
 553 009e FFF7FEFF 		bl	Error_Handler
 554              	.LVL47:
 555              	.L31:
 303:Core/Src/main.c ****   }
 556              		.loc 1 303 5 view .LVU131
 557 00a2 FFF7FEFF 		bl	Error_Handler
 558              	.LVL48:
 559              	.L33:
 560 00a6 00BF     		.align	2
 561              	.L32:
 562 00a8 00380240 		.word	1073887232
 563 00ac 00700040 		.word	1073770496
 564              		.cfi_endproc
 565              	.LFE152:
 567              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 568              		.align	2
 569              	.LC6:
 570 0000 47697665 		.ascii	"Give\000"
 570      00
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 21


 571 0005 000000   		.align	2
 572              	.LC7:
 573 0008 54616B65 		.ascii	"Take\000"
 573      00
 574              		.section	.text.main,"ax",%progbits
 575              		.align	1
 576              		.global	main
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	main:
 582              	.LFB151:
 183:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 583              		.loc 1 183 1 view -0
 584              		.cfi_startproc
 585              		@ Volatile: function does not return.
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588 0000 00B5     		push	{lr}
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 14, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              		.cfi_def_cfa_offset 16
 191:Core/Src/main.c **** 
 593              		.loc 1 191 3 view .LVU133
 594 0004 FFF7FEFF 		bl	HAL_Init
 595              	.LVL49:
 198:Core/Src/main.c **** 
 596              		.loc 1 198 3 view .LVU134
 597 0008 FFF7FEFF 		bl	SystemClock_Config
 598              	.LVL50:
 205:Core/Src/main.c ****   MX_USART1_UART_Init();
 599              		.loc 1 205 3 view .LVU135
 600 000c FFF7FEFF 		bl	MX_GPIO_Init
 601              	.LVL51:
 206:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 602              		.loc 1 206 3 view .LVU136
 603 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 604              	.LVL52:
 210:Core/Src/main.c **** 
 605              		.loc 1 210 3 view .LVU137
 210:Core/Src/main.c **** 
 606              		.loc 1 210 15 is_stmt 0 view .LVU138
 607 0014 0322     		movs	r2, #3
 608 0016 0021     		movs	r1, #0
 609 0018 0120     		movs	r0, #1
 610 001a FFF7FEFF 		bl	xQueueGenericCreate
 611              	.LVL53:
 210:Core/Src/main.c **** 
 612              		.loc 1 210 13 view .LVU139
 613 001e 0E4B     		ldr	r3, .L37
 614 0020 1860     		str	r0, [r3]
 213:Core/Src/main.c ****           taskGive,       // Function to be called
 615              		.loc 1 213 3 is_stmt 1 view .LVU140
 616 0022 0E4B     		ldr	r3, .L37+4
 617 0024 0193     		str	r3, [sp, #4]
 618 0026 0323     		movs	r3, #3
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 22


 619 0028 0093     		str	r3, [sp]
 620 002a 6423     		movs	r3, #100
 621 002c 4FF47A72 		mov	r2, #1000
 622 0030 0B49     		ldr	r1, .L37+8
 623 0032 0C48     		ldr	r0, .L37+12
 624 0034 FFF7FEFF 		bl	xTaskCreate
 625              	.LVL54:
 223:Core/Src/main.c ****           taskTake,       // Function to be called
 626              		.loc 1 223 3 view .LVU141
 627 0038 0B4B     		ldr	r3, .L37+16
 628 003a 0193     		str	r3, [sp, #4]
 629 003c 0223     		movs	r3, #2
 630 003e 0093     		str	r3, [sp]
 631 0040 0023     		movs	r3, #0
 632 0042 4FF47A72 		mov	r2, #1000
 633 0046 0949     		ldr	r1, .L37+20
 634 0048 0948     		ldr	r0, .L37+24
 635 004a FFF7FEFF 		bl	xTaskCreate
 636              	.LVL55:
 235:Core/Src/main.c **** 
 637              		.loc 1 235 3 view .LVU142
 638 004e FFF7FEFF 		bl	MX_FREERTOS_Init
 639              	.LVL56:
 238:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 640              		.loc 1 238 3 view .LVU143
 641 0052 FFF7FEFF 		bl	osKernelStart
 642              	.LVL57:
 643              	.L35:
 244:Core/Src/main.c ****   {
 644              		.loc 1 244 3 discriminator 1 view .LVU144
 251:Core/Src/main.c ****   /* USER CODE END 3 */
 645              		.loc 1 251 3 discriminator 1 view .LVU145
 244:Core/Src/main.c ****   {
 646              		.loc 1 244 9 discriminator 1 view .LVU146
 647 0056 FEE7     		b	.L35
 648              	.L38:
 649              		.align	2
 650              	.L37:
 651 0058 00000000 		.word	Semaphore
 652 005c 00000000 		.word	xHandlegive
 653 0060 00000000 		.word	.LC6
 654 0064 00000000 		.word	taskGive
 655 0068 00000000 		.word	xHandletake
 656 006c 08000000 		.word	.LC7
 657 0070 00000000 		.word	taskTake
 658              		.cfi_endproc
 659              	.LFE151:
 661              		.global	xHandletake
 662              		.section	.bss.xHandletake,"aw",%nobits
 663              		.align	2
 666              	xHandletake:
 667 0000 00000000 		.space	4
 668              		.global	xHandlegive
 669              		.section	.bss.xHandlegive,"aw",%nobits
 670              		.align	2
 673              	xHandlegive:
 674 0000 00000000 		.space	4
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 23


 675              		.global	Semaphore
 676              		.section	.bss.Semaphore,"aw",%nobits
 677              		.align	2
 680              	Semaphore:
 681 0000 00000000 		.space	4
 682              		.text
 683              	.Letext0:
 684              		.file 3 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 685              		.file 4 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 686              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 687              		.file 6 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpa
 688              		.file 7 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 689              		.file 8 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 690              		.file 9 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 691              		.file 10 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 692              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 693              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 694              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 695              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 696              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM7/r0p1/portmacro.h"
 697              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 698              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 699              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 700              		.file 19 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 701              		.file 20 "Core/Inc/usart.h"
 702              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pwr_ex.h"
 703              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 704              		.file 23 "Core/Inc/gpio.h"
 705              		.file 24 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 706              		.file 25 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 707              		.file 26 "c:\\users\\billa\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xp
 708              		.file 27 "<built-in>"
ARM GAS  C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:21     .rodata.taskGive.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:36     .text.taskGive:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:42     .text.taskGive:0000000000000000 taskGive
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:195    .text.taskGive:00000000000000b4 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:680    .bss.Semaphore:0000000000000000 Semaphore
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:208    .rodata.taskTake.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:217    .text.taskTake:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:223    .text.taskTake:0000000000000000 taskTake
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:314    .text.taskTake:0000000000000070 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:323    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:329    .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:362    .text.HAL_TIM_PeriodElapsedCallback:0000000000000014 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:367    .text.Error_Handler:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:373    .text.Error_Handler:0000000000000000 Error_Handler
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:405    .text.SystemClock_Config:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:411    .text.SystemClock_Config:0000000000000000 SystemClock_Config
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:562    .text.SystemClock_Config:00000000000000a8 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:568    .rodata.main.str1.4:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:575    .text.main:0000000000000000 $t
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:581    .text.main:0000000000000000 main
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:651    .text.main:0000000000000058 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:673    .bss.xHandlegive:0000000000000000 xHandlegive
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:666    .bss.xHandletake:0000000000000000 xHandletake
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:663    .bss.xHandletake:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:670    .bss.xHandlegive:0000000000000000 $d
C:\Users\billa\AppData\Local\Temp\ccYAFyOu.s:677    .bss.Semaphore:0000000000000000 $d

UNDEFINED SYMBOLS
xTaskGetCurrentTaskHandle
pcTaskGetName
xTaskGetTickCount
sprintf
strlen
HAL_UART_Transmit
xQueueGenericSend
HAL_GPIO_WritePin
vTaskDelayUntil
vTaskDelay
HAL_NVIC_SystemReset
huart1
xQueueSemaphoreTake
HAL_IncTick
memset
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
xQueueGenericCreate
xTaskCreate
MX_FREERTOS_Init
osKernelStart
